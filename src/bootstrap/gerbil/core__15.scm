(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32698_)
      (let* ((_g3270332722_
              (lambda (_g3270432718_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3270432718_)))
             (_g3270232768_
              (lambda (_g3270432726_)
                (if (gx#stx-pair? _g3270432726_)
                    (let ((_e3271132729_ (gx#syntax-e _g3270432726_)))
                      (let ((_hd3271232733_ (##car _e3271132729_))
                            (_tl3271332736_ (##cdr _e3271132729_)))
                        (if (gx#stx-pair? _tl3271332736_)
                            (let ((_e3271432739_ (gx#syntax-e _tl3271332736_)))
                              (let ((_hd3271532743_ (##car _e3271432739_))
                                    (_tl3271632746_ (##cdr _e3271432739_)))
                                ((lambda (_L32749_ _L32751_ _L32752_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32751_
                                                     (cons (cons _L32752_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32749_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32751_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3271632746_
                                 _hd3271532743_
                                 _hd3271232733_)))
                            (_g3270332722_ _g3270432726_))))
                    (_g3270332722_ _g3270432726_))))
             (_g3270132789_
              (lambda (_g3270432772_)
                (if (gx#stx-pair? _g3270432772_)
                    (let ((_e3270532775_ (gx#syntax-e _g3270432772_)))
                      (let ((_hd3270632779_ (##car _e3270532775_))
                            (_tl3270732782_ (##cdr _e3270532775_)))
                        (if (gx#stx-null? _tl3270732782_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3270232768_ _g3270432772_))))
                    (_g3270232768_ _g3270432772_)))))
        (_g3270132789_ _$stx32698_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32793_)
      (let* ((_g3279832838_
              (lambda (_g3279932834_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3279932834_)))
             (_g3279732939_
              (lambda (_g3279932842_)
                (if (gx#stx-pair? _g3279932842_)
                    (let ((_e3281532845_ (gx#syntax-e _g3279932842_)))
                      (let ((_hd3281632849_ (##car _e3281532845_))
                            (_tl3281732852_ (##cdr _e3281532845_)))
                        (if (gx#stx-pair? _tl3281732852_)
                            (let ((_e3281832855_ (gx#syntax-e _tl3281732852_)))
                              (let ((_hd3281932859_ (##car _e3281832855_))
                                    (_tl3282032862_ (##cdr _e3281832855_)))
                                (if (gx#stx-pair? _hd3281932859_)
                                    (let ((_e3282132865_
                                           (gx#syntax-e _hd3281932859_)))
                                      (let ((_hd3282232869_
                                             (##car _e3282132865_))
                                            (_tl3282332872_
                                             (##cdr _e3282132865_)))
                                        (if (gx#stx-pair/null? _tl3282032862_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3282032862_)
                                                      '0)
                                                (let ((_g35383_
                                                       (gx#syntax-split-splice
                                                        _tl3282032862_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35384_
                                                           (values-count
                                                            _g35383_)))
                                                      (if (not (fx= _g35384_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35384_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3282432875_
                                                           (values-ref
                                                            _g35383_
                                                            0))
                                                          (_tl3282632878_
                                                           (values-ref
                                                            _g35383_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3282632878_)
                                                          (letrec ((_loop3282732881_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3282532885_ _body3283132888_)
                              (if (gx#stx-pair? _hd3282532885_)
                                  (let ((_e3282832891_
                                         (gx#syntax-e _hd3282532885_)))
                                    (let ((_lp-hd3282932895_
                                           (##car _e3282832891_))
                                          (_lp-tl3283032898_
                                           (##cdr _e3282832891_)))
                                      (_loop3282732881_
                                       _lp-tl3283032898_
                                       (cons _lp-hd3282932895_
                                             _body3283132888_))))
                                  (let ((_body3283232901_
                                         (reverse _body3283132888_)))
                                    ((lambda (_L32905_
                                              _L32907_
                                              _L32908_
                                              _L32909_)
                                       (if (gx#identifier? _L32908_)
                                           (cons _L32909_
                                                 (cons _L32908_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32907_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3293032933_ _g3293132936_)
                                            (cons _g3293032933_ _g3293132936_))
                                          '()
                                          _L32905_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3279832838_ _g3279932842_)))
                                     _body3283232901_
                                     _tl3282332872_
                                     _hd3282232869_
                                     _hd3281632849_))))))
                    (_loop3282732881_ _target3282432875_ '()))
                  (_g3279832838_ _g3279932842_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3279832838_ _g3279932842_))
                                            (_g3279832838_ _g3279932842_))))
                                    (_g3279832838_ _g3279932842_))))
                            (_g3279832838_ _g3279932842_))))
                    (_g3279832838_ _g3279932842_))))
             (_g3279632993_
              (lambda (_g3279932943_)
                (if (gx#stx-pair? _g3279932943_)
                    (let ((_e3280232946_ (gx#syntax-e _g3279932943_)))
                      (let ((_hd3280332950_ (##car _e3280232946_))
                            (_tl3280432953_ (##cdr _e3280232946_)))
                        (if (gx#stx-pair? _tl3280432953_)
                            (let ((_e3280532956_ (gx#syntax-e _tl3280432953_)))
                              (let ((_hd3280632960_ (##car _e3280532956_))
                                    (_tl3280732963_ (##cdr _e3280532956_)))
                                (if (gx#stx-pair? _tl3280732963_)
                                    (let ((_e3280832966_
                                           (gx#syntax-e _tl3280732963_)))
                                      (let ((_hd3280932970_
                                             (##car _e3280832966_))
                                            (_tl3281032973_
                                             (##cdr _e3280832966_)))
                                        (if (gx#stx-null? _tl3281032973_)
                                            ((lambda (_L32976_ _L32978_)
                                               (if (gx#identifier? _L32978_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32978_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L32976_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3279732939_
                                                    _g3279932943_)))
                                             _hd3280932970_
                                             _hd3280632960_)
                                            (_g3279732939_ _g3279932943_))))
                                    (_g3279732939_ _g3279932943_))))
                            (_g3279732939_ _g3279932943_))))
                    (_g3279732939_ _g3279932943_)))))
        (_g3279632993_ _$stx32793_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx32998_)
      (let* ((_g3300333043_
              (lambda (_g3300433039_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3300433039_)))
             (_g3300233144_
              (lambda (_g3300433047_)
                (if (gx#stx-pair? _g3300433047_)
                    (let ((_e3302033050_ (gx#syntax-e _g3300433047_)))
                      (let ((_hd3302133054_ (##car _e3302033050_))
                            (_tl3302233057_ (##cdr _e3302033050_)))
                        (if (gx#stx-pair? _tl3302233057_)
                            (let ((_e3302333060_ (gx#syntax-e _tl3302233057_)))
                              (let ((_hd3302433064_ (##car _e3302333060_))
                                    (_tl3302533067_ (##cdr _e3302333060_)))
                                (if (gx#stx-pair? _hd3302433064_)
                                    (let ((_e3302633070_
                                           (gx#syntax-e _hd3302433064_)))
                                      (let ((_hd3302733074_
                                             (##car _e3302633070_))
                                            (_tl3302833077_
                                             (##cdr _e3302633070_)))
                                        (if (gx#stx-pair/null? _tl3302533067_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3302533067_)
                                                      '0)
                                                (let ((_g35385_
                                                       (gx#syntax-split-splice
                                                        _tl3302533067_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35386_
                                                           (values-count
                                                            _g35385_)))
                                                      (if (not (fx= _g35386_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35386_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3302933080_
                                                           (values-ref
                                                            _g35385_
                                                            0))
                                                          (_tl3303133083_
                                                           (values-ref
                                                            _g35385_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3303133083_)
                                                          (letrec ((_loop3303233086_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3303033090_ _body3303633093_)
                              (if (gx#stx-pair? _hd3303033090_)
                                  (let ((_e3303333096_
                                         (gx#syntax-e _hd3303033090_)))
                                    (let ((_lp-hd3303433100_
                                           (##car _e3303333096_))
                                          (_lp-tl3303533103_
                                           (##cdr _e3303333096_)))
                                      (_loop3303233086_
                                       _lp-tl3303533103_
                                       (cons _lp-hd3303433100_
                                             _body3303633093_))))
                                  (let ((_body3303733106_
                                         (reverse _body3303633093_)))
                                    ((lambda (_L33110_
                                              _L33112_
                                              _L33113_
                                              _L33114_)
                                       (if (gx#identifier? _L33113_)
                                           (cons _L33114_
                                                 (cons _L33113_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33112_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3313533138_ _g3313633141_)
                                            (cons _g3313533138_ _g3313633141_))
                                          '()
                                          _L33110_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3300333043_ _g3300433047_)))
                                     _body3303733106_
                                     _tl3302833077_
                                     _hd3302733074_
                                     _hd3302133054_))))))
                    (_loop3303233086_ _target3302933080_ '()))
                  (_g3300333043_ _g3300433047_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3300333043_ _g3300433047_))
                                            (_g3300333043_ _g3300433047_))))
                                    (_g3300333043_ _g3300433047_))))
                            (_g3300333043_ _g3300433047_))))
                    (_g3300333043_ _g3300433047_))))
             (_g3300133198_
              (lambda (_g3300433148_)
                (if (gx#stx-pair? _g3300433148_)
                    (let ((_e3300733151_ (gx#syntax-e _g3300433148_)))
                      (let ((_hd3300833155_ (##car _e3300733151_))
                            (_tl3300933158_ (##cdr _e3300733151_)))
                        (if (gx#stx-pair? _tl3300933158_)
                            (let ((_e3301033161_ (gx#syntax-e _tl3300933158_)))
                              (let ((_hd3301133165_ (##car _e3301033161_))
                                    (_tl3301233168_ (##cdr _e3301033161_)))
                                (if (gx#stx-pair? _tl3301233168_)
                                    (let ((_e3301333171_
                                           (gx#syntax-e _tl3301233168_)))
                                      (let ((_hd3301433175_
                                             (##car _e3301333171_))
                                            (_tl3301533178_
                                             (##cdr _e3301333171_)))
                                        (if (gx#stx-null? _tl3301533178_)
                                            ((lambda (_L33181_ _L33183_)
                                               (if (gx#identifier? _L33183_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33183_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L33181_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3300233144_
                                                    _g3300433148_)))
                                             _hd3301433175_
                                             _hd3301133165_)
                                            (_g3300233144_ _g3300433148_))))
                                    (_g3300233144_ _g3300433148_))))
                            (_g3300233144_ _g3300433148_))))
                    (_g3300233144_ _g3300433148_)))))
        (_g3300133198_ _$stx32998_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx33203_)
      (let* ((_g3320833248_
              (lambda (_g3320933244_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3320933244_)))
             (_g3320733349_
              (lambda (_g3320933252_)
                (if (gx#stx-pair? _g3320933252_)
                    (let ((_e3322533255_ (gx#syntax-e _g3320933252_)))
                      (let ((_hd3322633259_ (##car _e3322533255_))
                            (_tl3322733262_ (##cdr _e3322533255_)))
                        (if (gx#stx-pair? _tl3322733262_)
                            (let ((_e3322833265_ (gx#syntax-e _tl3322733262_)))
                              (let ((_hd3322933269_ (##car _e3322833265_))
                                    (_tl3323033272_ (##cdr _e3322833265_)))
                                (if (gx#stx-pair? _hd3322933269_)
                                    (let ((_e3323133275_
                                           (gx#syntax-e _hd3322933269_)))
                                      (let ((_hd3323233279_
                                             (##car _e3323133275_))
                                            (_tl3323333282_
                                             (##cdr _e3323133275_)))
                                        (if (gx#stx-pair/null? _tl3323033272_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3323033272_)
                                                      '0)
                                                (let ((_g35387_
                                                       (gx#syntax-split-splice
                                                        _tl3323033272_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35388_
                                                           (values-count
                                                            _g35387_)))
                                                      (if (not (fx= _g35388_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35388_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3323433285_
                                                           (values-ref
                                                            _g35387_
                                                            0))
                                                          (_tl3323633288_
                                                           (values-ref
                                                            _g35387_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3323633288_)
                                                          (letrec ((_loop3323733291_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3323533295_ _body3324133298_)
                              (if (gx#stx-pair? _hd3323533295_)
                                  (let ((_e3323833301_
                                         (gx#syntax-e _hd3323533295_)))
                                    (let ((_lp-hd3323933305_
                                           (##car _e3323833301_))
                                          (_lp-tl3324033308_
                                           (##cdr _e3323833301_)))
                                      (_loop3323733291_
                                       _lp-tl3324033308_
                                       (cons _lp-hd3323933305_
                                             _body3324133298_))))
                                  (let ((_body3324233311_
                                         (reverse _body3324133298_)))
                                    ((lambda (_L33315_
                                              _L33317_
                                              _L33318_
                                              _L33319_)
                                       (if (gx#identifier? _L33318_)
                                           (cons _L33319_
                                                 (cons _L33318_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33317_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3334033343_ _g3334133346_)
                                            (cons _g3334033343_ _g3334133346_))
                                          '()
                                          _L33315_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3320833248_ _g3320933252_)))
                                     _body3324233311_
                                     _tl3323333282_
                                     _hd3323233279_
                                     _hd3322633259_))))))
                    (_loop3323733291_ _target3323433285_ '()))
                  (_g3320833248_ _g3320933252_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3320833248_ _g3320933252_))
                                            (_g3320833248_ _g3320933252_))))
                                    (_g3320833248_ _g3320933252_))))
                            (_g3320833248_ _g3320933252_))))
                    (_g3320833248_ _g3320933252_))))
             (_g3320633403_
              (lambda (_g3320933353_)
                (if (gx#stx-pair? _g3320933353_)
                    (let ((_e3321233356_ (gx#syntax-e _g3320933353_)))
                      (let ((_hd3321333360_ (##car _e3321233356_))
                            (_tl3321433363_ (##cdr _e3321233356_)))
                        (if (gx#stx-pair? _tl3321433363_)
                            (let ((_e3321533366_ (gx#syntax-e _tl3321433363_)))
                              (let ((_hd3321633370_ (##car _e3321533366_))
                                    (_tl3321733373_ (##cdr _e3321533366_)))
                                (if (gx#stx-pair? _tl3321733373_)
                                    (let ((_e3321833376_
                                           (gx#syntax-e _tl3321733373_)))
                                      (let ((_hd3321933380_
                                             (##car _e3321833376_))
                                            (_tl3322033383_
                                             (##cdr _e3321833376_)))
                                        (if (gx#stx-null? _tl3322033383_)
                                            ((lambda (_L33386_ _L33388_)
                                               (if (gx#identifier? _L33388_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33388_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L33386_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3320733349_
                                                    _g3320933353_)))
                                             _hd3321933380_
                                             _hd3321633370_)
                                            (_g3320733349_ _g3320933353_))))
                                    (_g3320733349_ _g3320933353_))))
                            (_g3320733349_ _g3320933353_))))
                    (_g3320733349_ _g3320933353_)))))
        (_g3320633403_ _$stx33203_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx33408_)
       (let* ((_g3341133431_
               (lambda (_g3341233427_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3341233427_)))
              (_g3341033502_
               (lambda (_g3341233435_)
                 (if (gx#stx-pair? _g3341233435_)
                     (let ((_e3341433438_ (gx#syntax-e _g3341233435_)))
                       (let ((_hd3341533442_ (##car _e3341433438_))
                             (_tl3341633445_ (##cdr _e3341433438_)))
                         (if (gx#stx-pair/null? _tl3341633445_)
                             (if (fx>= (gx#stx-length _tl3341633445_) '0)
                                 (let ((_g35389_
                                        (gx#syntax-split-splice
                                         _tl3341633445_
                                         '0)))
                                   (begin
                                     (let ((_g35390_ (values-count _g35389_)))
                                       (if (not (fx= _g35390_ 2))
                                           (error "Context expects 2 values"
                                                  _g35390_)))
                                     (let ((_target3341733448_
                                            (values-ref _g35389_ 0))
                                           (_tl3341933451_
                                            (values-ref _g35389_ 1)))
                                       (if (gx#stx-null? _tl3341933451_)
                                           (letrec ((_loop3342033454_
                                                     (lambda (_hd3341833458_
                                                              _body3342433461_)
                                                       (if (gx#stx-pair?
                                                            _hd3341833458_)
                                                           (let ((_e3342133464_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3341833458_)))
                     (let ((_lp-hd3342233468_ (##car _e3342133464_))
                           (_lp-tl3342333471_ (##cdr _e3342133464_)))
                       (_loop3342033454_
                        _lp-tl3342333471_
                        (cons _lp-hd3342233468_ _body3342433461_))))
                   (let ((_body3342533474_ (reverse _body3342433461_)))
                     ((lambda (_L33478_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3349333496_
                                                      _g3349433499_)
                                               (cons _g3349333496_
                                                     _g3349433499_))
                                             '()
                                             _L33478_)))))
                      _body3342533474_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3342033454_
                                              _target3341733448_
                                              '()))
                                           (_g3341133431_ _g3341233435_)))))
                                 (_g3341133431_ _g3341233435_))
                             (_g3341133431_ _g3341233435_))))
                     (_g3341133431_ _g3341233435_)))))
         (_g3341033502_ _stx33408_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33507_)
       (let* ((_g3351033530_
               (lambda (_g3351133526_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3351133526_)))
              (_g3350933601_
               (lambda (_g3351133534_)
                 (if (gx#stx-pair? _g3351133534_)
                     (let ((_e3351333537_ (gx#syntax-e _g3351133534_)))
                       (let ((_hd3351433541_ (##car _e3351333537_))
                             (_tl3351533544_ (##cdr _e3351333537_)))
                         (if (gx#stx-pair/null? _tl3351533544_)
                             (if (fx>= (gx#stx-length _tl3351533544_) '0)
                                 (let ((_g35391_
                                        (gx#syntax-split-splice
                                         _tl3351533544_
                                         '0)))
                                   (begin
                                     (let ((_g35392_ (values-count _g35391_)))
                                       (if (not (fx= _g35392_ 2))
                                           (error "Context expects 2 values"
                                                  _g35392_)))
                                     (let ((_target3351633547_
                                            (values-ref _g35391_ 0))
                                           (_tl3351833550_
                                            (values-ref _g35391_ 1)))
                                       (if (gx#stx-null? _tl3351833550_)
                                           (letrec ((_loop3351933553_
                                                     (lambda (_hd3351733557_
                                                              _body3352333560_)
                                                       (if (gx#stx-pair?
                                                            _hd3351733557_)
                                                           (let ((_e3352033563_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3351733557_)))
                     (let ((_lp-hd3352133567_ (##car _e3352033563_))
                           (_lp-tl3352233570_ (##cdr _e3352033563_)))
                       (_loop3351933553_
                        _lp-tl3352233570_
                        (cons _lp-hd3352133567_ _body3352333560_))))
                   (let ((_body3352433573_ (reverse _body3352333560_)))
                     ((lambda (_L33577_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3359233595_
                                                      _g3359333598_)
                                               (cons _g3359233595_
                                                     _g3359333598_))
                                             '()
                                             _L33577_)))))
                      _body3352433573_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3351933553_
                                              _target3351633547_
                                              '()))
                                           (_g3351033530_ _g3351133534_)))))
                                 (_g3351033530_ _g3351133534_))
                             (_g3351033530_ _g3351133534_))))
                     (_g3351033530_ _g3351133534_)))))
         (_g3350933601_ _stx33507_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33606_)
       (let* ((_g3360933633_
               (lambda (_g3361033629_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3361033629_)))
              (_g3360833755_
               (lambda (_g3361033637_)
                 (if (gx#stx-pair? _g3361033637_)
                     (let ((_e3361333640_ (gx#syntax-e _g3361033637_)))
                       (let ((_hd3361433644_ (##car _e3361333640_))
                             (_tl3361533647_ (##cdr _e3361333640_)))
                         (if (gx#stx-pair? _tl3361533647_)
                             (let ((_e3361633650_
                                    (gx#syntax-e _tl3361533647_)))
                               (let ((_hd3361733654_ (##car _e3361633650_))
                                     (_tl3361833657_ (##cdr _e3361633650_)))
                                 (if (gx#stx-pair/null? _tl3361833657_)
                                     (if (fx>= (gx#stx-length _tl3361833657_)
                                               '0)
                                         (let ((_g35393_
                                                (gx#syntax-split-splice
                                                 _tl3361833657_
                                                 '0)))
                                           (begin
                                             (let ((_g35394_
                                                    (values-count _g35393_)))
                                               (if (not (fx= _g35394_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35394_)))
                                             (let ((_target3361933660_
                                                    (values-ref _g35393_ 0))
                                                   (_tl3362133663_
                                                    (values-ref _g35393_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3362133663_)
                                                   (letrec ((_loop3362233666_
                                                             (lambda (_hd3362033670_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3362633673_)
                       (if (gx#stx-pair? _hd3362033670_)
                           (let ((_e3362333676_ (gx#syntax-e _hd3362033670_)))
                             (let ((_lp-hd3362433680_ (##car _e3362333676_))
                                   (_lp-tl3362533683_ (##cdr _e3362333676_)))
                               (_loop3362233666_
                                _lp-tl3362533683_
                                (cons _lp-hd3362433680_ _id3362633673_))))
                           (let ((_id3362733686_ (reverse _id3362633673_)))
                             ((lambda (_L33690_ _L33692_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3370933712_
                                                       _g3371033715_)
                                                (cons _g3370933712_
                                                      _g3371033715_))
                                              '()
                                              _L33690_)))
                                    (let* ((_keys33726_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3371733720_
                                                               _g3371833723_)
                                                        (cons _g3371733720_
                                                              _g3371833723_))
                                                      '()
                                                      _L33690_))))
                                           (_keytab33737_
                                            (let ((_ht33729_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3373133733_)
                                                   (hash-put!
                                                    _ht33729_
                                                    _g3373133733_
                                                    '#t))
                                                 _keys33726_)
                                                _ht33729_)))
                                           (_imports33740_
                                            (gx#core-expand-import-source
                                             _L33692_))
                                           (_fold-e33750_
                                            (letrec ((_fold-e33743_
                                                      (lambda (_in33746_
                                                               _r33748_)
                                                        (if (gx#module-import?
                                                             _in33746_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33737_
                         (gx#module-import-name _in33746_))
                        (cons _in33746_ _r33748_)
                        _r33748_)
                    (if (gx#import-set? _in33746_)
                        (foldl _fold-e33743_
                               _r33748_
                               (gx#import-set-imports _in33746_))
                        _r33748_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33743_)))
                                      (cons 'begin:
                                            (foldl _fold-e33750_
                                                   '()
                                                   _imports33740_)))
                                    (_g3360933633_ _g3361033637_)))
                              _id3362733686_
                              _hd3361733654_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3362233666_
                                                      _target3361933660_
                                                      '()))
                                                   (_g3360933633_
                                                    _g3361033637_)))))
                                         (_g3360933633_ _g3361033637_))
                                     (_g3360933633_ _g3361033637_))))
                             (_g3360933633_ _g3361033637_))))
                     (_g3360933633_ _g3361033637_)))))
         (_g3360833755_ _stx33606_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33760_)
       (let* ((_g3376333787_
               (lambda (_g3376433783_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3376433783_)))
              (_g3376233909_
               (lambda (_g3376433791_)
                 (if (gx#stx-pair? _g3376433791_)
                     (let ((_e3376733794_ (gx#syntax-e _g3376433791_)))
                       (let ((_hd3376833798_ (##car _e3376733794_))
                             (_tl3376933801_ (##cdr _e3376733794_)))
                         (if (gx#stx-pair? _tl3376933801_)
                             (let ((_e3377033804_
                                    (gx#syntax-e _tl3376933801_)))
                               (let ((_hd3377133808_ (##car _e3377033804_))
                                     (_tl3377233811_ (##cdr _e3377033804_)))
                                 (if (gx#stx-pair/null? _tl3377233811_)
                                     (if (fx>= (gx#stx-length _tl3377233811_)
                                               '0)
                                         (let ((_g35395_
                                                (gx#syntax-split-splice
                                                 _tl3377233811_
                                                 '0)))
                                           (begin
                                             (let ((_g35396_
                                                    (values-count _g35395_)))
                                               (if (not (fx= _g35396_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35396_)))
                                             (let ((_target3377333814_
                                                    (values-ref _g35395_ 0))
                                                   (_tl3377533817_
                                                    (values-ref _g35395_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3377533817_)
                                                   (letrec ((_loop3377633820_
                                                             (lambda (_hd3377433824_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3378033827_)
                       (if (gx#stx-pair? _hd3377433824_)
                           (let ((_e3377733830_ (gx#syntax-e _hd3377433824_)))
                             (let ((_lp-hd3377833834_ (##car _e3377733830_))
                                   (_lp-tl3377933837_ (##cdr _e3377733830_)))
                               (_loop3377633820_
                                _lp-tl3377933837_
                                (cons _lp-hd3377833834_ _id3378033827_))))
                           (let ((_id3378133840_ (reverse _id3378033827_)))
                             ((lambda (_L33844_ _L33846_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3386333866_
                                                       _g3386433869_)
                                                (cons _g3386333866_
                                                      _g3386433869_))
                                              '()
                                              _L33844_)))
                                    (let* ((_keys33880_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3387133874_
                                                               _g3387233877_)
                                                        (cons _g3387133874_
                                                              _g3387233877_))
                                                      '()
                                                      _L33844_))))
                                           (_keytab33891_
                                            (let ((_ht33883_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3388533887_)
                                                   (hash-put!
                                                    _ht33883_
                                                    _g3388533887_
                                                    '#t))
                                                 _keys33880_)
                                                _ht33883_)))
                                           (_imports33894_
                                            (gx#core-expand-import-source
                                             _L33846_))
                                           (_fold-e33904_
                                            (letrec ((_fold-e33897_
                                                      (lambda (_in33900_
                                                               _r33902_)
                                                        (if (gx#module-import?
                                                             _in33900_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33891_
                         (gx#module-import-name _in33900_))
                        _r33902_
                        (cons _in33900_ _r33902_))
                    (if (gx#import-set? _in33900_)
                        (foldl _fold-e33897_
                               _r33902_
                               (gx#import-set-imports _in33900_))
                        (cons _in33900_ _r33902_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33897_)))
                                      (cons 'begin:
                                            (foldl _fold-e33904_
                                                   '()
                                                   _imports33894_)))
                                    (_g3376333787_ _g3376433791_)))
                              _id3378133840_
                              _hd3377133808_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3377633820_
                                                      _target3377333814_
                                                      '()))
                                                   (_g3376333787_
                                                    _g3376433791_)))))
                                         (_g3376333787_ _g3376433791_))
                                     (_g3376333787_ _g3376433791_))))
                             (_g3376333787_ _g3376433791_))))
                     (_g3376333787_ _g3376433791_)))))
         (_g3376233909_ _stx33760_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in33961_ _rename33963_)
      (gx#make-module-import
       (gx#module-import-source _in33961_)
       _rename33963_
       (gx#module-import-phi _in33961_)
       (gx#module-import-weak? _in33961_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name33914_ _pre33916_)
      (let* ((_name3391733925_ _name33914_)
             (_E3392033931_
              (lambda () (error '"No clause matching" _name3391733925_)))
             (_else3391933937_
              (lambda () (make-symbol _pre33916_ _name33914_)))
             (_K3392133945_
              (lambda (_mark33941_ _id33943_)
                (cons (make-symbol _pre33916_ _id33943_) _mark33941_))))
        (if (##pair? _name3391733925_)
            (let ((_hd3392233949_ (##car _name3391733925_))
                  (_tl3392333952_ (##cdr _name3391733925_)))
              (let* ((_id33955_ _hd3392233949_) (_mark33958_ _tl3392333952_))
                (_K3392133945_ _mark33958_ _id33955_)))
            (_else3391933937_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx33965_)
       (let* ((_g3396834001_
               (lambda (_g3396933997_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3396933997_)))
              (_g3396734187_
               (lambda (_g3396934005_)
                 (if (gx#stx-pair? _g3396934005_)
                     (let ((_e3397334008_ (gx#syntax-e _g3396934005_)))
                       (let ((_hd3397434012_ (##car _e3397334008_))
                             (_tl3397534015_ (##cdr _e3397334008_)))
                         (if (gx#stx-pair? _tl3397534015_)
                             (let ((_e3397634018_
                                    (gx#syntax-e _tl3397534015_)))
                               (let ((_hd3397734022_ (##car _e3397634018_))
                                     (_tl3397834025_ (##cdr _e3397634018_)))
                                 (if (gx#stx-pair/null? _tl3397834025_)
                                     (if (fx>= (gx#stx-length _tl3397834025_)
                                               '0)
                                         (let ((_g35397_
                                                (gx#syntax-split-splice
                                                 _tl3397834025_
                                                 '0)))
                                           (begin
                                             (let ((_g35398_
                                                    (values-count _g35397_)))
                                               (if (not (fx= _g35398_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35398_)))
                                             (let ((_target3397934028_
                                                    (values-ref _g35397_ 0))
                                                   (_tl3398134031_
                                                    (values-ref _g35397_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3398134031_)
                                                   (letrec ((_loop3398234034_
                                                             (lambda (_hd3398034038_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3398634041_
                              _id3398734043_)
                       (if (gx#stx-pair? _hd3398034038_)
                           (let ((_e3398334046_ (gx#syntax-e _hd3398034038_)))
                             (let ((_lp-hd3398434050_ (##car _e3398334046_))
                                   (_lp-tl3398534053_ (##cdr _e3398334046_)))
                               (if (gx#stx-pair? _lp-hd3398434050_)
                                   (let ((_e3399034056_
                                          (gx#syntax-e _lp-hd3398434050_)))
                                     (let ((_hd3399134060_
                                            (##car _e3399034056_))
                                           (_tl3399234063_
                                            (##cdr _e3399034056_)))
                                       (if (gx#stx-pair? _tl3399234063_)
                                           (let ((_e3399334066_
                                                  (gx#syntax-e
                                                   _tl3399234063_)))
                                             (let ((_hd3399434070_
                                                    (##car _e3399334066_))
                                                   (_tl3399534073_
                                                    (##cdr _e3399334066_)))
                                               (if (gx#stx-null?
                                                    _tl3399534073_)
                                                   (_loop3398234034_
                                                    _lp-tl3398534053_
                                                    (cons _hd3399434070_
                                                          _new-id3398634041_)
                                                    (cons _hd3399134060_
                                                          _id3398734043_))
                                                   (_g3396834001_
                                                    _g3396934005_))))
                                           (_g3396834001_ _g3396934005_))))
                                   (_g3396834001_ _g3396934005_))))
                           (let ((_new-id3398834076_
                                  (reverse _new-id3398634041_))
                                 (_id3398934079_ (reverse _id3398734043_)))
                             ((lambda (_L34082_ _L34084_ _L34085_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3410334106_
                                                           _g3410434109_)
                                                    (cons _g3410334106_
                                                          _g3410434109_))
                                                  '()
                                                  _L34084_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3411134114_
                                                           _g3411234117_)
                                                    (cons _g3411134114_
                                                          _g3411234117_))
                                                  '()
                                                  _L34082_)))
                                        '#f)
                                    (let* ((_keytab34120_ (make-hash-table))
                                           (_found34123_ (make-hash-table))
                                           (_g35399_
                                            (for-each
                                             (lambda (_id34126_ _new-id34128_)
                                               (hash-put!
                                                _keytab34120_
                                                (gx#core-identifier-key
                                                 _id34126_)
                                                (gx#core-identifier-key
                                                 _new-id34128_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3412934132_
                                                               _g3413034135_)
                                                        (cons _g3412934132_
                                                              _g3413034135_))
                                                      '()
                                                      _L34084_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3413734140_
                                                               _g3413834143_)
                                                        (cons _g3413734140_
                                                              _g3413834143_))
                                                      '()
                                                      _L34082_))))
                                           (_imports34148_
                                            (gx#core-expand-import-source
                                             _L34085_))
                                           (_fold-e34168_
                                            (letrec ((_fold-e34151_
                                                      (lambda (_in34154_
                                                               _r34156_)
                                                        (if (gx#module-import?
                                                             _in34154_)
                                                            (let* ((_name34158_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in34154_))
                           (_$e34161_ (hash-get _keytab34120_ _name34158_)))
                      (if _$e34161_
                          ((lambda (_rename34165_)
                             (begin
                               (hash-put! _found34123_ _name34158_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in34154_
                                      _rename34165_)
                                     _r34156_)))
                           _$e34161_)
                          (cons _in34154_ _r34156_)))
                    (if (gx#import-set? _in34154_)
                        (foldl _fold-e34151_
                               _r34156_
                               (gx#import-set-imports _in34154_))
                        (cons _in34154_ _r34156_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34151_))
                                           (_new-imports34171_
                                            (foldl _fold-e34168_
                                                   '()
                                                   _imports34148_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34176_)
                                           (if (hash-get
                                                _found34123_
                                                (gx#core-identifier-key
                                                 _id34176_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx33965_
                                                _id34176_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3417834181_
                                                           _g3417934184_)
                                                    (cons _g3417834181_
                                                          _g3417934184_))
                                                  '()
                                                  _L34084_)))
                                        (cons 'begin: _new-imports34171_)))
                                    (_g3396834001_ _g3396934005_)))
                              _new-id3398834076_
                              _id3398934079_
                              _hd3397734022_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3398234034_
                                                      _target3397934028_
                                                      '()
                                                      '()))
                                                   (_g3396834001_
                                                    _g3396934005_)))))
                                         (_g3396834001_ _g3396934005_))
                                     (_g3396834001_ _g3396934005_))))
                             (_g3396834001_ _g3396934005_))))
                     (_g3396834001_ _g3396934005_)))))
         (_g3396734187_ _stx33965_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx34193_)
       (let* ((_g3419634214_
               (lambda (_g3419734210_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3419734210_)))
              (_g3419534293_
               (lambda (_g3419734218_)
                 (if (gx#stx-pair? _g3419734218_)
                     (let ((_e3420034221_ (gx#syntax-e _g3419734218_)))
                       (let ((_hd3420134225_ (##car _e3420034221_))
                             (_tl3420234228_ (##cdr _e3420034221_)))
                         (if (gx#stx-pair? _tl3420234228_)
                             (let ((_e3420334231_
                                    (gx#syntax-e _tl3420234228_)))
                               (let ((_hd3420434235_ (##car _e3420334231_))
                                     (_tl3420534238_ (##cdr _e3420334231_)))
                                 (if (gx#stx-pair? _tl3420534238_)
                                     (let ((_e3420634241_
                                            (gx#syntax-e _tl3420534238_)))
                                       (let ((_hd3420734245_
                                              (##car _e3420634241_))
                                             (_tl3420834248_
                                              (##cdr _e3420634241_)))
                                         (if (gx#stx-null? _tl3420834248_)
                                             ((lambda (_L34251_ _L34253_)
                                                (if (gx#identifier? _L34251_)
                                                    (let* ((_pre34269_
                                                            (gx#stx-e
                                                             _L34251_))
                                                           (_imports34272_
                                                            (gx#core-expand-import-source
                                                             _L34253_))
                                                           (_rename-e34278_
                                                            (lambda (_name34275_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34275_
                                                               _pre34269_)))
                                                           (_fold-e34288_
                                                            (letrec ((_fold-e34281_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in34284_ _r34286_)
                                (if (gx#module-import? _in34284_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in34284_
                                           (_rename-e34278_
                                            (gx#module-import-name _in34284_)))
                                          _r34286_)
                                    (if (gx#import-set? _in34284_)
                                        (foldl _fold-e34281_
                                               _r34286_
                                               (gx#import-set-imports
                                                _in34284_))
                                        (cons _in34284_ _r34286_))))))
                      _fold-e34281_)))
              (cons 'begin: (foldl _fold-e34288_ '() _imports34272_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3419634214_
                                                     _g3419734218_)))
                                              _hd3420734245_
                                              _hd3420434235_)
                                             (_g3419634214_ _g3419734218_))))
                                     (_g3419634214_ _g3419734218_))))
                             (_g3419634214_ _g3419734218_))))
                     (_g3419634214_ _g3419734218_)))))
         (_g3419534293_ _stx34193_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx34297_)
       (let* ((_g3430034324_
               (lambda (_g3430134320_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3430134320_)))
              (_g3429934446_
               (lambda (_g3430134328_)
                 (if (gx#stx-pair? _g3430134328_)
                     (let ((_e3430434331_ (gx#syntax-e _g3430134328_)))
                       (let ((_hd3430534335_ (##car _e3430434331_))
                             (_tl3430634338_ (##cdr _e3430434331_)))
                         (if (gx#stx-pair? _tl3430634338_)
                             (let ((_e3430734341_
                                    (gx#syntax-e _tl3430634338_)))
                               (let ((_hd3430834345_ (##car _e3430734341_))
                                     (_tl3430934348_ (##cdr _e3430734341_)))
                                 (if (gx#stx-pair/null? _tl3430934348_)
                                     (if (fx>= (gx#stx-length _tl3430934348_)
                                               '0)
                                         (let ((_g35400_
                                                (gx#syntax-split-splice
                                                 _tl3430934348_
                                                 '0)))
                                           (begin
                                             (let ((_g35401_
                                                    (values-count _g35400_)))
                                               (if (not (fx= _g35401_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35401_)))
                                             (let ((_target3431034351_
                                                    (values-ref _g35400_ 0))
                                                   (_tl3431234354_
                                                    (values-ref _g35400_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3431234354_)
                                                   (letrec ((_loop3431334357_
                                                             (lambda (_hd3431134361_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3431734364_)
                       (if (gx#stx-pair? _hd3431134361_)
                           (let ((_e3431434367_ (gx#syntax-e _hd3431134361_)))
                             (let ((_lp-hd3431534371_ (##car _e3431434367_))
                                   (_lp-tl3431634374_ (##cdr _e3431434367_)))
                               (_loop3431334357_
                                _lp-tl3431634374_
                                (cons _lp-hd3431534371_ _id3431734364_))))
                           (let ((_id3431834377_ (reverse _id3431734364_)))
                             ((lambda (_L34381_ _L34383_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3440034403_
                                                       _g3440134406_)
                                                (cons _g3440034403_
                                                      _g3440134406_))
                                              '()
                                              _L34381_)))
                                    (let* ((_keys34417_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3440834411_
                                                               _g3440934414_)
                                                        (cons _g3440834411_
                                                              _g3440934414_))
                                                      '()
                                                      _L34381_))))
                                           (_keytab34428_
                                            (let ((_ht34420_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3442234424_)
                                                   (hash-put!
                                                    _ht34420_
                                                    _g3442234424_
                                                    '#t))
                                                 _keys34417_)
                                                _ht34420_)))
                                           (_exports34431_
                                            (gx#core-expand-export-source
                                             _L34383_))
                                           (_fold-e34441_
                                            (letrec ((_fold-e34434_
                                                      (lambda (_out34437_
                                                               _r34439_)
                                                        (if (gx#module-export?
                                                             _out34437_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34428_
                         (gx#module-export-name _out34437_))
                        _r34439_
                        (cons _out34437_ _r34439_))
                    (if (gx#export-set? _out34437_)
                        (foldl _fold-e34434_
                               _r34439_
                               (gx#export-set-exports _out34437_))
                        _r34439_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34434_)))
                                      (cons 'begin:
                                            (foldl _fold-e34441_
                                                   '()
                                                   _exports34431_)))
                                    (_g3430034324_ _g3430134328_)))
                              _id3431834377_
                              _hd3430834345_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3431334357_
                                                      _target3431034351_
                                                      '()))
                                                   (_g3430034324_
                                                    _g3430134328_)))))
                                         (_g3430034324_ _g3430134328_))
                                     (_g3430034324_ _g3430134328_))))
                             (_g3430034324_ _g3430134328_))))
                     (_g3430034324_ _g3430134328_)))))
         (_g3429934446_ _stx34297_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34451_ _rename34453_)
      (gx#make-module-export
       (gx#module-export-context _out34451_)
       (gx#module-export-key _out34451_)
       (gx#module-export-phi _out34451_)
       _rename34453_
       (gx#module-export-weak? _out34451_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34455_)
       (let* ((_g3445834491_
               (lambda (_g3445934487_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3445934487_)))
              (_g3445734677_
               (lambda (_g3445934495_)
                 (if (gx#stx-pair? _g3445934495_)
                     (let ((_e3446334498_ (gx#syntax-e _g3445934495_)))
                       (let ((_hd3446434502_ (##car _e3446334498_))
                             (_tl3446534505_ (##cdr _e3446334498_)))
                         (if (gx#stx-pair? _tl3446534505_)
                             (let ((_e3446634508_
                                    (gx#syntax-e _tl3446534505_)))
                               (let ((_hd3446734512_ (##car _e3446634508_))
                                     (_tl3446834515_ (##cdr _e3446634508_)))
                                 (if (gx#stx-pair/null? _tl3446834515_)
                                     (if (fx>= (gx#stx-length _tl3446834515_)
                                               '0)
                                         (let ((_g35402_
                                                (gx#syntax-split-splice
                                                 _tl3446834515_
                                                 '0)))
                                           (begin
                                             (let ((_g35403_
                                                    (values-count _g35402_)))
                                               (if (not (fx= _g35403_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35403_)))
                                             (let ((_target3446934518_
                                                    (values-ref _g35402_ 0))
                                                   (_tl3447134521_
                                                    (values-ref _g35402_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3447134521_)
                                                   (letrec ((_loop3447234524_
                                                             (lambda (_hd3447034528_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3447634531_
                              _id3447734533_)
                       (if (gx#stx-pair? _hd3447034528_)
                           (let ((_e3447334536_ (gx#syntax-e _hd3447034528_)))
                             (let ((_lp-hd3447434540_ (##car _e3447334536_))
                                   (_lp-tl3447534543_ (##cdr _e3447334536_)))
                               (if (gx#stx-pair? _lp-hd3447434540_)
                                   (let ((_e3448034546_
                                          (gx#syntax-e _lp-hd3447434540_)))
                                     (let ((_hd3448134550_
                                            (##car _e3448034546_))
                                           (_tl3448234553_
                                            (##cdr _e3448034546_)))
                                       (if (gx#stx-pair? _tl3448234553_)
                                           (let ((_e3448334556_
                                                  (gx#syntax-e
                                                   _tl3448234553_)))
                                             (let ((_hd3448434560_
                                                    (##car _e3448334556_))
                                                   (_tl3448534563_
                                                    (##cdr _e3448334556_)))
                                               (if (gx#stx-null?
                                                    _tl3448534563_)
                                                   (_loop3447234524_
                                                    _lp-tl3447534543_
                                                    (cons _hd3448434560_
                                                          _new-id3447634531_)
                                                    (cons _hd3448134550_
                                                          _id3447734533_))
                                                   (_g3445834491_
                                                    _g3445934495_))))
                                           (_g3445834491_ _g3445934495_))))
                                   (_g3445834491_ _g3445934495_))))
                           (let ((_new-id3447834566_
                                  (reverse _new-id3447634531_))
                                 (_id3447934569_ (reverse _id3447734533_)))
                             ((lambda (_L34572_ _L34574_ _L34575_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3459334596_
                                                           _g3459434599_)
                                                    (cons _g3459334596_
                                                          _g3459434599_))
                                                  '()
                                                  _L34574_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3460134604_
                                                           _g3460234607_)
                                                    (cons _g3460134604_
                                                          _g3460234607_))
                                                  '()
                                                  _L34572_)))
                                        '#f)
                                    (let* ((_keytab34610_ (make-hash-table))
                                           (_found34613_ (make-hash-table))
                                           (_g35404_
                                            (for-each
                                             (lambda (_id34616_ _new-id34618_)
                                               (hash-put!
                                                _keytab34610_
                                                (gx#core-identifier-key
                                                 _id34616_)
                                                (gx#core-identifier-key
                                                 _new-id34618_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3461934622_
                                                               _g3462034625_)
                                                        (cons _g3461934622_
                                                              _g3462034625_))
                                                      '()
                                                      _L34574_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3462734630_
                                                               _g3462834633_)
                                                        (cons _g3462734630_
                                                              _g3462834633_))
                                                      '()
                                                      _L34572_))))
                                           (_exports34638_
                                            (gx#core-expand-export-source
                                             _L34575_))
                                           (_fold-e34658_
                                            (letrec ((_fold-e34641_
                                                      (lambda (_out34644_
                                                               _r34646_)
                                                        (if (gx#module-export?
                                                             _out34644_)
                                                            (let* ((_name34648_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34644_))
                           (_$e34651_ (hash-get _keytab34610_ _name34648_)))
                      (if _$e34651_
                          ((lambda (_rename34655_)
                             (begin
                               (hash-put! _found34613_ _name34648_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34644_
                                      _rename34655_)
                                     _r34646_)))
                           _$e34651_)
                          (cons _out34644_ _r34646_)))
                    (if (gx#export-set? _out34644_)
                        (foldl _fold-e34641_
                               _r34646_
                               (gx#export-set-exports _out34644_))
                        (cons _out34644_ _r34646_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34641_))
                                           (_new-exports34661_
                                            (foldl _fold-e34658_
                                                   '()
                                                   _exports34638_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34666_)
                                           (if (hash-get
                                                _found34613_
                                                (gx#core-identifier-key
                                                 _id34666_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34455_
                                                _id34666_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3466834671_
                                                           _g3466934674_)
                                                    (cons _g3466834671_
                                                          _g3466934674_))
                                                  '()
                                                  _L34574_)))
                                        (cons 'begin: _new-exports34661_)))
                                    (_g3445834491_ _g3445934495_)))
                              _new-id3447834566_
                              _id3447934569_
                              _hd3446734512_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3447234524_
                                                      _target3446934518_
                                                      '()
                                                      '()))
                                                   (_g3445834491_
                                                    _g3445934495_)))))
                                         (_g3445834491_ _g3445934495_))
                                     (_g3445834491_ _g3445934495_))))
                             (_g3445834491_ _g3445934495_))))
                     (_g3445834491_ _g3445934495_)))))
         (_g3445734677_ _stx34455_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34683_)
       (let* ((_g3468634704_
               (lambda (_g3468734700_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3468734700_)))
              (_g3468534783_
               (lambda (_g3468734708_)
                 (if (gx#stx-pair? _g3468734708_)
                     (let ((_e3469034711_ (gx#syntax-e _g3468734708_)))
                       (let ((_hd3469134715_ (##car _e3469034711_))
                             (_tl3469234718_ (##cdr _e3469034711_)))
                         (if (gx#stx-pair? _tl3469234718_)
                             (let ((_e3469334721_
                                    (gx#syntax-e _tl3469234718_)))
                               (let ((_hd3469434725_ (##car _e3469334721_))
                                     (_tl3469534728_ (##cdr _e3469334721_)))
                                 (if (gx#stx-pair? _tl3469534728_)
                                     (let ((_e3469634731_
                                            (gx#syntax-e _tl3469534728_)))
                                       (let ((_hd3469734735_
                                              (##car _e3469634731_))
                                             (_tl3469834738_
                                              (##cdr _e3469634731_)))
                                         (if (gx#stx-null? _tl3469834738_)
                                             ((lambda (_L34741_ _L34743_)
                                                (if (gx#identifier? _L34741_)
                                                    (let* ((_pre34759_
                                                            (gx#stx-e
                                                             _L34741_))
                                                           (_exports34762_
                                                            (gx#core-expand-export-source
                                                             _L34743_))
                                                           (_rename-e34768_
                                                            (lambda (_name34765_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34765_
                                                               _pre34759_)))
                                                           (_fold-e34778_
                                                            (letrec ((_fold-e34771_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34774_ _r34776_)
                                (if (gx#module-export? _out34774_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34774_
                                           (_rename-e34768_
                                            (gx#module-export-name
                                             _out34774_)))
                                          _r34776_)
                                    (if (gx#export-set? _out34774_)
                                        (foldl _fold-e34771_
                                               _r34776_
                                               (gx#export-set-exports
                                                _out34774_))
                                        (cons _out34774_ _r34776_))))))
                      _fold-e34771_)))
              (cons 'begin: (foldl _fold-e34778_ '() _exports34762_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3468634704_
                                                     _g3468734708_)))
                                              _hd3469734735_
                                              _hd3469434725_)
                                             (_g3468634704_ _g3468734708_))))
                                     (_g3468634704_ _g3468734708_))))
                             (_g3468634704_ _g3468734708_))))
                     (_g3468634704_ _g3468734708_)))))
         (_g3468534783_ _stx34683_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34787_)
       (let* ((_g3479034810_
               (lambda (_g3479134806_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3479134806_)))
              (_g3478935045_
               (lambda (_g3479134814_)
                 (if (gx#stx-pair? _g3479134814_)
                     (let ((_e3479334817_ (gx#syntax-e _g3479134814_)))
                       (let ((_hd3479434821_ (##car _e3479334817_))
                             (_tl3479534824_ (##cdr _e3479334817_)))
                         (if (gx#stx-pair/null? _tl3479534824_)
                             (if (fx>= (gx#stx-length _tl3479534824_) '0)
                                 (let ((_g35405_
                                        (gx#syntax-split-splice
                                         _tl3479534824_
                                         '0)))
                                   (begin
                                     (let ((_g35406_ (values-count _g35405_)))
                                       (if (not (fx= _g35406_ 2))
                                           (error "Context expects 2 values"
                                                  _g35406_)))
                                     (let ((_target3479634827_
                                            (values-ref _g35405_ 0))
                                           (_tl3479834830_
                                            (values-ref _g35405_ 1)))
                                       (if (gx#stx-null? _tl3479834830_)
                                           (letrec ((_loop3479934833_
                                                     (lambda (_hd3479734837_
                                                              _id3480334840_)
                                                       (if (gx#stx-pair?
                                                            _hd3479734837_)
                                                           (let ((_e3480034843_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3479734837_)))
                     (let ((_lp-hd3480134847_ (##car _e3480034843_))
                           (_lp-tl3480234850_ (##cdr _e3480034843_)))
                       (_loop3479934833_
                        _lp-tl3480234850_
                        (cons _lp-hd3480134847_ _id3480334840_))))
                   (let ((_id3480434853_ (reverse _id3480334840_)))
                     ((lambda (_L34857_)
                        (let _lp34873_ ((_rest34876_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3503635039_
                                                           _g3503735042_)
                                                    (cons _g3503635039_
                                                          _g3503735042_))
                                                  '()
                                                  _L34857_)))
                                        (_ids34878_ '()))
                          (let* ((_g3488134893_
                                  (lambda (_g3488234889_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3488234889_)))
                                 (_g3488034904_
                                  (lambda (_g3488234897_)
                                    ((lambda () (cons 'begin: _ids34878_)))))
                                 (_g3487935033_
                                  (lambda (_g3488234908_)
                                    (if (gx#stx-pair? _g3488234908_)
                                        (let ((_e3488534911_
                                               (gx#syntax-e _g3488234908_)))
                                          (let ((_hd3488634915_
                                                 (##car _e3488534911_))
                                                (_tl3488734918_
                                                 (##cdr _e3488534911_)))
                                            ((lambda (_L34921_ _L34923_)
                                               (let ((_info34938_
                                                      (gx#syntax-local-value
                                                       _L34923_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info34938_)
                                                     (let* ((_g3494034957_
                                                             (slot-ref
                                                              _info34938_
                                                              'expander-identifiers))
                                                            (_E3494234963_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3494034957_)))
                    (_K3494334975_
                     (lambda (_setf34967_
                              _getf34969_
                              _type?34970_
                              _make-type34971_
                              _type::t34972_
                              _super34973_)
                       (_lp34873_
                        _L34921_
                        (cons _L34923_
                              (cons _type::t34972_
                                    (cons _make-type34971_
                                          (cons _type?34970_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids34878_
                                                              _setf34967_)
                                                       _getf34969_)))))))))
               (if (##pair? _g3494034957_)
                   (let ((_hd3494434979_ (##car _g3494034957_))
                         (_tl3494534982_ (##cdr _g3494034957_)))
                     (let ((_super34985_ _hd3494434979_))
                       (if (##pair? _tl3494534982_)
                           (let ((_hd3494634988_ (##car _tl3494534982_))
                                 (_tl3494734991_ (##cdr _tl3494534982_)))
                             (let ((_type::t34994_ _hd3494634988_))
                               (if (##pair? _tl3494734991_)
                                   (let ((_hd3494834997_
                                          (##car _tl3494734991_))
                                         (_tl3494935000_
                                          (##cdr _tl3494734991_)))
                                     (let ((_make-type35003_ _hd3494834997_))
                                       (if (##pair? _tl3494935000_)
                                           (let ((_hd3495035006_
                                                  (##car _tl3494935000_))
                                                 (_tl3495135009_
                                                  (##cdr _tl3494935000_)))
                                             (let ((_type?35012_
                                                    _hd3495035006_))
                                               (if (##pair? _tl3495135009_)
                                                   (let ((_hd3495235015_
                                                          (##car _tl3495135009_))
                                                         (_tl3495335018_
                                                          (##cdr _tl3495135009_)))
                                                     (let ((_getf35021_
                                                            _hd3495235015_))
                                                       (if (##pair? _tl3495335018_)
                                                           (let ((_hd3495435024_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3495335018_))
                         (_tl3495535027_ (##cdr _tl3495335018_)))
                     (let ((_setf35030_ _hd3495435024_))
                       (if (##null? _tl3495535027_)
                           (_K3494334975_
                            _setf35030_
                            _getf35021_
                            _type?35012_
                            _make-type35003_
                            _type::t34994_
                            _super34985_)
                           (_E3494234963_))))
                   (_E3494234963_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3494234963_))))
                                           (_E3494234963_))))
                                   (_E3494234963_))))
                           (_E3494234963_))))
                   (_E3494234963_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34787_
                                                      _L34923_))))
                                             _tl3488734918_
                                             _hd3488634915_)))
                                        (_g3488034904_ _g3488234908_)))))
                            (_g3487935033_ _rest34876_))))
                      _id3480434853_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3479934833_
                                              _target3479634827_
                                              '()))
                                           (_g3479034810_ _g3479134814_)))))
                                 (_g3479034810_ _g3479134814_))
                             (_g3479034810_ _g3479134814_))))
                     (_g3479034810_ _g3479134814_)))))
         (_g3478935045_ _stx34787_))))))
