(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32828_)
      (let* ((_g3283332852_
              (lambda (_g3283432848_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3283432848_)))
             (_g3283232898_
              (lambda (_g3283432856_)
                (if (gx#stx-pair? _g3283432856_)
                    (let ((_e3284132859_ (gx#syntax-e _g3283432856_)))
                      (let ((_hd3284232863_ (##car _e3284132859_))
                            (_tl3284332866_ (##cdr _e3284132859_)))
                        (if (gx#stx-pair? _tl3284332866_)
                            (let ((_e3284432869_ (gx#syntax-e _tl3284332866_)))
                              (let ((_hd3284532873_ (##car _e3284432869_))
                                    (_tl3284632876_ (##cdr _e3284432869_)))
                                ((lambda (_L32879_ _L32881_ _L32882_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32881_
                                                     (cons (cons _L32882_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32879_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32881_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3284632876_
                                 _hd3284532873_
                                 _hd3284232863_)))
                            (_g3283332852_ _g3283432856_))))
                    (_g3283332852_ _g3283432856_))))
             (_g3283132919_
              (lambda (_g3283432902_)
                (if (gx#stx-pair? _g3283432902_)
                    (let ((_e3283532905_ (gx#syntax-e _g3283432902_)))
                      (let ((_hd3283632909_ (##car _e3283532905_))
                            (_tl3283732912_ (##cdr _e3283532905_)))
                        (if (gx#stx-null? _tl3283732912_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3283232898_ _g3283432902_))))
                    (_g3283232898_ _g3283432902_)))))
        (_g3283132919_ _$stx32828_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32923_)
      (let* ((_g3292832968_
              (lambda (_g3292932964_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3292932964_)))
             (_g3292733069_
              (lambda (_g3292932972_)
                (if (gx#stx-pair? _g3292932972_)
                    (let ((_e3294532975_ (gx#syntax-e _g3292932972_)))
                      (let ((_hd3294632979_ (##car _e3294532975_))
                            (_tl3294732982_ (##cdr _e3294532975_)))
                        (if (gx#stx-pair? _tl3294732982_)
                            (let ((_e3294832985_ (gx#syntax-e _tl3294732982_)))
                              (let ((_hd3294932989_ (##car _e3294832985_))
                                    (_tl3295032992_ (##cdr _e3294832985_)))
                                (if (gx#stx-pair? _hd3294932989_)
                                    (let ((_e3295132995_
                                           (gx#syntax-e _hd3294932989_)))
                                      (let ((_hd3295232999_
                                             (##car _e3295132995_))
                                            (_tl3295333002_
                                             (##cdr _e3295132995_)))
                                        (if (gx#stx-pair/null? _tl3295032992_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3295032992_)
                                                      '0)
                                                (let ((_g35512_
                                                       (gx#syntax-split-splice
                                                        _tl3295032992_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35513_
                                                           (if (##values?
                                                                _g35512_)
                                                               (##vector-length
                                                                _g35512_)
                                                               1)))
                                                      (if (not (##fx= _g35513_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35513_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3295433005_
                                                           (##vector-ref
                                                            _g35512_
                                                            0))
                                                          (_tl3295633008_
                                                           (##vector-ref
                                                            _g35512_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3295633008_)
                                                          (letrec ((_loop3295733011_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3295533015_ _body3296133018_)
                              (if (gx#stx-pair? _hd3295533015_)
                                  (let ((_e3295833021_
                                         (gx#syntax-e _hd3295533015_)))
                                    (let ((_lp-hd3295933025_
                                           (##car _e3295833021_))
                                          (_lp-tl3296033028_
                                           (##cdr _e3295833021_)))
                                      (_loop3295733011_
                                       _lp-tl3296033028_
                                       (cons _lp-hd3295933025_
                                             _body3296133018_))))
                                  (let ((_body3296233031_
                                         (reverse _body3296133018_)))
                                    ((lambda (_L33035_
                                              _L33037_
                                              _L33038_
                                              _L33039_)
                                       (if (gx#identifier? _L33038_)
                                           (cons _L33039_
                                                 (cons _L33038_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33037_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3306033063_ _g3306133066_)
                                            (cons _g3306033063_ _g3306133066_))
                                          '()
                                          _L33035_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3292832968_ _g3292932972_)))
                                     _body3296233031_
                                     _tl3295333002_
                                     _hd3295232999_
                                     _hd3294632979_))))))
                    (_loop3295733011_ _target3295433005_ '()))
                  (_g3292832968_ _g3292932972_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3292832968_ _g3292932972_))
                                            (_g3292832968_ _g3292932972_))))
                                    (_g3292832968_ _g3292932972_))))
                            (_g3292832968_ _g3292932972_))))
                    (_g3292832968_ _g3292932972_))))
             (_g3292633123_
              (lambda (_g3292933073_)
                (if (gx#stx-pair? _g3292933073_)
                    (let ((_e3293233076_ (gx#syntax-e _g3292933073_)))
                      (let ((_hd3293333080_ (##car _e3293233076_))
                            (_tl3293433083_ (##cdr _e3293233076_)))
                        (if (gx#stx-pair? _tl3293433083_)
                            (let ((_e3293533086_ (gx#syntax-e _tl3293433083_)))
                              (let ((_hd3293633090_ (##car _e3293533086_))
                                    (_tl3293733093_ (##cdr _e3293533086_)))
                                (if (gx#stx-pair? _tl3293733093_)
                                    (let ((_e3293833096_
                                           (gx#syntax-e _tl3293733093_)))
                                      (let ((_hd3293933100_
                                             (##car _e3293833096_))
                                            (_tl3294033103_
                                             (##cdr _e3293833096_)))
                                        (if (gx#stx-null? _tl3294033103_)
                                            ((lambda (_L33106_ _L33108_)
                                               (if (gx#identifier? _L33108_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33108_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L33106_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3292733069_
                                                    _g3292933073_)))
                                             _hd3293933100_
                                             _hd3293633090_)
                                            (_g3292733069_ _g3292933073_))))
                                    (_g3292733069_ _g3292933073_))))
                            (_g3292733069_ _g3292933073_))))
                    (_g3292733069_ _g3292933073_)))))
        (_g3292633123_ _$stx32923_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx33128_)
      (let* ((_g3313333173_
              (lambda (_g3313433169_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3313433169_)))
             (_g3313233274_
              (lambda (_g3313433177_)
                (if (gx#stx-pair? _g3313433177_)
                    (let ((_e3315033180_ (gx#syntax-e _g3313433177_)))
                      (let ((_hd3315133184_ (##car _e3315033180_))
                            (_tl3315233187_ (##cdr _e3315033180_)))
                        (if (gx#stx-pair? _tl3315233187_)
                            (let ((_e3315333190_ (gx#syntax-e _tl3315233187_)))
                              (let ((_hd3315433194_ (##car _e3315333190_))
                                    (_tl3315533197_ (##cdr _e3315333190_)))
                                (if (gx#stx-pair? _hd3315433194_)
                                    (let ((_e3315633200_
                                           (gx#syntax-e _hd3315433194_)))
                                      (let ((_hd3315733204_
                                             (##car _e3315633200_))
                                            (_tl3315833207_
                                             (##cdr _e3315633200_)))
                                        (if (gx#stx-pair/null? _tl3315533197_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3315533197_)
                                                      '0)
                                                (let ((_g35514_
                                                       (gx#syntax-split-splice
                                                        _tl3315533197_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35515_
                                                           (if (##values?
                                                                _g35514_)
                                                               (##vector-length
                                                                _g35514_)
                                                               1)))
                                                      (if (not (##fx= _g35515_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35515_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3315933210_
                                                           (##vector-ref
                                                            _g35514_
                                                            0))
                                                          (_tl3316133213_
                                                           (##vector-ref
                                                            _g35514_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3316133213_)
                                                          (letrec ((_loop3316233216_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3316033220_ _body3316633223_)
                              (if (gx#stx-pair? _hd3316033220_)
                                  (let ((_e3316333226_
                                         (gx#syntax-e _hd3316033220_)))
                                    (let ((_lp-hd3316433230_
                                           (##car _e3316333226_))
                                          (_lp-tl3316533233_
                                           (##cdr _e3316333226_)))
                                      (_loop3316233216_
                                       _lp-tl3316533233_
                                       (cons _lp-hd3316433230_
                                             _body3316633223_))))
                                  (let ((_body3316733236_
                                         (reverse _body3316633223_)))
                                    ((lambda (_L33240_
                                              _L33242_
                                              _L33243_
                                              _L33244_)
                                       (if (gx#identifier? _L33243_)
                                           (cons _L33244_
                                                 (cons _L33243_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33242_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3326533268_ _g3326633271_)
                                            (cons _g3326533268_ _g3326633271_))
                                          '()
                                          _L33240_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3313333173_ _g3313433177_)))
                                     _body3316733236_
                                     _tl3315833207_
                                     _hd3315733204_
                                     _hd3315133184_))))))
                    (_loop3316233216_ _target3315933210_ '()))
                  (_g3313333173_ _g3313433177_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3313333173_ _g3313433177_))
                                            (_g3313333173_ _g3313433177_))))
                                    (_g3313333173_ _g3313433177_))))
                            (_g3313333173_ _g3313433177_))))
                    (_g3313333173_ _g3313433177_))))
             (_g3313133328_
              (lambda (_g3313433278_)
                (if (gx#stx-pair? _g3313433278_)
                    (let ((_e3313733281_ (gx#syntax-e _g3313433278_)))
                      (let ((_hd3313833285_ (##car _e3313733281_))
                            (_tl3313933288_ (##cdr _e3313733281_)))
                        (if (gx#stx-pair? _tl3313933288_)
                            (let ((_e3314033291_ (gx#syntax-e _tl3313933288_)))
                              (let ((_hd3314133295_ (##car _e3314033291_))
                                    (_tl3314233298_ (##cdr _e3314033291_)))
                                (if (gx#stx-pair? _tl3314233298_)
                                    (let ((_e3314333301_
                                           (gx#syntax-e _tl3314233298_)))
                                      (let ((_hd3314433305_
                                             (##car _e3314333301_))
                                            (_tl3314533308_
                                             (##cdr _e3314333301_)))
                                        (if (gx#stx-null? _tl3314533308_)
                                            ((lambda (_L33311_ _L33313_)
                                               (if (gx#identifier? _L33313_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33313_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L33311_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3313233274_
                                                    _g3313433278_)))
                                             _hd3314433305_
                                             _hd3314133295_)
                                            (_g3313233274_ _g3313433278_))))
                                    (_g3313233274_ _g3313433278_))))
                            (_g3313233274_ _g3313433278_))))
                    (_g3313233274_ _g3313433278_)))))
        (_g3313133328_ _$stx33128_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx33333_)
      (let* ((_g3333833378_
              (lambda (_g3333933374_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3333933374_)))
             (_g3333733479_
              (lambda (_g3333933382_)
                (if (gx#stx-pair? _g3333933382_)
                    (let ((_e3335533385_ (gx#syntax-e _g3333933382_)))
                      (let ((_hd3335633389_ (##car _e3335533385_))
                            (_tl3335733392_ (##cdr _e3335533385_)))
                        (if (gx#stx-pair? _tl3335733392_)
                            (let ((_e3335833395_ (gx#syntax-e _tl3335733392_)))
                              (let ((_hd3335933399_ (##car _e3335833395_))
                                    (_tl3336033402_ (##cdr _e3335833395_)))
                                (if (gx#stx-pair? _hd3335933399_)
                                    (let ((_e3336133405_
                                           (gx#syntax-e _hd3335933399_)))
                                      (let ((_hd3336233409_
                                             (##car _e3336133405_))
                                            (_tl3336333412_
                                             (##cdr _e3336133405_)))
                                        (if (gx#stx-pair/null? _tl3336033402_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3336033402_)
                                                      '0)
                                                (let ((_g35516_
                                                       (gx#syntax-split-splice
                                                        _tl3336033402_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35517_
                                                           (if (##values?
                                                                _g35516_)
                                                               (##vector-length
                                                                _g35516_)
                                                               1)))
                                                      (if (not (##fx= _g35517_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35517_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3336433415_
                                                           (##vector-ref
                                                            _g35516_
                                                            0))
                                                          (_tl3336633418_
                                                           (##vector-ref
                                                            _g35516_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3336633418_)
                                                          (letrec ((_loop3336733421_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3336533425_ _body3337133428_)
                              (if (gx#stx-pair? _hd3336533425_)
                                  (let ((_e3336833431_
                                         (gx#syntax-e _hd3336533425_)))
                                    (let ((_lp-hd3336933435_
                                           (##car _e3336833431_))
                                          (_lp-tl3337033438_
                                           (##cdr _e3336833431_)))
                                      (_loop3336733421_
                                       _lp-tl3337033438_
                                       (cons _lp-hd3336933435_
                                             _body3337133428_))))
                                  (let ((_body3337233441_
                                         (reverse _body3337133428_)))
                                    ((lambda (_L33445_
                                              _L33447_
                                              _L33448_
                                              _L33449_)
                                       (if (gx#identifier? _L33448_)
                                           (cons _L33449_
                                                 (cons _L33448_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33447_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3347033473_ _g3347133476_)
                                            (cons _g3347033473_ _g3347133476_))
                                          '()
                                          _L33445_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3333833378_ _g3333933382_)))
                                     _body3337233441_
                                     _tl3336333412_
                                     _hd3336233409_
                                     _hd3335633389_))))))
                    (_loop3336733421_ _target3336433415_ '()))
                  (_g3333833378_ _g3333933382_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3333833378_ _g3333933382_))
                                            (_g3333833378_ _g3333933382_))))
                                    (_g3333833378_ _g3333933382_))))
                            (_g3333833378_ _g3333933382_))))
                    (_g3333833378_ _g3333933382_))))
             (_g3333633533_
              (lambda (_g3333933483_)
                (if (gx#stx-pair? _g3333933483_)
                    (let ((_e3334233486_ (gx#syntax-e _g3333933483_)))
                      (let ((_hd3334333490_ (##car _e3334233486_))
                            (_tl3334433493_ (##cdr _e3334233486_)))
                        (if (gx#stx-pair? _tl3334433493_)
                            (let ((_e3334533496_ (gx#syntax-e _tl3334433493_)))
                              (let ((_hd3334633500_ (##car _e3334533496_))
                                    (_tl3334733503_ (##cdr _e3334533496_)))
                                (if (gx#stx-pair? _tl3334733503_)
                                    (let ((_e3334833506_
                                           (gx#syntax-e _tl3334733503_)))
                                      (let ((_hd3334933510_
                                             (##car _e3334833506_))
                                            (_tl3335033513_
                                             (##cdr _e3334833506_)))
                                        (if (gx#stx-null? _tl3335033513_)
                                            ((lambda (_L33516_ _L33518_)
                                               (if (gx#identifier? _L33518_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33518_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L33516_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3333733479_
                                                    _g3333933483_)))
                                             _hd3334933510_
                                             _hd3334633500_)
                                            (_g3333733479_ _g3333933483_))))
                                    (_g3333733479_ _g3333933483_))))
                            (_g3333733479_ _g3333933483_))))
                    (_g3333733479_ _g3333933483_)))))
        (_g3333633533_ _$stx33333_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx33538_)
       (let* ((_g3354133561_
               (lambda (_g3354233557_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3354233557_)))
              (_g3354033632_
               (lambda (_g3354233565_)
                 (if (gx#stx-pair? _g3354233565_)
                     (let ((_e3354433568_ (gx#syntax-e _g3354233565_)))
                       (let ((_hd3354533572_ (##car _e3354433568_))
                             (_tl3354633575_ (##cdr _e3354433568_)))
                         (if (gx#stx-pair/null? _tl3354633575_)
                             (if (fx>= (gx#stx-length _tl3354633575_) '0)
                                 (let ((_g35518_
                                        (gx#syntax-split-splice
                                         _tl3354633575_
                                         '0)))
                                   (begin
                                     (let ((_g35519_
                                            (if (##values? _g35518_)
                                                (##vector-length _g35518_)
                                                1)))
                                       (if (not (##fx= _g35519_ 2))
                                           (error "Context expects 2 values"
                                                  _g35519_)))
                                     (let ((_target3354733578_
                                            (##vector-ref _g35518_ 0))
                                           (_tl3354933581_
                                            (##vector-ref _g35518_ 1)))
                                       (if (gx#stx-null? _tl3354933581_)
                                           (letrec ((_loop3355033584_
                                                     (lambda (_hd3354833588_
                                                              _body3355433591_)
                                                       (if (gx#stx-pair?
                                                            _hd3354833588_)
                                                           (let ((_e3355133594_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3354833588_)))
                     (let ((_lp-hd3355233598_ (##car _e3355133594_))
                           (_lp-tl3355333601_ (##cdr _e3355133594_)))
                       (_loop3355033584_
                        _lp-tl3355333601_
                        (cons _lp-hd3355233598_ _body3355433591_))))
                   (let ((_body3355533604_ (reverse _body3355433591_)))
                     ((lambda (_L33608_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3362333626_
                                                      _g3362433629_)
                                               (cons _g3362333626_
                                                     _g3362433629_))
                                             '()
                                             _L33608_)))))
                      _body3355533604_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3355033584_
                                              _target3354733578_
                                              '()))
                                           (_g3354133561_ _g3354233565_)))))
                                 (_g3354133561_ _g3354233565_))
                             (_g3354133561_ _g3354233565_))))
                     (_g3354133561_ _g3354233565_)))))
         (_g3354033632_ _stx33538_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33637_)
       (let* ((_g3364033660_
               (lambda (_g3364133656_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3364133656_)))
              (_g3363933731_
               (lambda (_g3364133664_)
                 (if (gx#stx-pair? _g3364133664_)
                     (let ((_e3364333667_ (gx#syntax-e _g3364133664_)))
                       (let ((_hd3364433671_ (##car _e3364333667_))
                             (_tl3364533674_ (##cdr _e3364333667_)))
                         (if (gx#stx-pair/null? _tl3364533674_)
                             (if (fx>= (gx#stx-length _tl3364533674_) '0)
                                 (let ((_g35520_
                                        (gx#syntax-split-splice
                                         _tl3364533674_
                                         '0)))
                                   (begin
                                     (let ((_g35521_
                                            (if (##values? _g35520_)
                                                (##vector-length _g35520_)
                                                1)))
                                       (if (not (##fx= _g35521_ 2))
                                           (error "Context expects 2 values"
                                                  _g35521_)))
                                     (let ((_target3364633677_
                                            (##vector-ref _g35520_ 0))
                                           (_tl3364833680_
                                            (##vector-ref _g35520_ 1)))
                                       (if (gx#stx-null? _tl3364833680_)
                                           (letrec ((_loop3364933683_
                                                     (lambda (_hd3364733687_
                                                              _body3365333690_)
                                                       (if (gx#stx-pair?
                                                            _hd3364733687_)
                                                           (let ((_e3365033693_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3364733687_)))
                     (let ((_lp-hd3365133697_ (##car _e3365033693_))
                           (_lp-tl3365233700_ (##cdr _e3365033693_)))
                       (_loop3364933683_
                        _lp-tl3365233700_
                        (cons _lp-hd3365133697_ _body3365333690_))))
                   (let ((_body3365433703_ (reverse _body3365333690_)))
                     ((lambda (_L33707_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3372233725_
                                                      _g3372333728_)
                                               (cons _g3372233725_
                                                     _g3372333728_))
                                             '()
                                             _L33707_)))))
                      _body3365433703_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3364933683_
                                              _target3364633677_
                                              '()))
                                           (_g3364033660_ _g3364133664_)))))
                                 (_g3364033660_ _g3364133664_))
                             (_g3364033660_ _g3364133664_))))
                     (_g3364033660_ _g3364133664_)))))
         (_g3363933731_ _stx33637_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33736_)
       (let* ((_g3373933763_
               (lambda (_g3374033759_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3374033759_)))
              (_g3373833885_
               (lambda (_g3374033767_)
                 (if (gx#stx-pair? _g3374033767_)
                     (let ((_e3374333770_ (gx#syntax-e _g3374033767_)))
                       (let ((_hd3374433774_ (##car _e3374333770_))
                             (_tl3374533777_ (##cdr _e3374333770_)))
                         (if (gx#stx-pair? _tl3374533777_)
                             (let ((_e3374633780_
                                    (gx#syntax-e _tl3374533777_)))
                               (let ((_hd3374733784_ (##car _e3374633780_))
                                     (_tl3374833787_ (##cdr _e3374633780_)))
                                 (if (gx#stx-pair/null? _tl3374833787_)
                                     (if (fx>= (gx#stx-length _tl3374833787_)
                                               '0)
                                         (let ((_g35522_
                                                (gx#syntax-split-splice
                                                 _tl3374833787_
                                                 '0)))
                                           (begin
                                             (let ((_g35523_
                                                    (if (##values? _g35522_)
                                                        (##vector-length
                                                         _g35522_)
                                                        1)))
                                               (if (not (##fx= _g35523_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35523_)))
                                             (let ((_target3374933790_
                                                    (##vector-ref _g35522_ 0))
                                                   (_tl3375133793_
                                                    (##vector-ref _g35522_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3375133793_)
                                                   (letrec ((_loop3375233796_
                                                             (lambda (_hd3375033800_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3375633803_)
                       (if (gx#stx-pair? _hd3375033800_)
                           (let ((_e3375333806_ (gx#syntax-e _hd3375033800_)))
                             (let ((_lp-hd3375433810_ (##car _e3375333806_))
                                   (_lp-tl3375533813_ (##cdr _e3375333806_)))
                               (_loop3375233796_
                                _lp-tl3375533813_
                                (cons _lp-hd3375433810_ _id3375633803_))))
                           (let ((_id3375733816_ (reverse _id3375633803_)))
                             ((lambda (_L33820_ _L33822_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3383933842_
                                                       _g3384033845_)
                                                (cons _g3383933842_
                                                      _g3384033845_))
                                              '()
                                              _L33820_)))
                                    (let* ((_keys33856_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3384733850_
                                                               _g3384833853_)
                                                        (cons _g3384733850_
                                                              _g3384833853_))
                                                      '()
                                                      _L33820_))))
                                           (_keytab33867_
                                            (let ((_ht33859_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3386133863_)
                                                   (hash-put!
                                                    _ht33859_
                                                    _g3386133863_
                                                    '#t))
                                                 _keys33856_)
                                                _ht33859_)))
                                           (_imports33870_
                                            (gx#core-expand-import-source
                                             _L33822_))
                                           (_fold-e33880_
                                            (letrec ((_fold-e33873_
                                                      (lambda (_in33876_
                                                               _r33878_)
                                                        (if (gx#module-import?
                                                             _in33876_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33867_
                         (gx#module-import-name _in33876_))
                        (cons _in33876_ _r33878_)
                        _r33878_)
                    (if (gx#import-set? _in33876_)
                        (foldl _fold-e33873_
                               _r33878_
                               (gx#import-set-imports _in33876_))
                        _r33878_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33873_)))
                                      (cons 'begin:
                                            (foldl _fold-e33880_
                                                   '()
                                                   _imports33870_)))
                                    (_g3373933763_ _g3374033767_)))
                              _id3375733816_
                              _hd3374733784_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3375233796_
                                                      _target3374933790_
                                                      '()))
                                                   (_g3373933763_
                                                    _g3374033767_)))))
                                         (_g3373933763_ _g3374033767_))
                                     (_g3373933763_ _g3374033767_))))
                             (_g3373933763_ _g3374033767_))))
                     (_g3373933763_ _g3374033767_)))))
         (_g3373833885_ _stx33736_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33890_)
       (let* ((_g3389333917_
               (lambda (_g3389433913_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3389433913_)))
              (_g3389234039_
               (lambda (_g3389433921_)
                 (if (gx#stx-pair? _g3389433921_)
                     (let ((_e3389733924_ (gx#syntax-e _g3389433921_)))
                       (let ((_hd3389833928_ (##car _e3389733924_))
                             (_tl3389933931_ (##cdr _e3389733924_)))
                         (if (gx#stx-pair? _tl3389933931_)
                             (let ((_e3390033934_
                                    (gx#syntax-e _tl3389933931_)))
                               (let ((_hd3390133938_ (##car _e3390033934_))
                                     (_tl3390233941_ (##cdr _e3390033934_)))
                                 (if (gx#stx-pair/null? _tl3390233941_)
                                     (if (fx>= (gx#stx-length _tl3390233941_)
                                               '0)
                                         (let ((_g35524_
                                                (gx#syntax-split-splice
                                                 _tl3390233941_
                                                 '0)))
                                           (begin
                                             (let ((_g35525_
                                                    (if (##values? _g35524_)
                                                        (##vector-length
                                                         _g35524_)
                                                        1)))
                                               (if (not (##fx= _g35525_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35525_)))
                                             (let ((_target3390333944_
                                                    (##vector-ref _g35524_ 0))
                                                   (_tl3390533947_
                                                    (##vector-ref _g35524_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3390533947_)
                                                   (letrec ((_loop3390633950_
                                                             (lambda (_hd3390433954_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3391033957_)
                       (if (gx#stx-pair? _hd3390433954_)
                           (let ((_e3390733960_ (gx#syntax-e _hd3390433954_)))
                             (let ((_lp-hd3390833964_ (##car _e3390733960_))
                                   (_lp-tl3390933967_ (##cdr _e3390733960_)))
                               (_loop3390633950_
                                _lp-tl3390933967_
                                (cons _lp-hd3390833964_ _id3391033957_))))
                           (let ((_id3391133970_ (reverse _id3391033957_)))
                             ((lambda (_L33974_ _L33976_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3399333996_
                                                       _g3399433999_)
                                                (cons _g3399333996_
                                                      _g3399433999_))
                                              '()
                                              _L33974_)))
                                    (let* ((_keys34010_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3400134004_
                                                               _g3400234007_)
                                                        (cons _g3400134004_
                                                              _g3400234007_))
                                                      '()
                                                      _L33974_))))
                                           (_keytab34021_
                                            (let ((_ht34013_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3401534017_)
                                                   (hash-put!
                                                    _ht34013_
                                                    _g3401534017_
                                                    '#t))
                                                 _keys34010_)
                                                _ht34013_)))
                                           (_imports34024_
                                            (gx#core-expand-import-source
                                             _L33976_))
                                           (_fold-e34034_
                                            (letrec ((_fold-e34027_
                                                      (lambda (_in34030_
                                                               _r34032_)
                                                        (if (gx#module-import?
                                                             _in34030_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34021_
                         (gx#module-import-name _in34030_))
                        _r34032_
                        (cons _in34030_ _r34032_))
                    (if (gx#import-set? _in34030_)
                        (foldl _fold-e34027_
                               _r34032_
                               (gx#import-set-imports _in34030_))
                        (cons _in34030_ _r34032_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34027_)))
                                      (cons 'begin:
                                            (foldl _fold-e34034_
                                                   '()
                                                   _imports34024_)))
                                    (_g3389333917_ _g3389433921_)))
                              _id3391133970_
                              _hd3390133938_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3390633950_
                                                      _target3390333944_
                                                      '()))
                                                   (_g3389333917_
                                                    _g3389433921_)))))
                                         (_g3389333917_ _g3389433921_))
                                     (_g3389333917_ _g3389433921_))))
                             (_g3389333917_ _g3389433921_))))
                     (_g3389333917_ _g3389433921_)))))
         (_g3389234039_ _stx33890_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in34091_ _rename34093_)
      (gx#make-module-import
       (gx#module-import-source _in34091_)
       _rename34093_
       (gx#module-import-phi _in34091_)
       (gx#module-import-weak? _in34091_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name34044_ _pre34046_)
      (let* ((_name3404734055_ _name34044_)
             (_E3405034061_
              (lambda () (error '"No clause matching" _name3404734055_)))
             (_else3404934067_
              (lambda () (make-symbol _pre34046_ _name34044_)))
             (_K3405134075_
              (lambda (_mark34071_ _id34073_)
                (cons (make-symbol _pre34046_ _id34073_) _mark34071_))))
        (if (##pair? _name3404734055_)
            (let ((_hd3405234079_ (##car _name3404734055_))
                  (_tl3405334082_ (##cdr _name3404734055_)))
              (let* ((_id34085_ _hd3405234079_) (_mark34088_ _tl3405334082_))
                (_K3405134075_ _mark34088_ _id34085_)))
            (_else3404934067_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx34095_)
       (let* ((_g3409834131_
               (lambda (_g3409934127_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3409934127_)))
              (_g3409734317_
               (lambda (_g3409934135_)
                 (if (gx#stx-pair? _g3409934135_)
                     (let ((_e3410334138_ (gx#syntax-e _g3409934135_)))
                       (let ((_hd3410434142_ (##car _e3410334138_))
                             (_tl3410534145_ (##cdr _e3410334138_)))
                         (if (gx#stx-pair? _tl3410534145_)
                             (let ((_e3410634148_
                                    (gx#syntax-e _tl3410534145_)))
                               (let ((_hd3410734152_ (##car _e3410634148_))
                                     (_tl3410834155_ (##cdr _e3410634148_)))
                                 (if (gx#stx-pair/null? _tl3410834155_)
                                     (if (fx>= (gx#stx-length _tl3410834155_)
                                               '0)
                                         (let ((_g35526_
                                                (gx#syntax-split-splice
                                                 _tl3410834155_
                                                 '0)))
                                           (begin
                                             (let ((_g35527_
                                                    (if (##values? _g35526_)
                                                        (##vector-length
                                                         _g35526_)
                                                        1)))
                                               (if (not (##fx= _g35527_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35527_)))
                                             (let ((_target3410934158_
                                                    (##vector-ref _g35526_ 0))
                                                   (_tl3411134161_
                                                    (##vector-ref _g35526_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3411134161_)
                                                   (letrec ((_loop3411234164_
                                                             (lambda (_hd3411034168_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3411634171_
                              _id3411734173_)
                       (if (gx#stx-pair? _hd3411034168_)
                           (let ((_e3411334176_ (gx#syntax-e _hd3411034168_)))
                             (let ((_lp-hd3411434180_ (##car _e3411334176_))
                                   (_lp-tl3411534183_ (##cdr _e3411334176_)))
                               (if (gx#stx-pair? _lp-hd3411434180_)
                                   (let ((_e3412034186_
                                          (gx#syntax-e _lp-hd3411434180_)))
                                     (let ((_hd3412134190_
                                            (##car _e3412034186_))
                                           (_tl3412234193_
                                            (##cdr _e3412034186_)))
                                       (if (gx#stx-pair? _tl3412234193_)
                                           (let ((_e3412334196_
                                                  (gx#syntax-e
                                                   _tl3412234193_)))
                                             (let ((_hd3412434200_
                                                    (##car _e3412334196_))
                                                   (_tl3412534203_
                                                    (##cdr _e3412334196_)))
                                               (if (gx#stx-null?
                                                    _tl3412534203_)
                                                   (_loop3411234164_
                                                    _lp-tl3411534183_
                                                    (cons _hd3412434200_
                                                          _new-id3411634171_)
                                                    (cons _hd3412134190_
                                                          _id3411734173_))
                                                   (_g3409834131_
                                                    _g3409934135_))))
                                           (_g3409834131_ _g3409934135_))))
                                   (_g3409834131_ _g3409934135_))))
                           (let ((_new-id3411834206_
                                  (reverse _new-id3411634171_))
                                 (_id3411934209_ (reverse _id3411734173_)))
                             ((lambda (_L34212_ _L34214_ _L34215_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3423334236_
                                                           _g3423434239_)
                                                    (cons _g3423334236_
                                                          _g3423434239_))
                                                  '()
                                                  _L34214_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3424134244_
                                                           _g3424234247_)
                                                    (cons _g3424134244_
                                                          _g3424234247_))
                                                  '()
                                                  _L34212_)))
                                        '#f)
                                    (let* ((_keytab34250_ (make-hash-table))
                                           (_found34253_ (make-hash-table))
                                           (_g35528_
                                            (for-each
                                             (lambda (_id34256_ _new-id34258_)
                                               (hash-put!
                                                _keytab34250_
                                                (gx#core-identifier-key
                                                 _id34256_)
                                                (gx#core-identifier-key
                                                 _new-id34258_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3425934262_
                                                               _g3426034265_)
                                                        (cons _g3425934262_
                                                              _g3426034265_))
                                                      '()
                                                      _L34214_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3426734270_
                                                               _g3426834273_)
                                                        (cons _g3426734270_
                                                              _g3426834273_))
                                                      '()
                                                      _L34212_))))
                                           (_imports34278_
                                            (gx#core-expand-import-source
                                             _L34215_))
                                           (_fold-e34298_
                                            (letrec ((_fold-e34281_
                                                      (lambda (_in34284_
                                                               _r34286_)
                                                        (if (gx#module-import?
                                                             _in34284_)
                                                            (let* ((_name34288_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in34284_))
                           (_$e34291_ (hash-get _keytab34250_ _name34288_)))
                      (if _$e34291_
                          ((lambda (_rename34295_)
                             (begin
                               (hash-put! _found34253_ _name34288_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in34284_
                                      _rename34295_)
                                     _r34286_)))
                           _$e34291_)
                          (cons _in34284_ _r34286_)))
                    (if (gx#import-set? _in34284_)
                        (foldl _fold-e34281_
                               _r34286_
                               (gx#import-set-imports _in34284_))
                        (cons _in34284_ _r34286_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34281_))
                                           (_new-imports34301_
                                            (foldl _fold-e34298_
                                                   '()
                                                   _imports34278_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34306_)
                                           (if (hash-get
                                                _found34253_
                                                (gx#core-identifier-key
                                                 _id34306_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx34095_
                                                _id34306_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3430834311_
                                                           _g3430934314_)
                                                    (cons _g3430834311_
                                                          _g3430934314_))
                                                  '()
                                                  _L34214_)))
                                        (cons 'begin: _new-imports34301_)))
                                    (_g3409834131_ _g3409934135_)))
                              _new-id3411834206_
                              _id3411934209_
                              _hd3410734152_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3411234164_
                                                      _target3410934158_
                                                      '()
                                                      '()))
                                                   (_g3409834131_
                                                    _g3409934135_)))))
                                         (_g3409834131_ _g3409934135_))
                                     (_g3409834131_ _g3409934135_))))
                             (_g3409834131_ _g3409934135_))))
                     (_g3409834131_ _g3409934135_)))))
         (_g3409734317_ _stx34095_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx34323_)
       (let* ((_g3432634344_
               (lambda (_g3432734340_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3432734340_)))
              (_g3432534423_
               (lambda (_g3432734348_)
                 (if (gx#stx-pair? _g3432734348_)
                     (let ((_e3433034351_ (gx#syntax-e _g3432734348_)))
                       (let ((_hd3433134355_ (##car _e3433034351_))
                             (_tl3433234358_ (##cdr _e3433034351_)))
                         (if (gx#stx-pair? _tl3433234358_)
                             (let ((_e3433334361_
                                    (gx#syntax-e _tl3433234358_)))
                               (let ((_hd3433434365_ (##car _e3433334361_))
                                     (_tl3433534368_ (##cdr _e3433334361_)))
                                 (if (gx#stx-pair? _tl3433534368_)
                                     (let ((_e3433634371_
                                            (gx#syntax-e _tl3433534368_)))
                                       (let ((_hd3433734375_
                                              (##car _e3433634371_))
                                             (_tl3433834378_
                                              (##cdr _e3433634371_)))
                                         (if (gx#stx-null? _tl3433834378_)
                                             ((lambda (_L34381_ _L34383_)
                                                (if (gx#identifier? _L34381_)
                                                    (let* ((_pre34399_
                                                            (gx#stx-e
                                                             _L34381_))
                                                           (_imports34402_
                                                            (gx#core-expand-import-source
                                                             _L34383_))
                                                           (_rename-e34408_
                                                            (lambda (_name34405_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34405_
                                                               _pre34399_)))
                                                           (_fold-e34418_
                                                            (letrec ((_fold-e34411_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in34414_ _r34416_)
                                (if (gx#module-import? _in34414_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in34414_
                                           (_rename-e34408_
                                            (gx#module-import-name _in34414_)))
                                          _r34416_)
                                    (if (gx#import-set? _in34414_)
                                        (foldl _fold-e34411_
                                               _r34416_
                                               (gx#import-set-imports
                                                _in34414_))
                                        (cons _in34414_ _r34416_))))))
                      _fold-e34411_)))
              (cons 'begin: (foldl _fold-e34418_ '() _imports34402_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3432634344_
                                                     _g3432734348_)))
                                              _hd3433734375_
                                              _hd3433434365_)
                                             (_g3432634344_ _g3432734348_))))
                                     (_g3432634344_ _g3432734348_))))
                             (_g3432634344_ _g3432734348_))))
                     (_g3432634344_ _g3432734348_)))))
         (_g3432534423_ _stx34323_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx34427_)
       (let* ((_g3443034454_
               (lambda (_g3443134450_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3443134450_)))
              (_g3442934576_
               (lambda (_g3443134458_)
                 (if (gx#stx-pair? _g3443134458_)
                     (let ((_e3443434461_ (gx#syntax-e _g3443134458_)))
                       (let ((_hd3443534465_ (##car _e3443434461_))
                             (_tl3443634468_ (##cdr _e3443434461_)))
                         (if (gx#stx-pair? _tl3443634468_)
                             (let ((_e3443734471_
                                    (gx#syntax-e _tl3443634468_)))
                               (let ((_hd3443834475_ (##car _e3443734471_))
                                     (_tl3443934478_ (##cdr _e3443734471_)))
                                 (if (gx#stx-pair/null? _tl3443934478_)
                                     (if (fx>= (gx#stx-length _tl3443934478_)
                                               '0)
                                         (let ((_g35529_
                                                (gx#syntax-split-splice
                                                 _tl3443934478_
                                                 '0)))
                                           (begin
                                             (let ((_g35530_
                                                    (if (##values? _g35529_)
                                                        (##vector-length
                                                         _g35529_)
                                                        1)))
                                               (if (not (##fx= _g35530_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35530_)))
                                             (let ((_target3444034481_
                                                    (##vector-ref _g35529_ 0))
                                                   (_tl3444234484_
                                                    (##vector-ref _g35529_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3444234484_)
                                                   (letrec ((_loop3444334487_
                                                             (lambda (_hd3444134491_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3444734494_)
                       (if (gx#stx-pair? _hd3444134491_)
                           (let ((_e3444434497_ (gx#syntax-e _hd3444134491_)))
                             (let ((_lp-hd3444534501_ (##car _e3444434497_))
                                   (_lp-tl3444634504_ (##cdr _e3444434497_)))
                               (_loop3444334487_
                                _lp-tl3444634504_
                                (cons _lp-hd3444534501_ _id3444734494_))))
                           (let ((_id3444834507_ (reverse _id3444734494_)))
                             ((lambda (_L34511_ _L34513_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3453034533_
                                                       _g3453134536_)
                                                (cons _g3453034533_
                                                      _g3453134536_))
                                              '()
                                              _L34511_)))
                                    (let* ((_keys34547_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3453834541_
                                                               _g3453934544_)
                                                        (cons _g3453834541_
                                                              _g3453934544_))
                                                      '()
                                                      _L34511_))))
                                           (_keytab34558_
                                            (let ((_ht34550_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3455234554_)
                                                   (hash-put!
                                                    _ht34550_
                                                    _g3455234554_
                                                    '#t))
                                                 _keys34547_)
                                                _ht34550_)))
                                           (_exports34561_
                                            (gx#core-expand-export-source
                                             _L34513_))
                                           (_fold-e34571_
                                            (letrec ((_fold-e34564_
                                                      (lambda (_out34567_
                                                               _r34569_)
                                                        (if (gx#module-export?
                                                             _out34567_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34558_
                         (gx#module-export-name _out34567_))
                        _r34569_
                        (cons _out34567_ _r34569_))
                    (if (gx#export-set? _out34567_)
                        (foldl _fold-e34564_
                               _r34569_
                               (gx#export-set-exports _out34567_))
                        _r34569_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34564_)))
                                      (cons 'begin:
                                            (foldl _fold-e34571_
                                                   '()
                                                   _exports34561_)))
                                    (_g3443034454_ _g3443134458_)))
                              _id3444834507_
                              _hd3443834475_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3444334487_
                                                      _target3444034481_
                                                      '()))
                                                   (_g3443034454_
                                                    _g3443134458_)))))
                                         (_g3443034454_ _g3443134458_))
                                     (_g3443034454_ _g3443134458_))))
                             (_g3443034454_ _g3443134458_))))
                     (_g3443034454_ _g3443134458_)))))
         (_g3442934576_ _stx34427_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34581_ _rename34583_)
      (gx#make-module-export
       (gx#module-export-context _out34581_)
       (gx#module-export-key _out34581_)
       (gx#module-export-phi _out34581_)
       _rename34583_
       (gx#module-export-weak? _out34581_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34585_)
       (let* ((_g3458834621_
               (lambda (_g3458934617_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3458934617_)))
              (_g3458734807_
               (lambda (_g3458934625_)
                 (if (gx#stx-pair? _g3458934625_)
                     (let ((_e3459334628_ (gx#syntax-e _g3458934625_)))
                       (let ((_hd3459434632_ (##car _e3459334628_))
                             (_tl3459534635_ (##cdr _e3459334628_)))
                         (if (gx#stx-pair? _tl3459534635_)
                             (let ((_e3459634638_
                                    (gx#syntax-e _tl3459534635_)))
                               (let ((_hd3459734642_ (##car _e3459634638_))
                                     (_tl3459834645_ (##cdr _e3459634638_)))
                                 (if (gx#stx-pair/null? _tl3459834645_)
                                     (if (fx>= (gx#stx-length _tl3459834645_)
                                               '0)
                                         (let ((_g35531_
                                                (gx#syntax-split-splice
                                                 _tl3459834645_
                                                 '0)))
                                           (begin
                                             (let ((_g35532_
                                                    (if (##values? _g35531_)
                                                        (##vector-length
                                                         _g35531_)
                                                        1)))
                                               (if (not (##fx= _g35532_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35532_)))
                                             (let ((_target3459934648_
                                                    (##vector-ref _g35531_ 0))
                                                   (_tl3460134651_
                                                    (##vector-ref _g35531_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3460134651_)
                                                   (letrec ((_loop3460234654_
                                                             (lambda (_hd3460034658_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3460634661_
                              _id3460734663_)
                       (if (gx#stx-pair? _hd3460034658_)
                           (let ((_e3460334666_ (gx#syntax-e _hd3460034658_)))
                             (let ((_lp-hd3460434670_ (##car _e3460334666_))
                                   (_lp-tl3460534673_ (##cdr _e3460334666_)))
                               (if (gx#stx-pair? _lp-hd3460434670_)
                                   (let ((_e3461034676_
                                          (gx#syntax-e _lp-hd3460434670_)))
                                     (let ((_hd3461134680_
                                            (##car _e3461034676_))
                                           (_tl3461234683_
                                            (##cdr _e3461034676_)))
                                       (if (gx#stx-pair? _tl3461234683_)
                                           (let ((_e3461334686_
                                                  (gx#syntax-e
                                                   _tl3461234683_)))
                                             (let ((_hd3461434690_
                                                    (##car _e3461334686_))
                                                   (_tl3461534693_
                                                    (##cdr _e3461334686_)))
                                               (if (gx#stx-null?
                                                    _tl3461534693_)
                                                   (_loop3460234654_
                                                    _lp-tl3460534673_
                                                    (cons _hd3461434690_
                                                          _new-id3460634661_)
                                                    (cons _hd3461134680_
                                                          _id3460734663_))
                                                   (_g3458834621_
                                                    _g3458934625_))))
                                           (_g3458834621_ _g3458934625_))))
                                   (_g3458834621_ _g3458934625_))))
                           (let ((_new-id3460834696_
                                  (reverse _new-id3460634661_))
                                 (_id3460934699_ (reverse _id3460734663_)))
                             ((lambda (_L34702_ _L34704_ _L34705_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3472334726_
                                                           _g3472434729_)
                                                    (cons _g3472334726_
                                                          _g3472434729_))
                                                  '()
                                                  _L34704_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3473134734_
                                                           _g3473234737_)
                                                    (cons _g3473134734_
                                                          _g3473234737_))
                                                  '()
                                                  _L34702_)))
                                        '#f)
                                    (let* ((_keytab34740_ (make-hash-table))
                                           (_found34743_ (make-hash-table))
                                           (_g35533_
                                            (for-each
                                             (lambda (_id34746_ _new-id34748_)
                                               (hash-put!
                                                _keytab34740_
                                                (gx#core-identifier-key
                                                 _id34746_)
                                                (gx#core-identifier-key
                                                 _new-id34748_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3474934752_
                                                               _g3475034755_)
                                                        (cons _g3474934752_
                                                              _g3475034755_))
                                                      '()
                                                      _L34704_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3475734760_
                                                               _g3475834763_)
                                                        (cons _g3475734760_
                                                              _g3475834763_))
                                                      '()
                                                      _L34702_))))
                                           (_exports34768_
                                            (gx#core-expand-export-source
                                             _L34705_))
                                           (_fold-e34788_
                                            (letrec ((_fold-e34771_
                                                      (lambda (_out34774_
                                                               _r34776_)
                                                        (if (gx#module-export?
                                                             _out34774_)
                                                            (let* ((_name34778_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34774_))
                           (_$e34781_ (hash-get _keytab34740_ _name34778_)))
                      (if _$e34781_
                          ((lambda (_rename34785_)
                             (begin
                               (hash-put! _found34743_ _name34778_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34774_
                                      _rename34785_)
                                     _r34776_)))
                           _$e34781_)
                          (cons _out34774_ _r34776_)))
                    (if (gx#export-set? _out34774_)
                        (foldl _fold-e34771_
                               _r34776_
                               (gx#export-set-exports _out34774_))
                        (cons _out34774_ _r34776_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34771_))
                                           (_new-exports34791_
                                            (foldl _fold-e34788_
                                                   '()
                                                   _exports34768_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34796_)
                                           (if (hash-get
                                                _found34743_
                                                (gx#core-identifier-key
                                                 _id34796_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34585_
                                                _id34796_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3479834801_
                                                           _g3479934804_)
                                                    (cons _g3479834801_
                                                          _g3479934804_))
                                                  '()
                                                  _L34704_)))
                                        (cons 'begin: _new-exports34791_)))
                                    (_g3458834621_ _g3458934625_)))
                              _new-id3460834696_
                              _id3460934699_
                              _hd3459734642_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3460234654_
                                                      _target3459934648_
                                                      '()
                                                      '()))
                                                   (_g3458834621_
                                                    _g3458934625_)))))
                                         (_g3458834621_ _g3458934625_))
                                     (_g3458834621_ _g3458934625_))))
                             (_g3458834621_ _g3458934625_))))
                     (_g3458834621_ _g3458934625_)))))
         (_g3458734807_ _stx34585_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34813_)
       (let* ((_g3481634834_
               (lambda (_g3481734830_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3481734830_)))
              (_g3481534913_
               (lambda (_g3481734838_)
                 (if (gx#stx-pair? _g3481734838_)
                     (let ((_e3482034841_ (gx#syntax-e _g3481734838_)))
                       (let ((_hd3482134845_ (##car _e3482034841_))
                             (_tl3482234848_ (##cdr _e3482034841_)))
                         (if (gx#stx-pair? _tl3482234848_)
                             (let ((_e3482334851_
                                    (gx#syntax-e _tl3482234848_)))
                               (let ((_hd3482434855_ (##car _e3482334851_))
                                     (_tl3482534858_ (##cdr _e3482334851_)))
                                 (if (gx#stx-pair? _tl3482534858_)
                                     (let ((_e3482634861_
                                            (gx#syntax-e _tl3482534858_)))
                                       (let ((_hd3482734865_
                                              (##car _e3482634861_))
                                             (_tl3482834868_
                                              (##cdr _e3482634861_)))
                                         (if (gx#stx-null? _tl3482834868_)
                                             ((lambda (_L34871_ _L34873_)
                                                (if (gx#identifier? _L34871_)
                                                    (let* ((_pre34889_
                                                            (gx#stx-e
                                                             _L34871_))
                                                           (_exports34892_
                                                            (gx#core-expand-export-source
                                                             _L34873_))
                                                           (_rename-e34898_
                                                            (lambda (_name34895_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34895_
                                                               _pre34889_)))
                                                           (_fold-e34908_
                                                            (letrec ((_fold-e34901_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34904_ _r34906_)
                                (if (gx#module-export? _out34904_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34904_
                                           (_rename-e34898_
                                            (gx#module-export-name
                                             _out34904_)))
                                          _r34906_)
                                    (if (gx#export-set? _out34904_)
                                        (foldl _fold-e34901_
                                               _r34906_
                                               (gx#export-set-exports
                                                _out34904_))
                                        (cons _out34904_ _r34906_))))))
                      _fold-e34901_)))
              (cons 'begin: (foldl _fold-e34908_ '() _exports34892_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3481634834_
                                                     _g3481734838_)))
                                              _hd3482734865_
                                              _hd3482434855_)
                                             (_g3481634834_ _g3481734838_))))
                                     (_g3481634834_ _g3481734838_))))
                             (_g3481634834_ _g3481734838_))))
                     (_g3481634834_ _g3481734838_)))))
         (_g3481534913_ _stx34813_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34917_)
       (let* ((_g3492034940_
               (lambda (_g3492134936_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3492134936_)))
              (_g3491935175_
               (lambda (_g3492134944_)
                 (if (gx#stx-pair? _g3492134944_)
                     (let ((_e3492334947_ (gx#syntax-e _g3492134944_)))
                       (let ((_hd3492434951_ (##car _e3492334947_))
                             (_tl3492534954_ (##cdr _e3492334947_)))
                         (if (gx#stx-pair/null? _tl3492534954_)
                             (if (fx>= (gx#stx-length _tl3492534954_) '0)
                                 (let ((_g35534_
                                        (gx#syntax-split-splice
                                         _tl3492534954_
                                         '0)))
                                   (begin
                                     (let ((_g35535_
                                            (if (##values? _g35534_)
                                                (##vector-length _g35534_)
                                                1)))
                                       (if (not (##fx= _g35535_ 2))
                                           (error "Context expects 2 values"
                                                  _g35535_)))
                                     (let ((_target3492634957_
                                            (##vector-ref _g35534_ 0))
                                           (_tl3492834960_
                                            (##vector-ref _g35534_ 1)))
                                       (if (gx#stx-null? _tl3492834960_)
                                           (letrec ((_loop3492934963_
                                                     (lambda (_hd3492734967_
                                                              _id3493334970_)
                                                       (if (gx#stx-pair?
                                                            _hd3492734967_)
                                                           (let ((_e3493034973_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3492734967_)))
                     (let ((_lp-hd3493134977_ (##car _e3493034973_))
                           (_lp-tl3493234980_ (##cdr _e3493034973_)))
                       (_loop3492934963_
                        _lp-tl3493234980_
                        (cons _lp-hd3493134977_ _id3493334970_))))
                   (let ((_id3493434983_ (reverse _id3493334970_)))
                     ((lambda (_L34987_)
                        (let _lp35003_ ((_rest35006_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3516635169_
                                                           _g3516735172_)
                                                    (cons _g3516635169_
                                                          _g3516735172_))
                                                  '()
                                                  _L34987_)))
                                        (_ids35008_ '()))
                          (let* ((_g3501135023_
                                  (lambda (_g3501235019_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3501235019_)))
                                 (_g3501035034_
                                  (lambda (_g3501235027_)
                                    ((lambda () (cons 'begin: _ids35008_)))))
                                 (_g3500935163_
                                  (lambda (_g3501235038_)
                                    (if (gx#stx-pair? _g3501235038_)
                                        (let ((_e3501535041_
                                               (gx#syntax-e _g3501235038_)))
                                          (let ((_hd3501635045_
                                                 (##car _e3501535041_))
                                                (_tl3501735048_
                                                 (##cdr _e3501535041_)))
                                            ((lambda (_L35051_ _L35053_)
                                               (let ((_info35068_
                                                      (gx#syntax-local-value
                                                       _L35053_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info35068_)
                                                     (let* ((_g3507035087_
                                                             (slot-ref
                                                              _info35068_
                                                              'expander-identifiers))
                                                            (_E3507235093_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3507035087_)))
                    (_K3507335105_
                     (lambda (_setf35097_
                              _getf35099_
                              _type?35100_
                              _make-type35101_
                              _type::t35102_
                              _super35103_)
                       (_lp35003_
                        _L35051_
                        (cons _L35053_
                              (cons _type::t35102_
                                    (cons _make-type35101_
                                          (cons _type?35100_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids35008_
                                                              _setf35097_)
                                                       _getf35099_)))))))))
               (if (##pair? _g3507035087_)
                   (let ((_hd3507435109_ (##car _g3507035087_))
                         (_tl3507535112_ (##cdr _g3507035087_)))
                     (let ((_super35115_ _hd3507435109_))
                       (if (##pair? _tl3507535112_)
                           (let ((_hd3507635118_ (##car _tl3507535112_))
                                 (_tl3507735121_ (##cdr _tl3507535112_)))
                             (let ((_type::t35124_ _hd3507635118_))
                               (if (##pair? _tl3507735121_)
                                   (let ((_hd3507835127_
                                          (##car _tl3507735121_))
                                         (_tl3507935130_
                                          (##cdr _tl3507735121_)))
                                     (let ((_make-type35133_ _hd3507835127_))
                                       (if (##pair? _tl3507935130_)
                                           (let ((_hd3508035136_
                                                  (##car _tl3507935130_))
                                                 (_tl3508135139_
                                                  (##cdr _tl3507935130_)))
                                             (let ((_type?35142_
                                                    _hd3508035136_))
                                               (if (##pair? _tl3508135139_)
                                                   (let ((_hd3508235145_
                                                          (##car _tl3508135139_))
                                                         (_tl3508335148_
                                                          (##cdr _tl3508135139_)))
                                                     (let ((_getf35151_
                                                            _hd3508235145_))
                                                       (if (##pair? _tl3508335148_)
                                                           (let ((_hd3508435154_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3508335148_))
                         (_tl3508535157_ (##cdr _tl3508335148_)))
                     (let ((_setf35160_ _hd3508435154_))
                       (if (##null? _tl3508535157_)
                           (_K3507335105_
                            _setf35160_
                            _getf35151_
                            _type?35142_
                            _make-type35133_
                            _type::t35124_
                            _super35115_)
                           (_E3507235093_))))
                   (_E3507235093_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3507235093_))))
                                           (_E3507235093_))))
                                   (_E3507235093_))))
                           (_E3507235093_))))
                   (_E3507235093_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34917_
                                                      _L35053_))))
                                             _tl3501735048_
                                             _hd3501635045_)))
                                        (_g3501035034_ _g3501235038_)))))
                            (_g3500935163_ _rest35006_))))
                      _id3493434983_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3492934963_
                                              _target3492634957_
                                              '()))
                                           (_g3492034940_ _g3492134944_)))))
                                 (_g3492034940_ _g3492134944_))
                             (_g3492034940_ _g3492134944_))))
                     (_g3492034940_ _g3492134944_)))))
         (_g3491935175_ _stx34917_))))))
