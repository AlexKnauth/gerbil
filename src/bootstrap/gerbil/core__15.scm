(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32826_)
      (let* ((_g3283132850_
              (lambda (_g3283232846_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3283232846_)))
             (_g3283032896_
              (lambda (_g3283232854_)
                (if (gx#stx-pair? _g3283232854_)
                    (let ((_e3283932857_ (gx#syntax-e _g3283232854_)))
                      (let ((_hd3284032861_ (##car _e3283932857_))
                            (_tl3284132864_ (##cdr _e3283932857_)))
                        (if (gx#stx-pair? _tl3284132864_)
                            (let ((_e3284232867_ (gx#syntax-e _tl3284132864_)))
                              (let ((_hd3284332871_ (##car _e3284232867_))
                                    (_tl3284432874_ (##cdr _e3284232867_)))
                                ((lambda (_L32877_ _L32879_ _L32880_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32879_
                                                     (cons (cons _L32880_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32877_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32879_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3284432874_
                                 _hd3284332871_
                                 _hd3284032861_)))
                            (_g3283132850_ _g3283232854_))))
                    (_g3283132850_ _g3283232854_))))
             (_g3282932917_
              (lambda (_g3283232900_)
                (if (gx#stx-pair? _g3283232900_)
                    (let ((_e3283332903_ (gx#syntax-e _g3283232900_)))
                      (let ((_hd3283432907_ (##car _e3283332903_))
                            (_tl3283532910_ (##cdr _e3283332903_)))
                        (if (gx#stx-null? _tl3283532910_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3283032896_ _g3283232900_))))
                    (_g3283032896_ _g3283232900_)))))
        (_g3282932917_ _$stx32826_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32921_)
      (let* ((_g3292632966_
              (lambda (_g3292732962_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3292732962_)))
             (_g3292533067_
              (lambda (_g3292732970_)
                (if (gx#stx-pair? _g3292732970_)
                    (let ((_e3294332973_ (gx#syntax-e _g3292732970_)))
                      (let ((_hd3294432977_ (##car _e3294332973_))
                            (_tl3294532980_ (##cdr _e3294332973_)))
                        (if (gx#stx-pair? _tl3294532980_)
                            (let ((_e3294632983_ (gx#syntax-e _tl3294532980_)))
                              (let ((_hd3294732987_ (##car _e3294632983_))
                                    (_tl3294832990_ (##cdr _e3294632983_)))
                                (if (gx#stx-pair? _hd3294732987_)
                                    (let ((_e3294932993_
                                           (gx#syntax-e _hd3294732987_)))
                                      (let ((_hd3295032997_
                                             (##car _e3294932993_))
                                            (_tl3295133000_
                                             (##cdr _e3294932993_)))
                                        (if (gx#stx-pair/null? _tl3294832990_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3294832990_)
                                                      '0)
                                                (let ((_g35510_
                                                       (gx#syntax-split-splice
                                                        _tl3294832990_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35511_
                                                           (if (##values?
                                                                _g35510_)
                                                               (##vector-length
                                                                _g35510_)
                                                               1)))
                                                      (if (not (##fx= _g35511_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35511_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3295233003_
                                                           (##vector-ref
                                                            _g35510_
                                                            0))
                                                          (_tl3295433006_
                                                           (##vector-ref
                                                            _g35510_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3295433006_)
                                                          (letrec ((_loop3295533009_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3295333013_ _body3295933016_)
                              (if (gx#stx-pair? _hd3295333013_)
                                  (let ((_e3295633019_
                                         (gx#syntax-e _hd3295333013_)))
                                    (let ((_lp-hd3295733023_
                                           (##car _e3295633019_))
                                          (_lp-tl3295833026_
                                           (##cdr _e3295633019_)))
                                      (_loop3295533009_
                                       _lp-tl3295833026_
                                       (cons _lp-hd3295733023_
                                             _body3295933016_))))
                                  (let ((_body3296033029_
                                         (reverse _body3295933016_)))
                                    ((lambda (_L33033_
                                              _L33035_
                                              _L33036_
                                              _L33037_)
                                       (if (gx#identifier? _L33036_)
                                           (cons _L33037_
                                                 (cons _L33036_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33035_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3305833061_ _g3305933064_)
                                            (cons _g3305833061_ _g3305933064_))
                                          '()
                                          _L33033_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3292632966_ _g3292732970_)))
                                     _body3296033029_
                                     _tl3295133000_
                                     _hd3295032997_
                                     _hd3294432977_))))))
                    (_loop3295533009_ _target3295233003_ '()))
                  (_g3292632966_ _g3292732970_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3292632966_ _g3292732970_))
                                            (_g3292632966_ _g3292732970_))))
                                    (_g3292632966_ _g3292732970_))))
                            (_g3292632966_ _g3292732970_))))
                    (_g3292632966_ _g3292732970_))))
             (_g3292433121_
              (lambda (_g3292733071_)
                (if (gx#stx-pair? _g3292733071_)
                    (let ((_e3293033074_ (gx#syntax-e _g3292733071_)))
                      (let ((_hd3293133078_ (##car _e3293033074_))
                            (_tl3293233081_ (##cdr _e3293033074_)))
                        (if (gx#stx-pair? _tl3293233081_)
                            (let ((_e3293333084_ (gx#syntax-e _tl3293233081_)))
                              (let ((_hd3293433088_ (##car _e3293333084_))
                                    (_tl3293533091_ (##cdr _e3293333084_)))
                                (if (gx#stx-pair? _tl3293533091_)
                                    (let ((_e3293633094_
                                           (gx#syntax-e _tl3293533091_)))
                                      (let ((_hd3293733098_
                                             (##car _e3293633094_))
                                            (_tl3293833101_
                                             (##cdr _e3293633094_)))
                                        (if (gx#stx-null? _tl3293833101_)
                                            ((lambda (_L33104_ _L33106_)
                                               (if (gx#identifier? _L33106_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33106_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L33104_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3292533067_
                                                    _g3292733071_)))
                                             _hd3293733098_
                                             _hd3293433088_)
                                            (_g3292533067_ _g3292733071_))))
                                    (_g3292533067_ _g3292733071_))))
                            (_g3292533067_ _g3292733071_))))
                    (_g3292533067_ _g3292733071_)))))
        (_g3292433121_ _$stx32921_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx33126_)
      (let* ((_g3313133171_
              (lambda (_g3313233167_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3313233167_)))
             (_g3313033272_
              (lambda (_g3313233175_)
                (if (gx#stx-pair? _g3313233175_)
                    (let ((_e3314833178_ (gx#syntax-e _g3313233175_)))
                      (let ((_hd3314933182_ (##car _e3314833178_))
                            (_tl3315033185_ (##cdr _e3314833178_)))
                        (if (gx#stx-pair? _tl3315033185_)
                            (let ((_e3315133188_ (gx#syntax-e _tl3315033185_)))
                              (let ((_hd3315233192_ (##car _e3315133188_))
                                    (_tl3315333195_ (##cdr _e3315133188_)))
                                (if (gx#stx-pair? _hd3315233192_)
                                    (let ((_e3315433198_
                                           (gx#syntax-e _hd3315233192_)))
                                      (let ((_hd3315533202_
                                             (##car _e3315433198_))
                                            (_tl3315633205_
                                             (##cdr _e3315433198_)))
                                        (if (gx#stx-pair/null? _tl3315333195_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3315333195_)
                                                      '0)
                                                (let ((_g35512_
                                                       (gx#syntax-split-splice
                                                        _tl3315333195_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35513_
                                                           (if (##values?
                                                                _g35512_)
                                                               (##vector-length
                                                                _g35512_)
                                                               1)))
                                                      (if (not (##fx= _g35513_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35513_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3315733208_
                                                           (##vector-ref
                                                            _g35512_
                                                            0))
                                                          (_tl3315933211_
                                                           (##vector-ref
                                                            _g35512_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3315933211_)
                                                          (letrec ((_loop3316033214_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3315833218_ _body3316433221_)
                              (if (gx#stx-pair? _hd3315833218_)
                                  (let ((_e3316133224_
                                         (gx#syntax-e _hd3315833218_)))
                                    (let ((_lp-hd3316233228_
                                           (##car _e3316133224_))
                                          (_lp-tl3316333231_
                                           (##cdr _e3316133224_)))
                                      (_loop3316033214_
                                       _lp-tl3316333231_
                                       (cons _lp-hd3316233228_
                                             _body3316433221_))))
                                  (let ((_body3316533234_
                                         (reverse _body3316433221_)))
                                    ((lambda (_L33238_
                                              _L33240_
                                              _L33241_
                                              _L33242_)
                                       (if (gx#identifier? _L33241_)
                                           (cons _L33242_
                                                 (cons _L33241_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33240_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3326333266_ _g3326433269_)
                                            (cons _g3326333266_ _g3326433269_))
                                          '()
                                          _L33238_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3313133171_ _g3313233175_)))
                                     _body3316533234_
                                     _tl3315633205_
                                     _hd3315533202_
                                     _hd3314933182_))))))
                    (_loop3316033214_ _target3315733208_ '()))
                  (_g3313133171_ _g3313233175_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3313133171_ _g3313233175_))
                                            (_g3313133171_ _g3313233175_))))
                                    (_g3313133171_ _g3313233175_))))
                            (_g3313133171_ _g3313233175_))))
                    (_g3313133171_ _g3313233175_))))
             (_g3312933326_
              (lambda (_g3313233276_)
                (if (gx#stx-pair? _g3313233276_)
                    (let ((_e3313533279_ (gx#syntax-e _g3313233276_)))
                      (let ((_hd3313633283_ (##car _e3313533279_))
                            (_tl3313733286_ (##cdr _e3313533279_)))
                        (if (gx#stx-pair? _tl3313733286_)
                            (let ((_e3313833289_ (gx#syntax-e _tl3313733286_)))
                              (let ((_hd3313933293_ (##car _e3313833289_))
                                    (_tl3314033296_ (##cdr _e3313833289_)))
                                (if (gx#stx-pair? _tl3314033296_)
                                    (let ((_e3314133299_
                                           (gx#syntax-e _tl3314033296_)))
                                      (let ((_hd3314233303_
                                             (##car _e3314133299_))
                                            (_tl3314333306_
                                             (##cdr _e3314133299_)))
                                        (if (gx#stx-null? _tl3314333306_)
                                            ((lambda (_L33309_ _L33311_)
                                               (if (gx#identifier? _L33311_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33311_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L33309_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3313033272_
                                                    _g3313233276_)))
                                             _hd3314233303_
                                             _hd3313933293_)
                                            (_g3313033272_ _g3313233276_))))
                                    (_g3313033272_ _g3313233276_))))
                            (_g3313033272_ _g3313233276_))))
                    (_g3313033272_ _g3313233276_)))))
        (_g3312933326_ _$stx33126_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx33331_)
      (let* ((_g3333633376_
              (lambda (_g3333733372_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3333733372_)))
             (_g3333533477_
              (lambda (_g3333733380_)
                (if (gx#stx-pair? _g3333733380_)
                    (let ((_e3335333383_ (gx#syntax-e _g3333733380_)))
                      (let ((_hd3335433387_ (##car _e3335333383_))
                            (_tl3335533390_ (##cdr _e3335333383_)))
                        (if (gx#stx-pair? _tl3335533390_)
                            (let ((_e3335633393_ (gx#syntax-e _tl3335533390_)))
                              (let ((_hd3335733397_ (##car _e3335633393_))
                                    (_tl3335833400_ (##cdr _e3335633393_)))
                                (if (gx#stx-pair? _hd3335733397_)
                                    (let ((_e3335933403_
                                           (gx#syntax-e _hd3335733397_)))
                                      (let ((_hd3336033407_
                                             (##car _e3335933403_))
                                            (_tl3336133410_
                                             (##cdr _e3335933403_)))
                                        (if (gx#stx-pair/null? _tl3335833400_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3335833400_)
                                                      '0)
                                                (let ((_g35514_
                                                       (gx#syntax-split-splice
                                                        _tl3335833400_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35515_
                                                           (if (##values?
                                                                _g35514_)
                                                               (##vector-length
                                                                _g35514_)
                                                               1)))
                                                      (if (not (##fx= _g35515_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35515_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3336233413_
                                                           (##vector-ref
                                                            _g35514_
                                                            0))
                                                          (_tl3336433416_
                                                           (##vector-ref
                                                            _g35514_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3336433416_)
                                                          (letrec ((_loop3336533419_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3336333423_ _body3336933426_)
                              (if (gx#stx-pair? _hd3336333423_)
                                  (let ((_e3336633429_
                                         (gx#syntax-e _hd3336333423_)))
                                    (let ((_lp-hd3336733433_
                                           (##car _e3336633429_))
                                          (_lp-tl3336833436_
                                           (##cdr _e3336633429_)))
                                      (_loop3336533419_
                                       _lp-tl3336833436_
                                       (cons _lp-hd3336733433_
                                             _body3336933426_))))
                                  (let ((_body3337033439_
                                         (reverse _body3336933426_)))
                                    ((lambda (_L33443_
                                              _L33445_
                                              _L33446_
                                              _L33447_)
                                       (if (gx#identifier? _L33446_)
                                           (cons _L33447_
                                                 (cons _L33446_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33445_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3346833471_ _g3346933474_)
                                            (cons _g3346833471_ _g3346933474_))
                                          '()
                                          _L33443_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3333633376_ _g3333733380_)))
                                     _body3337033439_
                                     _tl3336133410_
                                     _hd3336033407_
                                     _hd3335433387_))))))
                    (_loop3336533419_ _target3336233413_ '()))
                  (_g3333633376_ _g3333733380_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3333633376_ _g3333733380_))
                                            (_g3333633376_ _g3333733380_))))
                                    (_g3333633376_ _g3333733380_))))
                            (_g3333633376_ _g3333733380_))))
                    (_g3333633376_ _g3333733380_))))
             (_g3333433531_
              (lambda (_g3333733481_)
                (if (gx#stx-pair? _g3333733481_)
                    (let ((_e3334033484_ (gx#syntax-e _g3333733481_)))
                      (let ((_hd3334133488_ (##car _e3334033484_))
                            (_tl3334233491_ (##cdr _e3334033484_)))
                        (if (gx#stx-pair? _tl3334233491_)
                            (let ((_e3334333494_ (gx#syntax-e _tl3334233491_)))
                              (let ((_hd3334433498_ (##car _e3334333494_))
                                    (_tl3334533501_ (##cdr _e3334333494_)))
                                (if (gx#stx-pair? _tl3334533501_)
                                    (let ((_e3334633504_
                                           (gx#syntax-e _tl3334533501_)))
                                      (let ((_hd3334733508_
                                             (##car _e3334633504_))
                                            (_tl3334833511_
                                             (##cdr _e3334633504_)))
                                        (if (gx#stx-null? _tl3334833511_)
                                            ((lambda (_L33514_ _L33516_)
                                               (if (gx#identifier? _L33516_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33516_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L33514_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3333533477_
                                                    _g3333733481_)))
                                             _hd3334733508_
                                             _hd3334433498_)
                                            (_g3333533477_ _g3333733481_))))
                                    (_g3333533477_ _g3333733481_))))
                            (_g3333533477_ _g3333733481_))))
                    (_g3333533477_ _g3333733481_)))))
        (_g3333433531_ _$stx33331_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx33536_)
       (let* ((_g3353933559_
               (lambda (_g3354033555_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3354033555_)))
              (_g3353833630_
               (lambda (_g3354033563_)
                 (if (gx#stx-pair? _g3354033563_)
                     (let ((_e3354233566_ (gx#syntax-e _g3354033563_)))
                       (let ((_hd3354333570_ (##car _e3354233566_))
                             (_tl3354433573_ (##cdr _e3354233566_)))
                         (if (gx#stx-pair/null? _tl3354433573_)
                             (if (fx>= (gx#stx-length _tl3354433573_) '0)
                                 (let ((_g35516_
                                        (gx#syntax-split-splice
                                         _tl3354433573_
                                         '0)))
                                   (begin
                                     (let ((_g35517_
                                            (if (##values? _g35516_)
                                                (##vector-length _g35516_)
                                                1)))
                                       (if (not (##fx= _g35517_ 2))
                                           (error "Context expects 2 values"
                                                  _g35517_)))
                                     (let ((_target3354533576_
                                            (##vector-ref _g35516_ 0))
                                           (_tl3354733579_
                                            (##vector-ref _g35516_ 1)))
                                       (if (gx#stx-null? _tl3354733579_)
                                           (letrec ((_loop3354833582_
                                                     (lambda (_hd3354633586_
                                                              _body3355233589_)
                                                       (if (gx#stx-pair?
                                                            _hd3354633586_)
                                                           (let ((_e3354933592_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3354633586_)))
                     (let ((_lp-hd3355033596_ (##car _e3354933592_))
                           (_lp-tl3355133599_ (##cdr _e3354933592_)))
                       (_loop3354833582_
                        _lp-tl3355133599_
                        (cons _lp-hd3355033596_ _body3355233589_))))
                   (let ((_body3355333602_ (reverse _body3355233589_)))
                     ((lambda (_L33606_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3362133624_
                                                      _g3362233627_)
                                               (cons _g3362133624_
                                                     _g3362233627_))
                                             '()
                                             _L33606_)))))
                      _body3355333602_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3354833582_
                                              _target3354533576_
                                              '()))
                                           (_g3353933559_ _g3354033563_)))))
                                 (_g3353933559_ _g3354033563_))
                             (_g3353933559_ _g3354033563_))))
                     (_g3353933559_ _g3354033563_)))))
         (_g3353833630_ _stx33536_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33635_)
       (let* ((_g3363833658_
               (lambda (_g3363933654_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3363933654_)))
              (_g3363733729_
               (lambda (_g3363933662_)
                 (if (gx#stx-pair? _g3363933662_)
                     (let ((_e3364133665_ (gx#syntax-e _g3363933662_)))
                       (let ((_hd3364233669_ (##car _e3364133665_))
                             (_tl3364333672_ (##cdr _e3364133665_)))
                         (if (gx#stx-pair/null? _tl3364333672_)
                             (if (fx>= (gx#stx-length _tl3364333672_) '0)
                                 (let ((_g35518_
                                        (gx#syntax-split-splice
                                         _tl3364333672_
                                         '0)))
                                   (begin
                                     (let ((_g35519_
                                            (if (##values? _g35518_)
                                                (##vector-length _g35518_)
                                                1)))
                                       (if (not (##fx= _g35519_ 2))
                                           (error "Context expects 2 values"
                                                  _g35519_)))
                                     (let ((_target3364433675_
                                            (##vector-ref _g35518_ 0))
                                           (_tl3364633678_
                                            (##vector-ref _g35518_ 1)))
                                       (if (gx#stx-null? _tl3364633678_)
                                           (letrec ((_loop3364733681_
                                                     (lambda (_hd3364533685_
                                                              _body3365133688_)
                                                       (if (gx#stx-pair?
                                                            _hd3364533685_)
                                                           (let ((_e3364833691_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3364533685_)))
                     (let ((_lp-hd3364933695_ (##car _e3364833691_))
                           (_lp-tl3365033698_ (##cdr _e3364833691_)))
                       (_loop3364733681_
                        _lp-tl3365033698_
                        (cons _lp-hd3364933695_ _body3365133688_))))
                   (let ((_body3365233701_ (reverse _body3365133688_)))
                     ((lambda (_L33705_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3372033723_
                                                      _g3372133726_)
                                               (cons _g3372033723_
                                                     _g3372133726_))
                                             '()
                                             _L33705_)))))
                      _body3365233701_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3364733681_
                                              _target3364433675_
                                              '()))
                                           (_g3363833658_ _g3363933662_)))))
                                 (_g3363833658_ _g3363933662_))
                             (_g3363833658_ _g3363933662_))))
                     (_g3363833658_ _g3363933662_)))))
         (_g3363733729_ _stx33635_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33734_)
       (let* ((_g3373733761_
               (lambda (_g3373833757_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3373833757_)))
              (_g3373633883_
               (lambda (_g3373833765_)
                 (if (gx#stx-pair? _g3373833765_)
                     (let ((_e3374133768_ (gx#syntax-e _g3373833765_)))
                       (let ((_hd3374233772_ (##car _e3374133768_))
                             (_tl3374333775_ (##cdr _e3374133768_)))
                         (if (gx#stx-pair? _tl3374333775_)
                             (let ((_e3374433778_
                                    (gx#syntax-e _tl3374333775_)))
                               (let ((_hd3374533782_ (##car _e3374433778_))
                                     (_tl3374633785_ (##cdr _e3374433778_)))
                                 (if (gx#stx-pair/null? _tl3374633785_)
                                     (if (fx>= (gx#stx-length _tl3374633785_)
                                               '0)
                                         (let ((_g35520_
                                                (gx#syntax-split-splice
                                                 _tl3374633785_
                                                 '0)))
                                           (begin
                                             (let ((_g35521_
                                                    (if (##values? _g35520_)
                                                        (##vector-length
                                                         _g35520_)
                                                        1)))
                                               (if (not (##fx= _g35521_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35521_)))
                                             (let ((_target3374733788_
                                                    (##vector-ref _g35520_ 0))
                                                   (_tl3374933791_
                                                    (##vector-ref _g35520_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3374933791_)
                                                   (letrec ((_loop3375033794_
                                                             (lambda (_hd3374833798_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3375433801_)
                       (if (gx#stx-pair? _hd3374833798_)
                           (let ((_e3375133804_ (gx#syntax-e _hd3374833798_)))
                             (let ((_lp-hd3375233808_ (##car _e3375133804_))
                                   (_lp-tl3375333811_ (##cdr _e3375133804_)))
                               (_loop3375033794_
                                _lp-tl3375333811_
                                (cons _lp-hd3375233808_ _id3375433801_))))
                           (let ((_id3375533814_ (reverse _id3375433801_)))
                             ((lambda (_L33818_ _L33820_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3383733840_
                                                       _g3383833843_)
                                                (cons _g3383733840_
                                                      _g3383833843_))
                                              '()
                                              _L33818_)))
                                    (let* ((_keys33854_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3384533848_
                                                               _g3384633851_)
                                                        (cons _g3384533848_
                                                              _g3384633851_))
                                                      '()
                                                      _L33818_))))
                                           (_keytab33865_
                                            (let ((_ht33857_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3385933861_)
                                                   (hash-put!
                                                    _ht33857_
                                                    _g3385933861_
                                                    '#t))
                                                 _keys33854_)
                                                _ht33857_)))
                                           (_imports33868_
                                            (gx#core-expand-import-source
                                             _L33820_))
                                           (_fold-e33878_
                                            (letrec ((_fold-e33871_
                                                      (lambda (_in33874_
                                                               _r33876_)
                                                        (if (gx#module-import?
                                                             _in33874_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33865_
                         (gx#module-import-name _in33874_))
                        (cons _in33874_ _r33876_)
                        _r33876_)
                    (if (gx#import-set? _in33874_)
                        (foldl _fold-e33871_
                               _r33876_
                               (gx#import-set-imports _in33874_))
                        _r33876_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33871_)))
                                      (cons 'begin:
                                            (foldl _fold-e33878_
                                                   '()
                                                   _imports33868_)))
                                    (_g3373733761_ _g3373833765_)))
                              _id3375533814_
                              _hd3374533782_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3375033794_
                                                      _target3374733788_
                                                      '()))
                                                   (_g3373733761_
                                                    _g3373833765_)))))
                                         (_g3373733761_ _g3373833765_))
                                     (_g3373733761_ _g3373833765_))))
                             (_g3373733761_ _g3373833765_))))
                     (_g3373733761_ _g3373833765_)))))
         (_g3373633883_ _stx33734_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33888_)
       (let* ((_g3389133915_
               (lambda (_g3389233911_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3389233911_)))
              (_g3389034037_
               (lambda (_g3389233919_)
                 (if (gx#stx-pair? _g3389233919_)
                     (let ((_e3389533922_ (gx#syntax-e _g3389233919_)))
                       (let ((_hd3389633926_ (##car _e3389533922_))
                             (_tl3389733929_ (##cdr _e3389533922_)))
                         (if (gx#stx-pair? _tl3389733929_)
                             (let ((_e3389833932_
                                    (gx#syntax-e _tl3389733929_)))
                               (let ((_hd3389933936_ (##car _e3389833932_))
                                     (_tl3390033939_ (##cdr _e3389833932_)))
                                 (if (gx#stx-pair/null? _tl3390033939_)
                                     (if (fx>= (gx#stx-length _tl3390033939_)
                                               '0)
                                         (let ((_g35522_
                                                (gx#syntax-split-splice
                                                 _tl3390033939_
                                                 '0)))
                                           (begin
                                             (let ((_g35523_
                                                    (if (##values? _g35522_)
                                                        (##vector-length
                                                         _g35522_)
                                                        1)))
                                               (if (not (##fx= _g35523_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35523_)))
                                             (let ((_target3390133942_
                                                    (##vector-ref _g35522_ 0))
                                                   (_tl3390333945_
                                                    (##vector-ref _g35522_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3390333945_)
                                                   (letrec ((_loop3390433948_
                                                             (lambda (_hd3390233952_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3390833955_)
                       (if (gx#stx-pair? _hd3390233952_)
                           (let ((_e3390533958_ (gx#syntax-e _hd3390233952_)))
                             (let ((_lp-hd3390633962_ (##car _e3390533958_))
                                   (_lp-tl3390733965_ (##cdr _e3390533958_)))
                               (_loop3390433948_
                                _lp-tl3390733965_
                                (cons _lp-hd3390633962_ _id3390833955_))))
                           (let ((_id3390933968_ (reverse _id3390833955_)))
                             ((lambda (_L33972_ _L33974_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3399133994_
                                                       _g3399233997_)
                                                (cons _g3399133994_
                                                      _g3399233997_))
                                              '()
                                              _L33972_)))
                                    (let* ((_keys34008_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3399934002_
                                                               _g3400034005_)
                                                        (cons _g3399934002_
                                                              _g3400034005_))
                                                      '()
                                                      _L33972_))))
                                           (_keytab34019_
                                            (let ((_ht34011_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3401334015_)
                                                   (hash-put!
                                                    _ht34011_
                                                    _g3401334015_
                                                    '#t))
                                                 _keys34008_)
                                                _ht34011_)))
                                           (_imports34022_
                                            (gx#core-expand-import-source
                                             _L33974_))
                                           (_fold-e34032_
                                            (letrec ((_fold-e34025_
                                                      (lambda (_in34028_
                                                               _r34030_)
                                                        (if (gx#module-import?
                                                             _in34028_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34019_
                         (gx#module-import-name _in34028_))
                        _r34030_
                        (cons _in34028_ _r34030_))
                    (if (gx#import-set? _in34028_)
                        (foldl _fold-e34025_
                               _r34030_
                               (gx#import-set-imports _in34028_))
                        (cons _in34028_ _r34030_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34025_)))
                                      (cons 'begin:
                                            (foldl _fold-e34032_
                                                   '()
                                                   _imports34022_)))
                                    (_g3389133915_ _g3389233919_)))
                              _id3390933968_
                              _hd3389933936_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3390433948_
                                                      _target3390133942_
                                                      '()))
                                                   (_g3389133915_
                                                    _g3389233919_)))))
                                         (_g3389133915_ _g3389233919_))
                                     (_g3389133915_ _g3389233919_))))
                             (_g3389133915_ _g3389233919_))))
                     (_g3389133915_ _g3389233919_)))))
         (_g3389034037_ _stx33888_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in34089_ _rename34091_)
      (gx#make-module-import
       (gx#module-import-source _in34089_)
       _rename34091_
       (gx#module-import-phi _in34089_)
       (gx#module-import-weak? _in34089_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name34042_ _pre34044_)
      (let* ((_name3404534053_ _name34042_)
             (_E3404834059_
              (lambda () (error '"No clause matching" _name3404534053_)))
             (_else3404734065_
              (lambda () (make-symbol _pre34044_ _name34042_)))
             (_K3404934073_
              (lambda (_mark34069_ _id34071_)
                (cons (make-symbol _pre34044_ _id34071_) _mark34069_))))
        (if (##pair? _name3404534053_)
            (let ((_hd3405034077_ (##car _name3404534053_))
                  (_tl3405134080_ (##cdr _name3404534053_)))
              (let* ((_id34083_ _hd3405034077_) (_mark34086_ _tl3405134080_))
                (_K3404934073_ _mark34086_ _id34083_)))
            (_else3404734065_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx34093_)
       (let* ((_g3409634129_
               (lambda (_g3409734125_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3409734125_)))
              (_g3409534315_
               (lambda (_g3409734133_)
                 (if (gx#stx-pair? _g3409734133_)
                     (let ((_e3410134136_ (gx#syntax-e _g3409734133_)))
                       (let ((_hd3410234140_ (##car _e3410134136_))
                             (_tl3410334143_ (##cdr _e3410134136_)))
                         (if (gx#stx-pair? _tl3410334143_)
                             (let ((_e3410434146_
                                    (gx#syntax-e _tl3410334143_)))
                               (let ((_hd3410534150_ (##car _e3410434146_))
                                     (_tl3410634153_ (##cdr _e3410434146_)))
                                 (if (gx#stx-pair/null? _tl3410634153_)
                                     (if (fx>= (gx#stx-length _tl3410634153_)
                                               '0)
                                         (let ((_g35524_
                                                (gx#syntax-split-splice
                                                 _tl3410634153_
                                                 '0)))
                                           (begin
                                             (let ((_g35525_
                                                    (if (##values? _g35524_)
                                                        (##vector-length
                                                         _g35524_)
                                                        1)))
                                               (if (not (##fx= _g35525_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35525_)))
                                             (let ((_target3410734156_
                                                    (##vector-ref _g35524_ 0))
                                                   (_tl3410934159_
                                                    (##vector-ref _g35524_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3410934159_)
                                                   (letrec ((_loop3411034162_
                                                             (lambda (_hd3410834166_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3411434169_
                              _id3411534171_)
                       (if (gx#stx-pair? _hd3410834166_)
                           (let ((_e3411134174_ (gx#syntax-e _hd3410834166_)))
                             (let ((_lp-hd3411234178_ (##car _e3411134174_))
                                   (_lp-tl3411334181_ (##cdr _e3411134174_)))
                               (if (gx#stx-pair? _lp-hd3411234178_)
                                   (let ((_e3411834184_
                                          (gx#syntax-e _lp-hd3411234178_)))
                                     (let ((_hd3411934188_
                                            (##car _e3411834184_))
                                           (_tl3412034191_
                                            (##cdr _e3411834184_)))
                                       (if (gx#stx-pair? _tl3412034191_)
                                           (let ((_e3412134194_
                                                  (gx#syntax-e
                                                   _tl3412034191_)))
                                             (let ((_hd3412234198_
                                                    (##car _e3412134194_))
                                                   (_tl3412334201_
                                                    (##cdr _e3412134194_)))
                                               (if (gx#stx-null?
                                                    _tl3412334201_)
                                                   (_loop3411034162_
                                                    _lp-tl3411334181_
                                                    (cons _hd3412234198_
                                                          _new-id3411434169_)
                                                    (cons _hd3411934188_
                                                          _id3411534171_))
                                                   (_g3409634129_
                                                    _g3409734133_))))
                                           (_g3409634129_ _g3409734133_))))
                                   (_g3409634129_ _g3409734133_))))
                           (let ((_new-id3411634204_
                                  (reverse _new-id3411434169_))
                                 (_id3411734207_ (reverse _id3411534171_)))
                             ((lambda (_L34210_ _L34212_ _L34213_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3423134234_
                                                           _g3423234237_)
                                                    (cons _g3423134234_
                                                          _g3423234237_))
                                                  '()
                                                  _L34212_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3423934242_
                                                           _g3424034245_)
                                                    (cons _g3423934242_
                                                          _g3424034245_))
                                                  '()
                                                  _L34210_)))
                                        '#f)
                                    (let* ((_keytab34248_ (make-hash-table))
                                           (_found34251_ (make-hash-table))
                                           (_g35526_
                                            (for-each
                                             (lambda (_id34254_ _new-id34256_)
                                               (hash-put!
                                                _keytab34248_
                                                (gx#core-identifier-key
                                                 _id34254_)
                                                (gx#core-identifier-key
                                                 _new-id34256_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3425734260_
                                                               _g3425834263_)
                                                        (cons _g3425734260_
                                                              _g3425834263_))
                                                      '()
                                                      _L34212_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3426534268_
                                                               _g3426634271_)
                                                        (cons _g3426534268_
                                                              _g3426634271_))
                                                      '()
                                                      _L34210_))))
                                           (_imports34276_
                                            (gx#core-expand-import-source
                                             _L34213_))
                                           (_fold-e34296_
                                            (letrec ((_fold-e34279_
                                                      (lambda (_in34282_
                                                               _r34284_)
                                                        (if (gx#module-import?
                                                             _in34282_)
                                                            (let* ((_name34286_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in34282_))
                           (_$e34289_ (hash-get _keytab34248_ _name34286_)))
                      (if _$e34289_
                          ((lambda (_rename34293_)
                             (begin
                               (hash-put! _found34251_ _name34286_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in34282_
                                      _rename34293_)
                                     _r34284_)))
                           _$e34289_)
                          (cons _in34282_ _r34284_)))
                    (if (gx#import-set? _in34282_)
                        (foldl _fold-e34279_
                               _r34284_
                               (gx#import-set-imports _in34282_))
                        (cons _in34282_ _r34284_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34279_))
                                           (_new-imports34299_
                                            (foldl _fold-e34296_
                                                   '()
                                                   _imports34276_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34304_)
                                           (if (hash-get
                                                _found34251_
                                                (gx#core-identifier-key
                                                 _id34304_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx34093_
                                                _id34304_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3430634309_
                                                           _g3430734312_)
                                                    (cons _g3430634309_
                                                          _g3430734312_))
                                                  '()
                                                  _L34212_)))
                                        (cons 'begin: _new-imports34299_)))
                                    (_g3409634129_ _g3409734133_)))
                              _new-id3411634204_
                              _id3411734207_
                              _hd3410534150_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3411034162_
                                                      _target3410734156_
                                                      '()
                                                      '()))
                                                   (_g3409634129_
                                                    _g3409734133_)))))
                                         (_g3409634129_ _g3409734133_))
                                     (_g3409634129_ _g3409734133_))))
                             (_g3409634129_ _g3409734133_))))
                     (_g3409634129_ _g3409734133_)))))
         (_g3409534315_ _stx34093_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx34321_)
       (let* ((_g3432434342_
               (lambda (_g3432534338_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3432534338_)))
              (_g3432334421_
               (lambda (_g3432534346_)
                 (if (gx#stx-pair? _g3432534346_)
                     (let ((_e3432834349_ (gx#syntax-e _g3432534346_)))
                       (let ((_hd3432934353_ (##car _e3432834349_))
                             (_tl3433034356_ (##cdr _e3432834349_)))
                         (if (gx#stx-pair? _tl3433034356_)
                             (let ((_e3433134359_
                                    (gx#syntax-e _tl3433034356_)))
                               (let ((_hd3433234363_ (##car _e3433134359_))
                                     (_tl3433334366_ (##cdr _e3433134359_)))
                                 (if (gx#stx-pair? _tl3433334366_)
                                     (let ((_e3433434369_
                                            (gx#syntax-e _tl3433334366_)))
                                       (let ((_hd3433534373_
                                              (##car _e3433434369_))
                                             (_tl3433634376_
                                              (##cdr _e3433434369_)))
                                         (if (gx#stx-null? _tl3433634376_)
                                             ((lambda (_L34379_ _L34381_)
                                                (if (gx#identifier? _L34379_)
                                                    (let* ((_pre34397_
                                                            (gx#stx-e
                                                             _L34379_))
                                                           (_imports34400_
                                                            (gx#core-expand-import-source
                                                             _L34381_))
                                                           (_rename-e34406_
                                                            (lambda (_name34403_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34403_
                                                               _pre34397_)))
                                                           (_fold-e34416_
                                                            (letrec ((_fold-e34409_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in34412_ _r34414_)
                                (if (gx#module-import? _in34412_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in34412_
                                           (_rename-e34406_
                                            (gx#module-import-name _in34412_)))
                                          _r34414_)
                                    (if (gx#import-set? _in34412_)
                                        (foldl _fold-e34409_
                                               _r34414_
                                               (gx#import-set-imports
                                                _in34412_))
                                        (cons _in34412_ _r34414_))))))
                      _fold-e34409_)))
              (cons 'begin: (foldl _fold-e34416_ '() _imports34400_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3432434342_
                                                     _g3432534346_)))
                                              _hd3433534373_
                                              _hd3433234363_)
                                             (_g3432434342_ _g3432534346_))))
                                     (_g3432434342_ _g3432534346_))))
                             (_g3432434342_ _g3432534346_))))
                     (_g3432434342_ _g3432534346_)))))
         (_g3432334421_ _stx34321_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx34425_)
       (let* ((_g3442834452_
               (lambda (_g3442934448_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3442934448_)))
              (_g3442734574_
               (lambda (_g3442934456_)
                 (if (gx#stx-pair? _g3442934456_)
                     (let ((_e3443234459_ (gx#syntax-e _g3442934456_)))
                       (let ((_hd3443334463_ (##car _e3443234459_))
                             (_tl3443434466_ (##cdr _e3443234459_)))
                         (if (gx#stx-pair? _tl3443434466_)
                             (let ((_e3443534469_
                                    (gx#syntax-e _tl3443434466_)))
                               (let ((_hd3443634473_ (##car _e3443534469_))
                                     (_tl3443734476_ (##cdr _e3443534469_)))
                                 (if (gx#stx-pair/null? _tl3443734476_)
                                     (if (fx>= (gx#stx-length _tl3443734476_)
                                               '0)
                                         (let ((_g35527_
                                                (gx#syntax-split-splice
                                                 _tl3443734476_
                                                 '0)))
                                           (begin
                                             (let ((_g35528_
                                                    (if (##values? _g35527_)
                                                        (##vector-length
                                                         _g35527_)
                                                        1)))
                                               (if (not (##fx= _g35528_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35528_)))
                                             (let ((_target3443834479_
                                                    (##vector-ref _g35527_ 0))
                                                   (_tl3444034482_
                                                    (##vector-ref _g35527_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3444034482_)
                                                   (letrec ((_loop3444134485_
                                                             (lambda (_hd3443934489_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3444534492_)
                       (if (gx#stx-pair? _hd3443934489_)
                           (let ((_e3444234495_ (gx#syntax-e _hd3443934489_)))
                             (let ((_lp-hd3444334499_ (##car _e3444234495_))
                                   (_lp-tl3444434502_ (##cdr _e3444234495_)))
                               (_loop3444134485_
                                _lp-tl3444434502_
                                (cons _lp-hd3444334499_ _id3444534492_))))
                           (let ((_id3444634505_ (reverse _id3444534492_)))
                             ((lambda (_L34509_ _L34511_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3452834531_
                                                       _g3452934534_)
                                                (cons _g3452834531_
                                                      _g3452934534_))
                                              '()
                                              _L34509_)))
                                    (let* ((_keys34545_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3453634539_
                                                               _g3453734542_)
                                                        (cons _g3453634539_
                                                              _g3453734542_))
                                                      '()
                                                      _L34509_))))
                                           (_keytab34556_
                                            (let ((_ht34548_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3455034552_)
                                                   (hash-put!
                                                    _ht34548_
                                                    _g3455034552_
                                                    '#t))
                                                 _keys34545_)
                                                _ht34548_)))
                                           (_exports34559_
                                            (gx#core-expand-export-source
                                             _L34511_))
                                           (_fold-e34569_
                                            (letrec ((_fold-e34562_
                                                      (lambda (_out34565_
                                                               _r34567_)
                                                        (if (gx#module-export?
                                                             _out34565_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34556_
                         (gx#module-export-name _out34565_))
                        _r34567_
                        (cons _out34565_ _r34567_))
                    (if (gx#export-set? _out34565_)
                        (foldl _fold-e34562_
                               _r34567_
                               (gx#export-set-exports _out34565_))
                        _r34567_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34562_)))
                                      (cons 'begin:
                                            (foldl _fold-e34569_
                                                   '()
                                                   _exports34559_)))
                                    (_g3442834452_ _g3442934456_)))
                              _id3444634505_
                              _hd3443634473_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3444134485_
                                                      _target3443834479_
                                                      '()))
                                                   (_g3442834452_
                                                    _g3442934456_)))))
                                         (_g3442834452_ _g3442934456_))
                                     (_g3442834452_ _g3442934456_))))
                             (_g3442834452_ _g3442934456_))))
                     (_g3442834452_ _g3442934456_)))))
         (_g3442734574_ _stx34425_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34579_ _rename34581_)
      (gx#make-module-export
       (gx#module-export-context _out34579_)
       (gx#module-export-key _out34579_)
       (gx#module-export-phi _out34579_)
       _rename34581_
       (gx#module-export-weak? _out34579_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34583_)
       (let* ((_g3458634619_
               (lambda (_g3458734615_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3458734615_)))
              (_g3458534805_
               (lambda (_g3458734623_)
                 (if (gx#stx-pair? _g3458734623_)
                     (let ((_e3459134626_ (gx#syntax-e _g3458734623_)))
                       (let ((_hd3459234630_ (##car _e3459134626_))
                             (_tl3459334633_ (##cdr _e3459134626_)))
                         (if (gx#stx-pair? _tl3459334633_)
                             (let ((_e3459434636_
                                    (gx#syntax-e _tl3459334633_)))
                               (let ((_hd3459534640_ (##car _e3459434636_))
                                     (_tl3459634643_ (##cdr _e3459434636_)))
                                 (if (gx#stx-pair/null? _tl3459634643_)
                                     (if (fx>= (gx#stx-length _tl3459634643_)
                                               '0)
                                         (let ((_g35529_
                                                (gx#syntax-split-splice
                                                 _tl3459634643_
                                                 '0)))
                                           (begin
                                             (let ((_g35530_
                                                    (if (##values? _g35529_)
                                                        (##vector-length
                                                         _g35529_)
                                                        1)))
                                               (if (not (##fx= _g35530_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35530_)))
                                             (let ((_target3459734646_
                                                    (##vector-ref _g35529_ 0))
                                                   (_tl3459934649_
                                                    (##vector-ref _g35529_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3459934649_)
                                                   (letrec ((_loop3460034652_
                                                             (lambda (_hd3459834656_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3460434659_
                              _id3460534661_)
                       (if (gx#stx-pair? _hd3459834656_)
                           (let ((_e3460134664_ (gx#syntax-e _hd3459834656_)))
                             (let ((_lp-hd3460234668_ (##car _e3460134664_))
                                   (_lp-tl3460334671_ (##cdr _e3460134664_)))
                               (if (gx#stx-pair? _lp-hd3460234668_)
                                   (let ((_e3460834674_
                                          (gx#syntax-e _lp-hd3460234668_)))
                                     (let ((_hd3460934678_
                                            (##car _e3460834674_))
                                           (_tl3461034681_
                                            (##cdr _e3460834674_)))
                                       (if (gx#stx-pair? _tl3461034681_)
                                           (let ((_e3461134684_
                                                  (gx#syntax-e
                                                   _tl3461034681_)))
                                             (let ((_hd3461234688_
                                                    (##car _e3461134684_))
                                                   (_tl3461334691_
                                                    (##cdr _e3461134684_)))
                                               (if (gx#stx-null?
                                                    _tl3461334691_)
                                                   (_loop3460034652_
                                                    _lp-tl3460334671_
                                                    (cons _hd3461234688_
                                                          _new-id3460434659_)
                                                    (cons _hd3460934678_
                                                          _id3460534661_))
                                                   (_g3458634619_
                                                    _g3458734623_))))
                                           (_g3458634619_ _g3458734623_))))
                                   (_g3458634619_ _g3458734623_))))
                           (let ((_new-id3460634694_
                                  (reverse _new-id3460434659_))
                                 (_id3460734697_ (reverse _id3460534661_)))
                             ((lambda (_L34700_ _L34702_ _L34703_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3472134724_
                                                           _g3472234727_)
                                                    (cons _g3472134724_
                                                          _g3472234727_))
                                                  '()
                                                  _L34702_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3472934732_
                                                           _g3473034735_)
                                                    (cons _g3472934732_
                                                          _g3473034735_))
                                                  '()
                                                  _L34700_)))
                                        '#f)
                                    (let* ((_keytab34738_ (make-hash-table))
                                           (_found34741_ (make-hash-table))
                                           (_g35531_
                                            (for-each
                                             (lambda (_id34744_ _new-id34746_)
                                               (hash-put!
                                                _keytab34738_
                                                (gx#core-identifier-key
                                                 _id34744_)
                                                (gx#core-identifier-key
                                                 _new-id34746_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3474734750_
                                                               _g3474834753_)
                                                        (cons _g3474734750_
                                                              _g3474834753_))
                                                      '()
                                                      _L34702_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3475534758_
                                                               _g3475634761_)
                                                        (cons _g3475534758_
                                                              _g3475634761_))
                                                      '()
                                                      _L34700_))))
                                           (_exports34766_
                                            (gx#core-expand-export-source
                                             _L34703_))
                                           (_fold-e34786_
                                            (letrec ((_fold-e34769_
                                                      (lambda (_out34772_
                                                               _r34774_)
                                                        (if (gx#module-export?
                                                             _out34772_)
                                                            (let* ((_name34776_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34772_))
                           (_$e34779_ (hash-get _keytab34738_ _name34776_)))
                      (if _$e34779_
                          ((lambda (_rename34783_)
                             (begin
                               (hash-put! _found34741_ _name34776_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34772_
                                      _rename34783_)
                                     _r34774_)))
                           _$e34779_)
                          (cons _out34772_ _r34774_)))
                    (if (gx#export-set? _out34772_)
                        (foldl _fold-e34769_
                               _r34774_
                               (gx#export-set-exports _out34772_))
                        (cons _out34772_ _r34774_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34769_))
                                           (_new-exports34789_
                                            (foldl _fold-e34786_
                                                   '()
                                                   _exports34766_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34794_)
                                           (if (hash-get
                                                _found34741_
                                                (gx#core-identifier-key
                                                 _id34794_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34583_
                                                _id34794_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3479634799_
                                                           _g3479734802_)
                                                    (cons _g3479634799_
                                                          _g3479734802_))
                                                  '()
                                                  _L34702_)))
                                        (cons 'begin: _new-exports34789_)))
                                    (_g3458634619_ _g3458734623_)))
                              _new-id3460634694_
                              _id3460734697_
                              _hd3459534640_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3460034652_
                                                      _target3459734646_
                                                      '()
                                                      '()))
                                                   (_g3458634619_
                                                    _g3458734623_)))))
                                         (_g3458634619_ _g3458734623_))
                                     (_g3458634619_ _g3458734623_))))
                             (_g3458634619_ _g3458734623_))))
                     (_g3458634619_ _g3458734623_)))))
         (_g3458534805_ _stx34583_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34811_)
       (let* ((_g3481434832_
               (lambda (_g3481534828_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3481534828_)))
              (_g3481334911_
               (lambda (_g3481534836_)
                 (if (gx#stx-pair? _g3481534836_)
                     (let ((_e3481834839_ (gx#syntax-e _g3481534836_)))
                       (let ((_hd3481934843_ (##car _e3481834839_))
                             (_tl3482034846_ (##cdr _e3481834839_)))
                         (if (gx#stx-pair? _tl3482034846_)
                             (let ((_e3482134849_
                                    (gx#syntax-e _tl3482034846_)))
                               (let ((_hd3482234853_ (##car _e3482134849_))
                                     (_tl3482334856_ (##cdr _e3482134849_)))
                                 (if (gx#stx-pair? _tl3482334856_)
                                     (let ((_e3482434859_
                                            (gx#syntax-e _tl3482334856_)))
                                       (let ((_hd3482534863_
                                              (##car _e3482434859_))
                                             (_tl3482634866_
                                              (##cdr _e3482434859_)))
                                         (if (gx#stx-null? _tl3482634866_)
                                             ((lambda (_L34869_ _L34871_)
                                                (if (gx#identifier? _L34869_)
                                                    (let* ((_pre34887_
                                                            (gx#stx-e
                                                             _L34869_))
                                                           (_exports34890_
                                                            (gx#core-expand-export-source
                                                             _L34871_))
                                                           (_rename-e34896_
                                                            (lambda (_name34893_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34893_
                                                               _pre34887_)))
                                                           (_fold-e34906_
                                                            (letrec ((_fold-e34899_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34902_ _r34904_)
                                (if (gx#module-export? _out34902_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34902_
                                           (_rename-e34896_
                                            (gx#module-export-name
                                             _out34902_)))
                                          _r34904_)
                                    (if (gx#export-set? _out34902_)
                                        (foldl _fold-e34899_
                                               _r34904_
                                               (gx#export-set-exports
                                                _out34902_))
                                        (cons _out34902_ _r34904_))))))
                      _fold-e34899_)))
              (cons 'begin: (foldl _fold-e34906_ '() _exports34890_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3481434832_
                                                     _g3481534836_)))
                                              _hd3482534863_
                                              _hd3482234853_)
                                             (_g3481434832_ _g3481534836_))))
                                     (_g3481434832_ _g3481534836_))))
                             (_g3481434832_ _g3481534836_))))
                     (_g3481434832_ _g3481534836_)))))
         (_g3481334911_ _stx34811_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34915_)
       (let* ((_g3491834938_
               (lambda (_g3491934934_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3491934934_)))
              (_g3491735173_
               (lambda (_g3491934942_)
                 (if (gx#stx-pair? _g3491934942_)
                     (let ((_e3492134945_ (gx#syntax-e _g3491934942_)))
                       (let ((_hd3492234949_ (##car _e3492134945_))
                             (_tl3492334952_ (##cdr _e3492134945_)))
                         (if (gx#stx-pair/null? _tl3492334952_)
                             (if (fx>= (gx#stx-length _tl3492334952_) '0)
                                 (let ((_g35532_
                                        (gx#syntax-split-splice
                                         _tl3492334952_
                                         '0)))
                                   (begin
                                     (let ((_g35533_
                                            (if (##values? _g35532_)
                                                (##vector-length _g35532_)
                                                1)))
                                       (if (not (##fx= _g35533_ 2))
                                           (error "Context expects 2 values"
                                                  _g35533_)))
                                     (let ((_target3492434955_
                                            (##vector-ref _g35532_ 0))
                                           (_tl3492634958_
                                            (##vector-ref _g35532_ 1)))
                                       (if (gx#stx-null? _tl3492634958_)
                                           (letrec ((_loop3492734961_
                                                     (lambda (_hd3492534965_
                                                              _id3493134968_)
                                                       (if (gx#stx-pair?
                                                            _hd3492534965_)
                                                           (let ((_e3492834971_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3492534965_)))
                     (let ((_lp-hd3492934975_ (##car _e3492834971_))
                           (_lp-tl3493034978_ (##cdr _e3492834971_)))
                       (_loop3492734961_
                        _lp-tl3493034978_
                        (cons _lp-hd3492934975_ _id3493134968_))))
                   (let ((_id3493234981_ (reverse _id3493134968_)))
                     ((lambda (_L34985_)
                        (let _lp35001_ ((_rest35004_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3516435167_
                                                           _g3516535170_)
                                                    (cons _g3516435167_
                                                          _g3516535170_))
                                                  '()
                                                  _L34985_)))
                                        (_ids35006_ '()))
                          (let* ((_g3500935021_
                                  (lambda (_g3501035017_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3501035017_)))
                                 (_g3500835032_
                                  (lambda (_g3501035025_)
                                    ((lambda () (cons 'begin: _ids35006_)))))
                                 (_g3500735161_
                                  (lambda (_g3501035036_)
                                    (if (gx#stx-pair? _g3501035036_)
                                        (let ((_e3501335039_
                                               (gx#syntax-e _g3501035036_)))
                                          (let ((_hd3501435043_
                                                 (##car _e3501335039_))
                                                (_tl3501535046_
                                                 (##cdr _e3501335039_)))
                                            ((lambda (_L35049_ _L35051_)
                                               (let ((_info35066_
                                                      (gx#syntax-local-value
                                                       _L35051_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info35066_)
                                                     (let* ((_g3506835085_
                                                             (slot-ref
                                                              _info35066_
                                                              'expander-identifiers))
                                                            (_E3507035091_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3506835085_)))
                    (_K3507135103_
                     (lambda (_setf35095_
                              _getf35097_
                              _type?35098_
                              _make-type35099_
                              _type::t35100_
                              _super35101_)
                       (_lp35001_
                        _L35049_
                        (cons _L35051_
                              (cons _type::t35100_
                                    (cons _make-type35099_
                                          (cons _type?35098_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids35006_
                                                              _setf35095_)
                                                       _getf35097_)))))))))
               (if (##pair? _g3506835085_)
                   (let ((_hd3507235107_ (##car _g3506835085_))
                         (_tl3507335110_ (##cdr _g3506835085_)))
                     (let ((_super35113_ _hd3507235107_))
                       (if (##pair? _tl3507335110_)
                           (let ((_hd3507435116_ (##car _tl3507335110_))
                                 (_tl3507535119_ (##cdr _tl3507335110_)))
                             (let ((_type::t35122_ _hd3507435116_))
                               (if (##pair? _tl3507535119_)
                                   (let ((_hd3507635125_
                                          (##car _tl3507535119_))
                                         (_tl3507735128_
                                          (##cdr _tl3507535119_)))
                                     (let ((_make-type35131_ _hd3507635125_))
                                       (if (##pair? _tl3507735128_)
                                           (let ((_hd3507835134_
                                                  (##car _tl3507735128_))
                                                 (_tl3507935137_
                                                  (##cdr _tl3507735128_)))
                                             (let ((_type?35140_
                                                    _hd3507835134_))
                                               (if (##pair? _tl3507935137_)
                                                   (let ((_hd3508035143_
                                                          (##car _tl3507935137_))
                                                         (_tl3508135146_
                                                          (##cdr _tl3507935137_)))
                                                     (let ((_getf35149_
                                                            _hd3508035143_))
                                                       (if (##pair? _tl3508135146_)
                                                           (let ((_hd3508235152_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3508135146_))
                         (_tl3508335155_ (##cdr _tl3508135146_)))
                     (let ((_setf35158_ _hd3508235152_))
                       (if (##null? _tl3508335155_)
                           (_K3507135103_
                            _setf35158_
                            _getf35149_
                            _type?35140_
                            _make-type35131_
                            _type::t35122_
                            _super35113_)
                           (_E3507035091_))))
                   (_E3507035091_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3507035091_))))
                                           (_E3507035091_))))
                                   (_E3507035091_))))
                           (_E3507035091_))))
                   (_E3507035091_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34915_
                                                      _L35051_))))
                                             _tl3501535046_
                                             _hd3501435043_)))
                                        (_g3500835032_ _g3501035036_)))))
                            (_g3500735161_ _rest35004_))))
                      _id3493234981_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3492734961_
                                              _target3492434955_
                                              '()))
                                           (_g3491834938_ _g3491934942_)))))
                                 (_g3491834938_ _g3491934942_))
                             (_g3491834938_ _g3491934942_))))
                     (_g3491834938_ _g3491934942_)))))
         (_g3491735173_ _stx34915_))))))
