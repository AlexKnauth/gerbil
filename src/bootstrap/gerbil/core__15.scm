(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx33008_)
      (let* ((_g3301333032_
              (lambda (_g3301433028_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3301433028_)))
             (_g3301233078_
              (lambda (_g3301433036_)
                (if (gx#stx-pair? _g3301433036_)
                    (let ((_e3302133039_ (gx#syntax-e _g3301433036_)))
                      (let ((_hd3302233043_ (##car _e3302133039_))
                            (_tl3302333046_ (##cdr _e3302133039_)))
                        (if (gx#stx-pair? _tl3302333046_)
                            (let ((_e3302433049_ (gx#syntax-e _tl3302333046_)))
                              (let ((_hd3302533053_ (##car _e3302433049_))
                                    (_tl3302633056_ (##cdr _e3302433049_)))
                                ((lambda (_L33059_ _L33061_ _L33062_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L33061_
                                                     (cons (cons _L33062_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L33059_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L33061_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3302633056_
                                 _hd3302533053_
                                 _hd3302233043_)))
                            (_g3301333032_ _g3301433036_))))
                    (_g3301333032_ _g3301433036_))))
             (_g3301133099_
              (lambda (_g3301433082_)
                (if (gx#stx-pair? _g3301433082_)
                    (let ((_e3301533085_ (gx#syntax-e _g3301433082_)))
                      (let ((_hd3301633089_ (##car _e3301533085_))
                            (_tl3301733092_ (##cdr _e3301533085_)))
                        (if (gx#stx-null? _tl3301733092_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3301233078_ _g3301433082_))))
                    (_g3301233078_ _g3301433082_)))))
        (_g3301133099_ _$stx33008_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx33103_)
      (let* ((_g3310833148_
              (lambda (_g3310933144_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3310933144_)))
             (_g3310733249_
              (lambda (_g3310933152_)
                (if (gx#stx-pair? _g3310933152_)
                    (let ((_e3312533155_ (gx#syntax-e _g3310933152_)))
                      (let ((_hd3312633159_ (##car _e3312533155_))
                            (_tl3312733162_ (##cdr _e3312533155_)))
                        (if (gx#stx-pair? _tl3312733162_)
                            (let ((_e3312833165_ (gx#syntax-e _tl3312733162_)))
                              (let ((_hd3312933169_ (##car _e3312833165_))
                                    (_tl3313033172_ (##cdr _e3312833165_)))
                                (if (gx#stx-pair? _hd3312933169_)
                                    (let ((_e3313133175_
                                           (gx#syntax-e _hd3312933169_)))
                                      (let ((_hd3313233179_
                                             (##car _e3313133175_))
                                            (_tl3313333182_
                                             (##cdr _e3313133175_)))
                                        (if (gx#stx-pair/null? _tl3313033172_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3313033172_)
                                                      '0)
                                                (let ((_g35693_
                                                       (gx#syntax-split-splice
                                                        _tl3313033172_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35694_
                                                           (if (##values?
                                                                _g35693_)
                                                               (##vector-length
                                                                _g35693_)
                                                               1)))
                                                      (if (not (##fx= _g35694_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35694_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3313433185_
                                                           (##vector-ref
                                                            _g35693_
                                                            0))
                                                          (_tl3313633188_
                                                           (##vector-ref
                                                            _g35693_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3313633188_)
                                                          (letrec ((_loop3313733191_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3313533195_ _body3314133198_)
                              (if (gx#stx-pair? _hd3313533195_)
                                  (let ((_e3313833201_
                                         (gx#syntax-e _hd3313533195_)))
                                    (let ((_lp-hd3313933205_
                                           (##car _e3313833201_))
                                          (_lp-tl3314033208_
                                           (##cdr _e3313833201_)))
                                      (_loop3313733191_
                                       _lp-tl3314033208_
                                       (cons _lp-hd3313933205_
                                             _body3314133198_))))
                                  (let ((_body3314233211_
                                         (reverse _body3314133198_)))
                                    ((lambda (_L33215_
                                              _L33217_
                                              _L33218_
                                              _L33219_)
                                       (if (gx#identifier? _L33218_)
                                           (cons _L33219_
                                                 (cons _L33218_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33217_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3324033243_ _g3324133246_)
                                            (cons _g3324033243_ _g3324133246_))
                                          '()
                                          _L33215_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3310833148_ _g3310933152_)))
                                     _body3314233211_
                                     _tl3313333182_
                                     _hd3313233179_
                                     _hd3312633159_))))))
                    (_loop3313733191_ _target3313433185_ '()))
                  (_g3310833148_ _g3310933152_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3310833148_ _g3310933152_))
                                            (_g3310833148_ _g3310933152_))))
                                    (_g3310833148_ _g3310933152_))))
                            (_g3310833148_ _g3310933152_))))
                    (_g3310833148_ _g3310933152_))))
             (_g3310633303_
              (lambda (_g3310933253_)
                (if (gx#stx-pair? _g3310933253_)
                    (let ((_e3311233256_ (gx#syntax-e _g3310933253_)))
                      (let ((_hd3311333260_ (##car _e3311233256_))
                            (_tl3311433263_ (##cdr _e3311233256_)))
                        (if (gx#stx-pair? _tl3311433263_)
                            (let ((_e3311533266_ (gx#syntax-e _tl3311433263_)))
                              (let ((_hd3311633270_ (##car _e3311533266_))
                                    (_tl3311733273_ (##cdr _e3311533266_)))
                                (if (gx#stx-pair? _tl3311733273_)
                                    (let ((_e3311833276_
                                           (gx#syntax-e _tl3311733273_)))
                                      (let ((_hd3311933280_
                                             (##car _e3311833276_))
                                            (_tl3312033283_
                                             (##cdr _e3311833276_)))
                                        (if (gx#stx-null? _tl3312033283_)
                                            ((lambda (_L33286_ _L33288_)
                                               (if (gx#identifier? _L33288_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33288_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L33286_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3310733249_
                                                    _g3310933253_)))
                                             _hd3311933280_
                                             _hd3311633270_)
                                            (_g3310733249_ _g3310933253_))))
                                    (_g3310733249_ _g3310933253_))))
                            (_g3310733249_ _g3310933253_))))
                    (_g3310733249_ _g3310933253_)))))
        (_g3310633303_ _$stx33103_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx33308_)
      (let* ((_g3331333353_
              (lambda (_g3331433349_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3331433349_)))
             (_g3331233454_
              (lambda (_g3331433357_)
                (if (gx#stx-pair? _g3331433357_)
                    (let ((_e3333033360_ (gx#syntax-e _g3331433357_)))
                      (let ((_hd3333133364_ (##car _e3333033360_))
                            (_tl3333233367_ (##cdr _e3333033360_)))
                        (if (gx#stx-pair? _tl3333233367_)
                            (let ((_e3333333370_ (gx#syntax-e _tl3333233367_)))
                              (let ((_hd3333433374_ (##car _e3333333370_))
                                    (_tl3333533377_ (##cdr _e3333333370_)))
                                (if (gx#stx-pair? _hd3333433374_)
                                    (let ((_e3333633380_
                                           (gx#syntax-e _hd3333433374_)))
                                      (let ((_hd3333733384_
                                             (##car _e3333633380_))
                                            (_tl3333833387_
                                             (##cdr _e3333633380_)))
                                        (if (gx#stx-pair/null? _tl3333533377_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3333533377_)
                                                      '0)
                                                (let ((_g35695_
                                                       (gx#syntax-split-splice
                                                        _tl3333533377_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35696_
                                                           (if (##values?
                                                                _g35695_)
                                                               (##vector-length
                                                                _g35695_)
                                                               1)))
                                                      (if (not (##fx= _g35696_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35696_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3333933390_
                                                           (##vector-ref
                                                            _g35695_
                                                            0))
                                                          (_tl3334133393_
                                                           (##vector-ref
                                                            _g35695_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3334133393_)
                                                          (letrec ((_loop3334233396_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3334033400_ _body3334633403_)
                              (if (gx#stx-pair? _hd3334033400_)
                                  (let ((_e3334333406_
                                         (gx#syntax-e _hd3334033400_)))
                                    (let ((_lp-hd3334433410_
                                           (##car _e3334333406_))
                                          (_lp-tl3334533413_
                                           (##cdr _e3334333406_)))
                                      (_loop3334233396_
                                       _lp-tl3334533413_
                                       (cons _lp-hd3334433410_
                                             _body3334633403_))))
                                  (let ((_body3334733416_
                                         (reverse _body3334633403_)))
                                    ((lambda (_L33420_
                                              _L33422_
                                              _L33423_
                                              _L33424_)
                                       (if (gx#identifier? _L33423_)
                                           (cons _L33424_
                                                 (cons _L33423_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33422_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3344533448_ _g3344633451_)
                                            (cons _g3344533448_ _g3344633451_))
                                          '()
                                          _L33420_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3331333353_ _g3331433357_)))
                                     _body3334733416_
                                     _tl3333833387_
                                     _hd3333733384_
                                     _hd3333133364_))))))
                    (_loop3334233396_ _target3333933390_ '()))
                  (_g3331333353_ _g3331433357_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3331333353_ _g3331433357_))
                                            (_g3331333353_ _g3331433357_))))
                                    (_g3331333353_ _g3331433357_))))
                            (_g3331333353_ _g3331433357_))))
                    (_g3331333353_ _g3331433357_))))
             (_g3331133508_
              (lambda (_g3331433458_)
                (if (gx#stx-pair? _g3331433458_)
                    (let ((_e3331733461_ (gx#syntax-e _g3331433458_)))
                      (let ((_hd3331833465_ (##car _e3331733461_))
                            (_tl3331933468_ (##cdr _e3331733461_)))
                        (if (gx#stx-pair? _tl3331933468_)
                            (let ((_e3332033471_ (gx#syntax-e _tl3331933468_)))
                              (let ((_hd3332133475_ (##car _e3332033471_))
                                    (_tl3332233478_ (##cdr _e3332033471_)))
                                (if (gx#stx-pair? _tl3332233478_)
                                    (let ((_e3332333481_
                                           (gx#syntax-e _tl3332233478_)))
                                      (let ((_hd3332433485_
                                             (##car _e3332333481_))
                                            (_tl3332533488_
                                             (##cdr _e3332333481_)))
                                        (if (gx#stx-null? _tl3332533488_)
                                            ((lambda (_L33491_ _L33493_)
                                               (if (gx#identifier? _L33493_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33493_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L33491_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3331233454_
                                                    _g3331433458_)))
                                             _hd3332433485_
                                             _hd3332133475_)
                                            (_g3331233454_ _g3331433458_))))
                                    (_g3331233454_ _g3331433458_))))
                            (_g3331233454_ _g3331433458_))))
                    (_g3331233454_ _g3331433458_)))))
        (_g3331133508_ _$stx33308_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx33513_)
      (let* ((_g3351833558_
              (lambda (_g3351933554_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3351933554_)))
             (_g3351733659_
              (lambda (_g3351933562_)
                (if (gx#stx-pair? _g3351933562_)
                    (let ((_e3353533565_ (gx#syntax-e _g3351933562_)))
                      (let ((_hd3353633569_ (##car _e3353533565_))
                            (_tl3353733572_ (##cdr _e3353533565_)))
                        (if (gx#stx-pair? _tl3353733572_)
                            (let ((_e3353833575_ (gx#syntax-e _tl3353733572_)))
                              (let ((_hd3353933579_ (##car _e3353833575_))
                                    (_tl3354033582_ (##cdr _e3353833575_)))
                                (if (gx#stx-pair? _hd3353933579_)
                                    (let ((_e3354133585_
                                           (gx#syntax-e _hd3353933579_)))
                                      (let ((_hd3354233589_
                                             (##car _e3354133585_))
                                            (_tl3354333592_
                                             (##cdr _e3354133585_)))
                                        (if (gx#stx-pair/null? _tl3354033582_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3354033582_)
                                                      '0)
                                                (let ((_g35697_
                                                       (gx#syntax-split-splice
                                                        _tl3354033582_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35698_
                                                           (if (##values?
                                                                _g35697_)
                                                               (##vector-length
                                                                _g35697_)
                                                               1)))
                                                      (if (not (##fx= _g35698_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              2))
                  (error "Context expects 2 values" _g35698_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3354433595_
                                                           (##vector-ref
                                                            _g35697_
                                                            0))
                                                          (_tl3354633598_
                                                           (##vector-ref
                                                            _g35697_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3354633598_)
                                                          (letrec ((_loop3354733601_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3354533605_ _body3355133608_)
                              (if (gx#stx-pair? _hd3354533605_)
                                  (let ((_e3354833611_
                                         (gx#syntax-e _hd3354533605_)))
                                    (let ((_lp-hd3354933615_
                                           (##car _e3354833611_))
                                          (_lp-tl3355033618_
                                           (##cdr _e3354833611_)))
                                      (_loop3354733601_
                                       _lp-tl3355033618_
                                       (cons _lp-hd3354933615_
                                             _body3355133608_))))
                                  (let ((_body3355233621_
                                         (reverse _body3355133608_)))
                                    ((lambda (_L33625_
                                              _L33627_
                                              _L33628_
                                              _L33629_)
                                       (if (gx#identifier? _L33628_)
                                           (cons _L33629_
                                                 (cons _L33628_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33627_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3365033653_ _g3365133656_)
                                            (cons _g3365033653_ _g3365133656_))
                                          '()
                                          _L33625_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3351833558_ _g3351933562_)))
                                     _body3355233621_
                                     _tl3354333592_
                                     _hd3354233589_
                                     _hd3353633569_))))))
                    (_loop3354733601_ _target3354433595_ '()))
                  (_g3351833558_ _g3351933562_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3351833558_ _g3351933562_))
                                            (_g3351833558_ _g3351933562_))))
                                    (_g3351833558_ _g3351933562_))))
                            (_g3351833558_ _g3351933562_))))
                    (_g3351833558_ _g3351933562_))))
             (_g3351633713_
              (lambda (_g3351933663_)
                (if (gx#stx-pair? _g3351933663_)
                    (let ((_e3352233666_ (gx#syntax-e _g3351933663_)))
                      (let ((_hd3352333670_ (##car _e3352233666_))
                            (_tl3352433673_ (##cdr _e3352233666_)))
                        (if (gx#stx-pair? _tl3352433673_)
                            (let ((_e3352533676_ (gx#syntax-e _tl3352433673_)))
                              (let ((_hd3352633680_ (##car _e3352533676_))
                                    (_tl3352733683_ (##cdr _e3352533676_)))
                                (if (gx#stx-pair? _tl3352733683_)
                                    (let ((_e3352833686_
                                           (gx#syntax-e _tl3352733683_)))
                                      (let ((_hd3352933690_
                                             (##car _e3352833686_))
                                            (_tl3353033693_
                                             (##cdr _e3352833686_)))
                                        (if (gx#stx-null? _tl3353033693_)
                                            ((lambda (_L33696_ _L33698_)
                                               (if (gx#identifier? _L33698_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33698_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L33696_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3351733659_
                                                    _g3351933663_)))
                                             _hd3352933690_
                                             _hd3352633680_)
                                            (_g3351733659_ _g3351933663_))))
                                    (_g3351733659_ _g3351933663_))))
                            (_g3351733659_ _g3351933663_))))
                    (_g3351733659_ _g3351933663_)))))
        (_g3351633713_ _$stx33513_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx33718_)
       (let* ((_g3372133741_
               (lambda (_g3372233737_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3372233737_)))
              (_g3372033812_
               (lambda (_g3372233745_)
                 (if (gx#stx-pair? _g3372233745_)
                     (let ((_e3372433748_ (gx#syntax-e _g3372233745_)))
                       (let ((_hd3372533752_ (##car _e3372433748_))
                             (_tl3372633755_ (##cdr _e3372433748_)))
                         (if (gx#stx-pair/null? _tl3372633755_)
                             (if (fx>= (gx#stx-length _tl3372633755_) '0)
                                 (let ((_g35699_
                                        (gx#syntax-split-splice
                                         _tl3372633755_
                                         '0)))
                                   (begin
                                     (let ((_g35700_
                                            (if (##values? _g35699_)
                                                (##vector-length _g35699_)
                                                1)))
                                       (if (not (##fx= _g35700_ 2))
                                           (error "Context expects 2 values"
                                                  _g35700_)))
                                     (let ((_target3372733758_
                                            (##vector-ref _g35699_ 0))
                                           (_tl3372933761_
                                            (##vector-ref _g35699_ 1)))
                                       (if (gx#stx-null? _tl3372933761_)
                                           (letrec ((_loop3373033764_
                                                     (lambda (_hd3372833768_
                                                              _body3373433771_)
                                                       (if (gx#stx-pair?
                                                            _hd3372833768_)
                                                           (let ((_e3373133774_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3372833768_)))
                     (let ((_lp-hd3373233778_ (##car _e3373133774_))
                           (_lp-tl3373333781_ (##cdr _e3373133774_)))
                       (_loop3373033764_
                        _lp-tl3373333781_
                        (cons _lp-hd3373233778_ _body3373433771_))))
                   (let ((_body3373533784_ (reverse _body3373433771_)))
                     ((lambda (_L33788_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3380333806_
                                                      _g3380433809_)
                                               (cons _g3380333806_
                                                     _g3380433809_))
                                             '()
                                             _L33788_)))))
                      _body3373533784_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3373033764_
                                              _target3372733758_
                                              '()))
                                           (_g3372133741_ _g3372233745_)))))
                                 (_g3372133741_ _g3372233745_))
                             (_g3372133741_ _g3372233745_))))
                     (_g3372133741_ _g3372233745_)))))
         (_g3372033812_ _stx33718_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33817_)
       (let* ((_g3382033840_
               (lambda (_g3382133836_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3382133836_)))
              (_g3381933911_
               (lambda (_g3382133844_)
                 (if (gx#stx-pair? _g3382133844_)
                     (let ((_e3382333847_ (gx#syntax-e _g3382133844_)))
                       (let ((_hd3382433851_ (##car _e3382333847_))
                             (_tl3382533854_ (##cdr _e3382333847_)))
                         (if (gx#stx-pair/null? _tl3382533854_)
                             (if (fx>= (gx#stx-length _tl3382533854_) '0)
                                 (let ((_g35701_
                                        (gx#syntax-split-splice
                                         _tl3382533854_
                                         '0)))
                                   (begin
                                     (let ((_g35702_
                                            (if (##values? _g35701_)
                                                (##vector-length _g35701_)
                                                1)))
                                       (if (not (##fx= _g35702_ 2))
                                           (error "Context expects 2 values"
                                                  _g35702_)))
                                     (let ((_target3382633857_
                                            (##vector-ref _g35701_ 0))
                                           (_tl3382833860_
                                            (##vector-ref _g35701_ 1)))
                                       (if (gx#stx-null? _tl3382833860_)
                                           (letrec ((_loop3382933863_
                                                     (lambda (_hd3382733867_
                                                              _body3383333870_)
                                                       (if (gx#stx-pair?
                                                            _hd3382733867_)
                                                           (let ((_e3383033873_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3382733867_)))
                     (let ((_lp-hd3383133877_ (##car _e3383033873_))
                           (_lp-tl3383233880_ (##cdr _e3383033873_)))
                       (_loop3382933863_
                        _lp-tl3383233880_
                        (cons _lp-hd3383133877_ _body3383333870_))))
                   (let ((_body3383433883_ (reverse _body3383333870_)))
                     ((lambda (_L33887_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3390233905_
                                                      _g3390333908_)
                                               (cons _g3390233905_
                                                     _g3390333908_))
                                             '()
                                             _L33887_)))))
                      _body3383433883_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3382933863_
                                              _target3382633857_
                                              '()))
                                           (_g3382033840_ _g3382133844_)))))
                                 (_g3382033840_ _g3382133844_))
                             (_g3382033840_ _g3382133844_))))
                     (_g3382033840_ _g3382133844_)))))
         (_g3381933911_ _stx33817_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33916_)
       (let* ((_g3391933943_
               (lambda (_g3392033939_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3392033939_)))
              (_g3391834065_
               (lambda (_g3392033947_)
                 (if (gx#stx-pair? _g3392033947_)
                     (let ((_e3392333950_ (gx#syntax-e _g3392033947_)))
                       (let ((_hd3392433954_ (##car _e3392333950_))
                             (_tl3392533957_ (##cdr _e3392333950_)))
                         (if (gx#stx-pair? _tl3392533957_)
                             (let ((_e3392633960_
                                    (gx#syntax-e _tl3392533957_)))
                               (let ((_hd3392733964_ (##car _e3392633960_))
                                     (_tl3392833967_ (##cdr _e3392633960_)))
                                 (if (gx#stx-pair/null? _tl3392833967_)
                                     (if (fx>= (gx#stx-length _tl3392833967_)
                                               '0)
                                         (let ((_g35703_
                                                (gx#syntax-split-splice
                                                 _tl3392833967_
                                                 '0)))
                                           (begin
                                             (let ((_g35704_
                                                    (if (##values? _g35703_)
                                                        (##vector-length
                                                         _g35703_)
                                                        1)))
                                               (if (not (##fx= _g35704_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35704_)))
                                             (let ((_target3392933970_
                                                    (##vector-ref _g35703_ 0))
                                                   (_tl3393133973_
                                                    (##vector-ref _g35703_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3393133973_)
                                                   (letrec ((_loop3393233976_
                                                             (lambda (_hd3393033980_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3393633983_)
                       (if (gx#stx-pair? _hd3393033980_)
                           (let ((_e3393333986_ (gx#syntax-e _hd3393033980_)))
                             (let ((_lp-hd3393433990_ (##car _e3393333986_))
                                   (_lp-tl3393533993_ (##cdr _e3393333986_)))
                               (_loop3393233976_
                                _lp-tl3393533993_
                                (cons _lp-hd3393433990_ _id3393633983_))))
                           (let ((_id3393733996_ (reverse _id3393633983_)))
                             ((lambda (_L34000_ _L34002_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3401934022_
                                                       _g3402034025_)
                                                (cons _g3401934022_
                                                      _g3402034025_))
                                              '()
                                              _L34000_)))
                                    (let* ((_keys34036_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3402734030_
                                                               _g3402834033_)
                                                        (cons _g3402734030_
                                                              _g3402834033_))
                                                      '()
                                                      _L34000_))))
                                           (_keytab34047_
                                            (let ((_ht34039_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3404134043_)
                                                   (hash-put!
                                                    _ht34039_
                                                    _g3404134043_
                                                    '#t))
                                                 _keys34036_)
                                                _ht34039_)))
                                           (_imports34050_
                                            (gx#core-expand-import-source
                                             _L34002_))
                                           (_fold-e34060_
                                            (letrec ((_fold-e34053_
                                                      (lambda (_in34056_
                                                               _r34058_)
                                                        (if (gx#module-import?
                                                             _in34056_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34047_
                         (gx#module-import-name _in34056_))
                        (cons _in34056_ _r34058_)
                        _r34058_)
                    (if (gx#import-set? _in34056_)
                        (foldl _fold-e34053_
                               _r34058_
                               (gx#import-set-imports _in34056_))
                        _r34058_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34053_)))
                                      (cons 'begin:
                                            (foldl _fold-e34060_
                                                   '()
                                                   _imports34050_)))
                                    (_g3391933943_ _g3392033947_)))
                              _id3393733996_
                              _hd3392733964_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3393233976_
                                                      _target3392933970_
                                                      '()))
                                                   (_g3391933943_
                                                    _g3392033947_)))))
                                         (_g3391933943_ _g3392033947_))
                                     (_g3391933943_ _g3392033947_))))
                             (_g3391933943_ _g3392033947_))))
                     (_g3391933943_ _g3392033947_)))))
         (_g3391834065_ _stx33916_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx34070_)
       (let* ((_g3407334097_
               (lambda (_g3407434093_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3407434093_)))
              (_g3407234219_
               (lambda (_g3407434101_)
                 (if (gx#stx-pair? _g3407434101_)
                     (let ((_e3407734104_ (gx#syntax-e _g3407434101_)))
                       (let ((_hd3407834108_ (##car _e3407734104_))
                             (_tl3407934111_ (##cdr _e3407734104_)))
                         (if (gx#stx-pair? _tl3407934111_)
                             (let ((_e3408034114_
                                    (gx#syntax-e _tl3407934111_)))
                               (let ((_hd3408134118_ (##car _e3408034114_))
                                     (_tl3408234121_ (##cdr _e3408034114_)))
                                 (if (gx#stx-pair/null? _tl3408234121_)
                                     (if (fx>= (gx#stx-length _tl3408234121_)
                                               '0)
                                         (let ((_g35705_
                                                (gx#syntax-split-splice
                                                 _tl3408234121_
                                                 '0)))
                                           (begin
                                             (let ((_g35706_
                                                    (if (##values? _g35705_)
                                                        (##vector-length
                                                         _g35705_)
                                                        1)))
                                               (if (not (##fx= _g35706_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35706_)))
                                             (let ((_target3408334124_
                                                    (##vector-ref _g35705_ 0))
                                                   (_tl3408534127_
                                                    (##vector-ref _g35705_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3408534127_)
                                                   (letrec ((_loop3408634130_
                                                             (lambda (_hd3408434134_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3409034137_)
                       (if (gx#stx-pair? _hd3408434134_)
                           (let ((_e3408734140_ (gx#syntax-e _hd3408434134_)))
                             (let ((_lp-hd3408834144_ (##car _e3408734140_))
                                   (_lp-tl3408934147_ (##cdr _e3408734140_)))
                               (_loop3408634130_
                                _lp-tl3408934147_
                                (cons _lp-hd3408834144_ _id3409034137_))))
                           (let ((_id3409134150_ (reverse _id3409034137_)))
                             ((lambda (_L34154_ _L34156_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3417334176_
                                                       _g3417434179_)
                                                (cons _g3417334176_
                                                      _g3417434179_))
                                              '()
                                              _L34154_)))
                                    (let* ((_keys34190_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3418134184_
                                                               _g3418234187_)
                                                        (cons _g3418134184_
                                                              _g3418234187_))
                                                      '()
                                                      _L34154_))))
                                           (_keytab34201_
                                            (let ((_ht34193_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3419534197_)
                                                   (hash-put!
                                                    _ht34193_
                                                    _g3419534197_
                                                    '#t))
                                                 _keys34190_)
                                                _ht34193_)))
                                           (_imports34204_
                                            (gx#core-expand-import-source
                                             _L34156_))
                                           (_fold-e34214_
                                            (letrec ((_fold-e34207_
                                                      (lambda (_in34210_
                                                               _r34212_)
                                                        (if (gx#module-import?
                                                             _in34210_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34201_
                         (gx#module-import-name _in34210_))
                        _r34212_
                        (cons _in34210_ _r34212_))
                    (if (gx#import-set? _in34210_)
                        (foldl _fold-e34207_
                               _r34212_
                               (gx#import-set-imports _in34210_))
                        (cons _in34210_ _r34212_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34207_)))
                                      (cons 'begin:
                                            (foldl _fold-e34214_
                                                   '()
                                                   _imports34204_)))
                                    (_g3407334097_ _g3407434101_)))
                              _id3409134150_
                              _hd3408134118_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3408634130_
                                                      _target3408334124_
                                                      '()))
                                                   (_g3407334097_
                                                    _g3407434101_)))))
                                         (_g3407334097_ _g3407434101_))
                                     (_g3407334097_ _g3407434101_))))
                             (_g3407334097_ _g3407434101_))))
                     (_g3407334097_ _g3407434101_)))))
         (_g3407234219_ _stx34070_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in34271_ _rename34273_)
      (gx#make-module-import
       (gx#module-import-source _in34271_)
       _rename34273_
       (gx#module-import-phi _in34271_)
       (gx#module-import-weak? _in34271_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name34224_ _pre34226_)
      (let* ((_name3422734235_ _name34224_)
             (_E3423034241_
              (lambda () (error '"No clause matching" _name3422734235_)))
             (_else3422934247_
              (lambda () (make-symbol _pre34226_ _name34224_)))
             (_K3423134255_
              (lambda (_mark34251_ _id34253_)
                (cons (make-symbol _pre34226_ _id34253_) _mark34251_))))
        (if (##pair? _name3422734235_)
            (let ((_hd3423234259_ (##car _name3422734235_))
                  (_tl3423334262_ (##cdr _name3422734235_)))
              (let* ((_id34265_ _hd3423234259_) (_mark34268_ _tl3423334262_))
                (_K3423134255_ _mark34268_ _id34265_)))
            (_else3422934247_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx34275_)
       (let* ((_g3427834311_
               (lambda (_g3427934307_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3427934307_)))
              (_g3427734497_
               (lambda (_g3427934315_)
                 (if (gx#stx-pair? _g3427934315_)
                     (let ((_e3428334318_ (gx#syntax-e _g3427934315_)))
                       (let ((_hd3428434322_ (##car _e3428334318_))
                             (_tl3428534325_ (##cdr _e3428334318_)))
                         (if (gx#stx-pair? _tl3428534325_)
                             (let ((_e3428634328_
                                    (gx#syntax-e _tl3428534325_)))
                               (let ((_hd3428734332_ (##car _e3428634328_))
                                     (_tl3428834335_ (##cdr _e3428634328_)))
                                 (if (gx#stx-pair/null? _tl3428834335_)
                                     (if (fx>= (gx#stx-length _tl3428834335_)
                                               '0)
                                         (let ((_g35707_
                                                (gx#syntax-split-splice
                                                 _tl3428834335_
                                                 '0)))
                                           (begin
                                             (let ((_g35708_
                                                    (if (##values? _g35707_)
                                                        (##vector-length
                                                         _g35707_)
                                                        1)))
                                               (if (not (##fx= _g35708_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35708_)))
                                             (let ((_target3428934338_
                                                    (##vector-ref _g35707_ 0))
                                                   (_tl3429134341_
                                                    (##vector-ref _g35707_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3429134341_)
                                                   (letrec ((_loop3429234344_
                                                             (lambda (_hd3429034348_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3429634351_
                              _id3429734353_)
                       (if (gx#stx-pair? _hd3429034348_)
                           (let ((_e3429334356_ (gx#syntax-e _hd3429034348_)))
                             (let ((_lp-hd3429434360_ (##car _e3429334356_))
                                   (_lp-tl3429534363_ (##cdr _e3429334356_)))
                               (if (gx#stx-pair? _lp-hd3429434360_)
                                   (let ((_e3430034366_
                                          (gx#syntax-e _lp-hd3429434360_)))
                                     (let ((_hd3430134370_
                                            (##car _e3430034366_))
                                           (_tl3430234373_
                                            (##cdr _e3430034366_)))
                                       (if (gx#stx-pair? _tl3430234373_)
                                           (let ((_e3430334376_
                                                  (gx#syntax-e
                                                   _tl3430234373_)))
                                             (let ((_hd3430434380_
                                                    (##car _e3430334376_))
                                                   (_tl3430534383_
                                                    (##cdr _e3430334376_)))
                                               (if (gx#stx-null?
                                                    _tl3430534383_)
                                                   (_loop3429234344_
                                                    _lp-tl3429534363_
                                                    (cons _hd3430434380_
                                                          _new-id3429634351_)
                                                    (cons _hd3430134370_
                                                          _id3429734353_))
                                                   (_g3427834311_
                                                    _g3427934315_))))
                                           (_g3427834311_ _g3427934315_))))
                                   (_g3427834311_ _g3427934315_))))
                           (let ((_new-id3429834386_
                                  (reverse _new-id3429634351_))
                                 (_id3429934389_ (reverse _id3429734353_)))
                             ((lambda (_L34392_ _L34394_ _L34395_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3441334416_
                                                           _g3441434419_)
                                                    (cons _g3441334416_
                                                          _g3441434419_))
                                                  '()
                                                  _L34394_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3442134424_
                                                           _g3442234427_)
                                                    (cons _g3442134424_
                                                          _g3442234427_))
                                                  '()
                                                  _L34392_)))
                                        '#f)
                                    (let* ((_keytab34430_ (make-hash-table))
                                           (_found34433_ (make-hash-table))
                                           (_g35709_
                                            (for-each
                                             (lambda (_id34436_ _new-id34438_)
                                               (hash-put!
                                                _keytab34430_
                                                (gx#core-identifier-key
                                                 _id34436_)
                                                (gx#core-identifier-key
                                                 _new-id34438_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3443934442_
                                                               _g3444034445_)
                                                        (cons _g3443934442_
                                                              _g3444034445_))
                                                      '()
                                                      _L34394_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3444734450_
                                                               _g3444834453_)
                                                        (cons _g3444734450_
                                                              _g3444834453_))
                                                      '()
                                                      _L34392_))))
                                           (_imports34458_
                                            (gx#core-expand-import-source
                                             _L34395_))
                                           (_fold-e34478_
                                            (letrec ((_fold-e34461_
                                                      (lambda (_in34464_
                                                               _r34466_)
                                                        (if (gx#module-import?
                                                             _in34464_)
                                                            (let* ((_name34468_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in34464_))
                           (_$e34471_ (hash-get _keytab34430_ _name34468_)))
                      (if _$e34471_
                          ((lambda (_rename34475_)
                             (begin
                               (hash-put! _found34433_ _name34468_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in34464_
                                      _rename34475_)
                                     _r34466_)))
                           _$e34471_)
                          (cons _in34464_ _r34466_)))
                    (if (gx#import-set? _in34464_)
                        (foldl _fold-e34461_
                               _r34466_
                               (gx#import-set-imports _in34464_))
                        (cons _in34464_ _r34466_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34461_))
                                           (_new-imports34481_
                                            (foldl _fold-e34478_
                                                   '()
                                                   _imports34458_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34486_)
                                           (if (hash-get
                                                _found34433_
                                                (gx#core-identifier-key
                                                 _id34486_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx34275_
                                                _id34486_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3448834491_
                                                           _g3448934494_)
                                                    (cons _g3448834491_
                                                          _g3448934494_))
                                                  '()
                                                  _L34394_)))
                                        (cons 'begin: _new-imports34481_)))
                                    (_g3427834311_ _g3427934315_)))
                              _new-id3429834386_
                              _id3429934389_
                              _hd3428734332_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3429234344_
                                                      _target3428934338_
                                                      '()
                                                      '()))
                                                   (_g3427834311_
                                                    _g3427934315_)))))
                                         (_g3427834311_ _g3427934315_))
                                     (_g3427834311_ _g3427934315_))))
                             (_g3427834311_ _g3427934315_))))
                     (_g3427834311_ _g3427934315_)))))
         (_g3427734497_ _stx34275_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx34503_)
       (let* ((_g3450634524_
               (lambda (_g3450734520_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3450734520_)))
              (_g3450534603_
               (lambda (_g3450734528_)
                 (if (gx#stx-pair? _g3450734528_)
                     (let ((_e3451034531_ (gx#syntax-e _g3450734528_)))
                       (let ((_hd3451134535_ (##car _e3451034531_))
                             (_tl3451234538_ (##cdr _e3451034531_)))
                         (if (gx#stx-pair? _tl3451234538_)
                             (let ((_e3451334541_
                                    (gx#syntax-e _tl3451234538_)))
                               (let ((_hd3451434545_ (##car _e3451334541_))
                                     (_tl3451534548_ (##cdr _e3451334541_)))
                                 (if (gx#stx-pair? _tl3451534548_)
                                     (let ((_e3451634551_
                                            (gx#syntax-e _tl3451534548_)))
                                       (let ((_hd3451734555_
                                              (##car _e3451634551_))
                                             (_tl3451834558_
                                              (##cdr _e3451634551_)))
                                         (if (gx#stx-null? _tl3451834558_)
                                             ((lambda (_L34561_ _L34563_)
                                                (if (gx#identifier? _L34561_)
                                                    (let* ((_pre34579_
                                                            (gx#stx-e
                                                             _L34561_))
                                                           (_imports34582_
                                                            (gx#core-expand-import-source
                                                             _L34563_))
                                                           (_rename-e34588_
                                                            (lambda (_name34585_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34585_
                                                               _pre34579_)))
                                                           (_fold-e34598_
                                                            (letrec ((_fold-e34591_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in34594_ _r34596_)
                                (if (gx#module-import? _in34594_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in34594_
                                           (_rename-e34588_
                                            (gx#module-import-name _in34594_)))
                                          _r34596_)
                                    (if (gx#import-set? _in34594_)
                                        (foldl _fold-e34591_
                                               _r34596_
                                               (gx#import-set-imports
                                                _in34594_))
                                        (cons _in34594_ _r34596_))))))
                      _fold-e34591_)))
              (cons 'begin: (foldl _fold-e34598_ '() _imports34582_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3450634524_
                                                     _g3450734528_)))
                                              _hd3451734555_
                                              _hd3451434545_)
                                             (_g3450634524_ _g3450734528_))))
                                     (_g3450634524_ _g3450734528_))))
                             (_g3450634524_ _g3450734528_))))
                     (_g3450634524_ _g3450734528_)))))
         (_g3450534603_ _stx34503_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx34607_)
       (let* ((_g3461034634_
               (lambda (_g3461134630_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3461134630_)))
              (_g3460934756_
               (lambda (_g3461134638_)
                 (if (gx#stx-pair? _g3461134638_)
                     (let ((_e3461434641_ (gx#syntax-e _g3461134638_)))
                       (let ((_hd3461534645_ (##car _e3461434641_))
                             (_tl3461634648_ (##cdr _e3461434641_)))
                         (if (gx#stx-pair? _tl3461634648_)
                             (let ((_e3461734651_
                                    (gx#syntax-e _tl3461634648_)))
                               (let ((_hd3461834655_ (##car _e3461734651_))
                                     (_tl3461934658_ (##cdr _e3461734651_)))
                                 (if (gx#stx-pair/null? _tl3461934658_)
                                     (if (fx>= (gx#stx-length _tl3461934658_)
                                               '0)
                                         (let ((_g35710_
                                                (gx#syntax-split-splice
                                                 _tl3461934658_
                                                 '0)))
                                           (begin
                                             (let ((_g35711_
                                                    (if (##values? _g35710_)
                                                        (##vector-length
                                                         _g35710_)
                                                        1)))
                                               (if (not (##fx= _g35711_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35711_)))
                                             (let ((_target3462034661_
                                                    (##vector-ref _g35710_ 0))
                                                   (_tl3462234664_
                                                    (##vector-ref _g35710_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3462234664_)
                                                   (letrec ((_loop3462334667_
                                                             (lambda (_hd3462134671_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3462734674_)
                       (if (gx#stx-pair? _hd3462134671_)
                           (let ((_e3462434677_ (gx#syntax-e _hd3462134671_)))
                             (let ((_lp-hd3462534681_ (##car _e3462434677_))
                                   (_lp-tl3462634684_ (##cdr _e3462434677_)))
                               (_loop3462334667_
                                _lp-tl3462634684_
                                (cons _lp-hd3462534681_ _id3462734674_))))
                           (let ((_id3462834687_ (reverse _id3462734674_)))
                             ((lambda (_L34691_ _L34693_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3471034713_
                                                       _g3471134716_)
                                                (cons _g3471034713_
                                                      _g3471134716_))
                                              '()
                                              _L34691_)))
                                    (let* ((_keys34727_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3471834721_
                                                               _g3471934724_)
                                                        (cons _g3471834721_
                                                              _g3471934724_))
                                                      '()
                                                      _L34691_))))
                                           (_keytab34738_
                                            (let ((_ht34730_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3473234734_)
                                                   (hash-put!
                                                    _ht34730_
                                                    _g3473234734_
                                                    '#t))
                                                 _keys34727_)
                                                _ht34730_)))
                                           (_exports34741_
                                            (gx#core-expand-export-source
                                             _L34693_))
                                           (_fold-e34751_
                                            (letrec ((_fold-e34744_
                                                      (lambda (_out34747_
                                                               _r34749_)
                                                        (if (gx#module-export?
                                                             _out34747_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34738_
                         (gx#module-export-name _out34747_))
                        _r34749_
                        (cons _out34747_ _r34749_))
                    (if (gx#export-set? _out34747_)
                        (foldl _fold-e34744_
                               _r34749_
                               (gx#export-set-exports _out34747_))
                        _r34749_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34744_)))
                                      (cons 'begin:
                                            (foldl _fold-e34751_
                                                   '()
                                                   _exports34741_)))
                                    (_g3461034634_ _g3461134638_)))
                              _id3462834687_
                              _hd3461834655_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3462334667_
                                                      _target3462034661_
                                                      '()))
                                                   (_g3461034634_
                                                    _g3461134638_)))))
                                         (_g3461034634_ _g3461134638_))
                                     (_g3461034634_ _g3461134638_))))
                             (_g3461034634_ _g3461134638_))))
                     (_g3461034634_ _g3461134638_)))))
         (_g3460934756_ _stx34607_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34761_ _rename34763_)
      (gx#make-module-export
       (gx#module-export-context _out34761_)
       (gx#module-export-key _out34761_)
       (gx#module-export-phi _out34761_)
       _rename34763_
       (gx#module-export-weak? _out34761_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34765_)
       (let* ((_g3476834801_
               (lambda (_g3476934797_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3476934797_)))
              (_g3476734987_
               (lambda (_g3476934805_)
                 (if (gx#stx-pair? _g3476934805_)
                     (let ((_e3477334808_ (gx#syntax-e _g3476934805_)))
                       (let ((_hd3477434812_ (##car _e3477334808_))
                             (_tl3477534815_ (##cdr _e3477334808_)))
                         (if (gx#stx-pair? _tl3477534815_)
                             (let ((_e3477634818_
                                    (gx#syntax-e _tl3477534815_)))
                               (let ((_hd3477734822_ (##car _e3477634818_))
                                     (_tl3477834825_ (##cdr _e3477634818_)))
                                 (if (gx#stx-pair/null? _tl3477834825_)
                                     (if (fx>= (gx#stx-length _tl3477834825_)
                                               '0)
                                         (let ((_g35712_
                                                (gx#syntax-split-splice
                                                 _tl3477834825_
                                                 '0)))
                                           (begin
                                             (let ((_g35713_
                                                    (if (##values? _g35712_)
                                                        (##vector-length
                                                         _g35712_)
                                                        1)))
                                               (if (not (##fx= _g35713_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35713_)))
                                             (let ((_target3477934828_
                                                    (##vector-ref _g35712_ 0))
                                                   (_tl3478134831_
                                                    (##vector-ref _g35712_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3478134831_)
                                                   (letrec ((_loop3478234834_
                                                             (lambda (_hd3478034838_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3478634841_
                              _id3478734843_)
                       (if (gx#stx-pair? _hd3478034838_)
                           (let ((_e3478334846_ (gx#syntax-e _hd3478034838_)))
                             (let ((_lp-hd3478434850_ (##car _e3478334846_))
                                   (_lp-tl3478534853_ (##cdr _e3478334846_)))
                               (if (gx#stx-pair? _lp-hd3478434850_)
                                   (let ((_e3479034856_
                                          (gx#syntax-e _lp-hd3478434850_)))
                                     (let ((_hd3479134860_
                                            (##car _e3479034856_))
                                           (_tl3479234863_
                                            (##cdr _e3479034856_)))
                                       (if (gx#stx-pair? _tl3479234863_)
                                           (let ((_e3479334866_
                                                  (gx#syntax-e
                                                   _tl3479234863_)))
                                             (let ((_hd3479434870_
                                                    (##car _e3479334866_))
                                                   (_tl3479534873_
                                                    (##cdr _e3479334866_)))
                                               (if (gx#stx-null?
                                                    _tl3479534873_)
                                                   (_loop3478234834_
                                                    _lp-tl3478534853_
                                                    (cons _hd3479434870_
                                                          _new-id3478634841_)
                                                    (cons _hd3479134860_
                                                          _id3478734843_))
                                                   (_g3476834801_
                                                    _g3476934805_))))
                                           (_g3476834801_ _g3476934805_))))
                                   (_g3476834801_ _g3476934805_))))
                           (let ((_new-id3478834876_
                                  (reverse _new-id3478634841_))
                                 (_id3478934879_ (reverse _id3478734843_)))
                             ((lambda (_L34882_ _L34884_ _L34885_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3490334906_
                                                           _g3490434909_)
                                                    (cons _g3490334906_
                                                          _g3490434909_))
                                                  '()
                                                  _L34884_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3491134914_
                                                           _g3491234917_)
                                                    (cons _g3491134914_
                                                          _g3491234917_))
                                                  '()
                                                  _L34882_)))
                                        '#f)
                                    (let* ((_keytab34920_ (make-hash-table))
                                           (_found34923_ (make-hash-table))
                                           (_g35714_
                                            (for-each
                                             (lambda (_id34926_ _new-id34928_)
                                               (hash-put!
                                                _keytab34920_
                                                (gx#core-identifier-key
                                                 _id34926_)
                                                (gx#core-identifier-key
                                                 _new-id34928_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3492934932_
                                                               _g3493034935_)
                                                        (cons _g3492934932_
                                                              _g3493034935_))
                                                      '()
                                                      _L34884_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3493734940_
                                                               _g3493834943_)
                                                        (cons _g3493734940_
                                                              _g3493834943_))
                                                      '()
                                                      _L34882_))))
                                           (_exports34948_
                                            (gx#core-expand-export-source
                                             _L34885_))
                                           (_fold-e34968_
                                            (letrec ((_fold-e34951_
                                                      (lambda (_out34954_
                                                               _r34956_)
                                                        (if (gx#module-export?
                                                             _out34954_)
                                                            (let* ((_name34958_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34954_))
                           (_$e34961_ (hash-get _keytab34920_ _name34958_)))
                      (if _$e34961_
                          ((lambda (_rename34965_)
                             (begin
                               (hash-put! _found34923_ _name34958_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34954_
                                      _rename34965_)
                                     _r34956_)))
                           _$e34961_)
                          (cons _out34954_ _r34956_)))
                    (if (gx#export-set? _out34954_)
                        (foldl _fold-e34951_
                               _r34956_
                               (gx#export-set-exports _out34954_))
                        (cons _out34954_ _r34956_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34951_))
                                           (_new-exports34971_
                                            (foldl _fold-e34968_
                                                   '()
                                                   _exports34948_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34976_)
                                           (if (hash-get
                                                _found34923_
                                                (gx#core-identifier-key
                                                 _id34976_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34765_
                                                _id34976_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3497834981_
                                                           _g3497934984_)
                                                    (cons _g3497834981_
                                                          _g3497934984_))
                                                  '()
                                                  _L34884_)))
                                        (cons 'begin: _new-exports34971_)))
                                    (_g3476834801_ _g3476934805_)))
                              _new-id3478834876_
                              _id3478934879_
                              _hd3477734822_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3478234834_
                                                      _target3477934828_
                                                      '()
                                                      '()))
                                                   (_g3476834801_
                                                    _g3476934805_)))))
                                         (_g3476834801_ _g3476934805_))
                                     (_g3476834801_ _g3476934805_))))
                             (_g3476834801_ _g3476934805_))))
                     (_g3476834801_ _g3476934805_)))))
         (_g3476734987_ _stx34765_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34993_)
       (let* ((_g3499635014_
               (lambda (_g3499735010_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3499735010_)))
              (_g3499535093_
               (lambda (_g3499735018_)
                 (if (gx#stx-pair? _g3499735018_)
                     (let ((_e3500035021_ (gx#syntax-e _g3499735018_)))
                       (let ((_hd3500135025_ (##car _e3500035021_))
                             (_tl3500235028_ (##cdr _e3500035021_)))
                         (if (gx#stx-pair? _tl3500235028_)
                             (let ((_e3500335031_
                                    (gx#syntax-e _tl3500235028_)))
                               (let ((_hd3500435035_ (##car _e3500335031_))
                                     (_tl3500535038_ (##cdr _e3500335031_)))
                                 (if (gx#stx-pair? _tl3500535038_)
                                     (let ((_e3500635041_
                                            (gx#syntax-e _tl3500535038_)))
                                       (let ((_hd3500735045_
                                              (##car _e3500635041_))
                                             (_tl3500835048_
                                              (##cdr _e3500635041_)))
                                         (if (gx#stx-null? _tl3500835048_)
                                             ((lambda (_L35051_ _L35053_)
                                                (if (gx#identifier? _L35051_)
                                                    (let* ((_pre35069_
                                                            (gx#stx-e
                                                             _L35051_))
                                                           (_exports35072_
                                                            (gx#core-expand-export-source
                                                             _L35053_))
                                                           (_rename-e35078_
                                                            (lambda (_name35075_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name35075_
                                                               _pre35069_)))
                                                           (_fold-e35088_
                                                            (letrec ((_fold-e35081_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out35084_ _r35086_)
                                (if (gx#module-export? _out35084_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out35084_
                                           (_rename-e35078_
                                            (gx#module-export-name
                                             _out35084_)))
                                          _r35086_)
                                    (if (gx#export-set? _out35084_)
                                        (foldl _fold-e35081_
                                               _r35086_
                                               (gx#export-set-exports
                                                _out35084_))
                                        (cons _out35084_ _r35086_))))))
                      _fold-e35081_)))
              (cons 'begin: (foldl _fold-e35088_ '() _exports35072_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3499635014_
                                                     _g3499735018_)))
                                              _hd3500735045_
                                              _hd3500435035_)
                                             (_g3499635014_ _g3499735018_))))
                                     (_g3499635014_ _g3499735018_))))
                             (_g3499635014_ _g3499735018_))))
                     (_g3499635014_ _g3499735018_)))))
         (_g3499535093_ _stx34993_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx35097_)
       (let* ((_g3510035120_
               (lambda (_g3510135116_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3510135116_)))
              (_g3509935355_
               (lambda (_g3510135124_)
                 (if (gx#stx-pair? _g3510135124_)
                     (let ((_e3510335127_ (gx#syntax-e _g3510135124_)))
                       (let ((_hd3510435131_ (##car _e3510335127_))
                             (_tl3510535134_ (##cdr _e3510335127_)))
                         (if (gx#stx-pair/null? _tl3510535134_)
                             (if (fx>= (gx#stx-length _tl3510535134_) '0)
                                 (let ((_g35715_
                                        (gx#syntax-split-splice
                                         _tl3510535134_
                                         '0)))
                                   (begin
                                     (let ((_g35716_
                                            (if (##values? _g35715_)
                                                (##vector-length _g35715_)
                                                1)))
                                       (if (not (##fx= _g35716_ 2))
                                           (error "Context expects 2 values"
                                                  _g35716_)))
                                     (let ((_target3510635137_
                                            (##vector-ref _g35715_ 0))
                                           (_tl3510835140_
                                            (##vector-ref _g35715_ 1)))
                                       (if (gx#stx-null? _tl3510835140_)
                                           (letrec ((_loop3510935143_
                                                     (lambda (_hd3510735147_
                                                              _id3511335150_)
                                                       (if (gx#stx-pair?
                                                            _hd3510735147_)
                                                           (let ((_e3511035153_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3510735147_)))
                     (let ((_lp-hd3511135157_ (##car _e3511035153_))
                           (_lp-tl3511235160_ (##cdr _e3511035153_)))
                       (_loop3510935143_
                        _lp-tl3511235160_
                        (cons _lp-hd3511135157_ _id3511335150_))))
                   (let ((_id3511435163_ (reverse _id3511335150_)))
                     ((lambda (_L35167_)
                        (let _lp35183_ ((_rest35186_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3534635349_
                                                           _g3534735352_)
                                                    (cons _g3534635349_
                                                          _g3534735352_))
                                                  '()
                                                  _L35167_)))
                                        (_ids35188_ '()))
                          (let* ((_g3519135203_
                                  (lambda (_g3519235199_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3519235199_)))
                                 (_g3519035214_
                                  (lambda (_g3519235207_)
                                    ((lambda () (cons 'begin: _ids35188_)))))
                                 (_g3518935343_
                                  (lambda (_g3519235218_)
                                    (if (gx#stx-pair? _g3519235218_)
                                        (let ((_e3519535221_
                                               (gx#syntax-e _g3519235218_)))
                                          (let ((_hd3519635225_
                                                 (##car _e3519535221_))
                                                (_tl3519735228_
                                                 (##cdr _e3519535221_)))
                                            ((lambda (_L35231_ _L35233_)
                                               (let ((_info35248_
                                                      (gx#syntax-local-value
                                                       _L35233_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info35248_)
                                                     (let* ((_g3525035267_
                                                             (slot-ref
                                                              _info35248_
                                                              'expander-identifiers))
                                                            (_E3525235273_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3525035267_)))
                    (_K3525335285_
                     (lambda (_setf35277_
                              _getf35279_
                              _type?35280_
                              _make-type35281_
                              _type::t35282_
                              _super35283_)
                       (_lp35183_
                        _L35231_
                        (cons _L35233_
                              (cons _type::t35282_
                                    (cons _make-type35281_
                                          (cons _type?35280_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids35188_
                                                              _setf35277_)
                                                       _getf35279_)))))))))
               (if (##pair? _g3525035267_)
                   (let ((_hd3525435289_ (##car _g3525035267_))
                         (_tl3525535292_ (##cdr _g3525035267_)))
                     (let ((_super35295_ _hd3525435289_))
                       (if (##pair? _tl3525535292_)
                           (let ((_hd3525635298_ (##car _tl3525535292_))
                                 (_tl3525735301_ (##cdr _tl3525535292_)))
                             (let ((_type::t35304_ _hd3525635298_))
                               (if (##pair? _tl3525735301_)
                                   (let ((_hd3525835307_
                                          (##car _tl3525735301_))
                                         (_tl3525935310_
                                          (##cdr _tl3525735301_)))
                                     (let ((_make-type35313_ _hd3525835307_))
                                       (if (##pair? _tl3525935310_)
                                           (let ((_hd3526035316_
                                                  (##car _tl3525935310_))
                                                 (_tl3526135319_
                                                  (##cdr _tl3525935310_)))
                                             (let ((_type?35322_
                                                    _hd3526035316_))
                                               (if (##pair? _tl3526135319_)
                                                   (let ((_hd3526235325_
                                                          (##car _tl3526135319_))
                                                         (_tl3526335328_
                                                          (##cdr _tl3526135319_)))
                                                     (let ((_getf35331_
                                                            _hd3526235325_))
                                                       (if (##pair? _tl3526335328_)
                                                           (let ((_hd3526435334_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3526335328_))
                         (_tl3526535337_ (##cdr _tl3526335328_)))
                     (let ((_setf35340_ _hd3526435334_))
                       (if (##null? _tl3526535337_)
                           (_K3525335285_
                            _setf35340_
                            _getf35331_
                            _type?35322_
                            _make-type35313_
                            _type::t35304_
                            _super35295_)
                           (_E3525235273_))))
                   (_E3525235273_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3525235273_))))
                                           (_E3525235273_))))
                                   (_E3525235273_))))
                           (_E3525235273_))))
                   (_E3525235273_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx35097_
                                                      _L35233_))))
                                             _tl3519735228_
                                             _hd3519635225_)))
                                        (_g3519035214_ _g3519235218_)))))
                            (_g3518935343_ _rest35186_))))
                      _id3511435163_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3510935143_
                                              _target3510635137_
                                              '()))
                                           (_g3510035120_ _g3510135124_)))))
                                 (_g3510035120_ _g3510135124_))
                             (_g3510035120_ _g3510135124_))))
                     (_g3510035120_ _g3510135124_)))))
         (_g3509935355_ _stx35097_))))))
