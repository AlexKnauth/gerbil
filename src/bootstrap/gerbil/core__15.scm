(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32461_)
      (let* ((_g3246632485_
              (lambda (_g3246732481_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3246732481_)))
             (_g3246532531_
              (lambda (_g3246732489_)
                (if (gx#stx-pair? _g3246732489_)
                    (let ((_e3247432492_ (gx#syntax-e _g3246732489_)))
                      (let ((_hd3247532496_ (##car _e3247432492_))
                            (_tl3247632499_ (##cdr _e3247432492_)))
                        (if (gx#stx-pair? _tl3247632499_)
                            (let ((_e3247732502_ (gx#syntax-e _tl3247632499_)))
                              (let ((_hd3247832506_ (##car _e3247732502_))
                                    (_tl3247932509_ (##cdr _e3247732502_)))
                                ((lambda (_L32512_ _L32514_ _L32515_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32514_
                                                     (cons (cons _L32515_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32512_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32514_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3247932509_
                                 _hd3247832506_
                                 _hd3247532496_)))
                            (_g3246632485_ _g3246732489_))))
                    (_g3246632485_ _g3246732489_))))
             (_g3246432552_
              (lambda (_g3246732535_)
                (if (gx#stx-pair? _g3246732535_)
                    (let ((_e3246832538_ (gx#syntax-e _g3246732535_)))
                      (let ((_hd3246932542_ (##car _e3246832538_))
                            (_tl3247032545_ (##cdr _e3246832538_)))
                        (if (gx#stx-null? _tl3247032545_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3246532531_ _g3246732535_))))
                    (_g3246532531_ _g3246732535_)))))
        (_g3246432552_ _$stx32461_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32556_)
      (let* ((_g3256132601_
              (lambda (_g3256232597_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3256232597_)))
             (_g3256032702_
              (lambda (_g3256232605_)
                (if (gx#stx-pair? _g3256232605_)
                    (let ((_e3257832608_ (gx#syntax-e _g3256232605_)))
                      (let ((_hd3257932612_ (##car _e3257832608_))
                            (_tl3258032615_ (##cdr _e3257832608_)))
                        (if (gx#stx-pair? _tl3258032615_)
                            (let ((_e3258132618_ (gx#syntax-e _tl3258032615_)))
                              (let ((_hd3258232622_ (##car _e3258132618_))
                                    (_tl3258332625_ (##cdr _e3258132618_)))
                                (if (gx#stx-pair? _hd3258232622_)
                                    (let ((_e3258432628_
                                           (gx#syntax-e _hd3258232622_)))
                                      (let ((_hd3258532632_
                                             (##car _e3258432628_))
                                            (_tl3258632635_
                                             (##cdr _e3258432628_)))
                                        (if (gx#stx-pair/null? _tl3258332625_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3258332625_)
                                                      '0)
                                                (let ((_g35142_
                                                       (gx#syntax-split-splice
                                                        _tl3258332625_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35143_
                                                           (values-count
                                                            _g35142_)))
                                                      (if (not (fx= _g35143_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35143_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3258732638_
                                                           (values-ref
                                                            _g35142_
                                                            0))
                                                          (_tl3258932641_
                                                           (values-ref
                                                            _g35142_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3258932641_)
                                                          (letrec ((_loop3259032644_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3258832648_ _body3259432651_)
                              (if (gx#stx-pair? _hd3258832648_)
                                  (let ((_e3259132654_
                                         (gx#syntax-e _hd3258832648_)))
                                    (let ((_lp-hd3259232658_
                                           (##car _e3259132654_))
                                          (_lp-tl3259332661_
                                           (##cdr _e3259132654_)))
                                      (_loop3259032644_
                                       _lp-tl3259332661_
                                       (cons _lp-hd3259232658_
                                             _body3259432651_))))
                                  (let ((_body3259532664_
                                         (reverse _body3259432651_)))
                                    ((lambda (_L32668_
                                              _L32670_
                                              _L32671_
                                              _L32672_)
                                       (if (gx#identifier? _L32671_)
                                           (cons _L32672_
                                                 (cons _L32671_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32670_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3269332696_ _g3269432699_)
                                            (cons _g3269332696_ _g3269432699_))
                                          '()
                                          _L32668_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3256132601_ _g3256232605_)))
                                     _body3259532664_
                                     _tl3258632635_
                                     _hd3258532632_
                                     _hd3257932612_))))))
                    (_loop3259032644_ _target3258732638_ '()))
                  (_g3256132601_ _g3256232605_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3256132601_ _g3256232605_))
                                            (_g3256132601_ _g3256232605_))))
                                    (_g3256132601_ _g3256232605_))))
                            (_g3256132601_ _g3256232605_))))
                    (_g3256132601_ _g3256232605_))))
             (_g3255932756_
              (lambda (_g3256232706_)
                (if (gx#stx-pair? _g3256232706_)
                    (let ((_e3256532709_ (gx#syntax-e _g3256232706_)))
                      (let ((_hd3256632713_ (##car _e3256532709_))
                            (_tl3256732716_ (##cdr _e3256532709_)))
                        (if (gx#stx-pair? _tl3256732716_)
                            (let ((_e3256832719_ (gx#syntax-e _tl3256732716_)))
                              (let ((_hd3256932723_ (##car _e3256832719_))
                                    (_tl3257032726_ (##cdr _e3256832719_)))
                                (if (gx#stx-pair? _tl3257032726_)
                                    (let ((_e3257132729_
                                           (gx#syntax-e _tl3257032726_)))
                                      (let ((_hd3257232733_
                                             (##car _e3257132729_))
                                            (_tl3257332736_
                                             (##cdr _e3257132729_)))
                                        (if (gx#stx-null? _tl3257332736_)
                                            ((lambda (_L32739_ _L32741_)
                                               (if (gx#identifier? _L32741_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32741_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L32739_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3256032702_
                                                    _g3256232706_)))
                                             _hd3257232733_
                                             _hd3256932723_)
                                            (_g3256032702_ _g3256232706_))))
                                    (_g3256032702_ _g3256232706_))))
                            (_g3256032702_ _g3256232706_))))
                    (_g3256032702_ _g3256232706_)))))
        (_g3255932756_ _$stx32556_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx32761_)
      (let* ((_g3276632806_
              (lambda (_g3276732802_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3276732802_)))
             (_g3276532907_
              (lambda (_g3276732810_)
                (if (gx#stx-pair? _g3276732810_)
                    (let ((_e3278332813_ (gx#syntax-e _g3276732810_)))
                      (let ((_hd3278432817_ (##car _e3278332813_))
                            (_tl3278532820_ (##cdr _e3278332813_)))
                        (if (gx#stx-pair? _tl3278532820_)
                            (let ((_e3278632823_ (gx#syntax-e _tl3278532820_)))
                              (let ((_hd3278732827_ (##car _e3278632823_))
                                    (_tl3278832830_ (##cdr _e3278632823_)))
                                (if (gx#stx-pair? _hd3278732827_)
                                    (let ((_e3278932833_
                                           (gx#syntax-e _hd3278732827_)))
                                      (let ((_hd3279032837_
                                             (##car _e3278932833_))
                                            (_tl3279132840_
                                             (##cdr _e3278932833_)))
                                        (if (gx#stx-pair/null? _tl3278832830_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3278832830_)
                                                      '0)
                                                (let ((_g35144_
                                                       (gx#syntax-split-splice
                                                        _tl3278832830_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35145_
                                                           (values-count
                                                            _g35144_)))
                                                      (if (not (fx= _g35145_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35145_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3279232843_
                                                           (values-ref
                                                            _g35144_
                                                            0))
                                                          (_tl3279432846_
                                                           (values-ref
                                                            _g35144_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3279432846_)
                                                          (letrec ((_loop3279532849_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3279332853_ _body3279932856_)
                              (if (gx#stx-pair? _hd3279332853_)
                                  (let ((_e3279632859_
                                         (gx#syntax-e _hd3279332853_)))
                                    (let ((_lp-hd3279732863_
                                           (##car _e3279632859_))
                                          (_lp-tl3279832866_
                                           (##cdr _e3279632859_)))
                                      (_loop3279532849_
                                       _lp-tl3279832866_
                                       (cons _lp-hd3279732863_
                                             _body3279932856_))))
                                  (let ((_body3280032869_
                                         (reverse _body3279932856_)))
                                    ((lambda (_L32873_
                                              _L32875_
                                              _L32876_
                                              _L32877_)
                                       (if (gx#identifier? _L32876_)
                                           (cons _L32877_
                                                 (cons _L32876_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32875_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3289832901_ _g3289932904_)
                                            (cons _g3289832901_ _g3289932904_))
                                          '()
                                          _L32873_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3276632806_ _g3276732810_)))
                                     _body3280032869_
                                     _tl3279132840_
                                     _hd3279032837_
                                     _hd3278432817_))))))
                    (_loop3279532849_ _target3279232843_ '()))
                  (_g3276632806_ _g3276732810_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3276632806_ _g3276732810_))
                                            (_g3276632806_ _g3276732810_))))
                                    (_g3276632806_ _g3276732810_))))
                            (_g3276632806_ _g3276732810_))))
                    (_g3276632806_ _g3276732810_))))
             (_g3276432961_
              (lambda (_g3276732911_)
                (if (gx#stx-pair? _g3276732911_)
                    (let ((_e3277032914_ (gx#syntax-e _g3276732911_)))
                      (let ((_hd3277132918_ (##car _e3277032914_))
                            (_tl3277232921_ (##cdr _e3277032914_)))
                        (if (gx#stx-pair? _tl3277232921_)
                            (let ((_e3277332924_ (gx#syntax-e _tl3277232921_)))
                              (let ((_hd3277432928_ (##car _e3277332924_))
                                    (_tl3277532931_ (##cdr _e3277332924_)))
                                (if (gx#stx-pair? _tl3277532931_)
                                    (let ((_e3277632934_
                                           (gx#syntax-e _tl3277532931_)))
                                      (let ((_hd3277732938_
                                             (##car _e3277632934_))
                                            (_tl3277832941_
                                             (##cdr _e3277632934_)))
                                        (if (gx#stx-null? _tl3277832941_)
                                            ((lambda (_L32944_ _L32946_)
                                               (if (gx#identifier? _L32946_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32946_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L32944_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3276532907_
                                                    _g3276732911_)))
                                             _hd3277732938_
                                             _hd3277432928_)
                                            (_g3276532907_ _g3276732911_))))
                                    (_g3276532907_ _g3276732911_))))
                            (_g3276532907_ _g3276732911_))))
                    (_g3276532907_ _g3276732911_)))))
        (_g3276432961_ _$stx32761_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx32966_)
      (let* ((_g3297133011_
              (lambda (_g3297233007_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3297233007_)))
             (_g3297033112_
              (lambda (_g3297233015_)
                (if (gx#stx-pair? _g3297233015_)
                    (let ((_e3298833018_ (gx#syntax-e _g3297233015_)))
                      (let ((_hd3298933022_ (##car _e3298833018_))
                            (_tl3299033025_ (##cdr _e3298833018_)))
                        (if (gx#stx-pair? _tl3299033025_)
                            (let ((_e3299133028_ (gx#syntax-e _tl3299033025_)))
                              (let ((_hd3299233032_ (##car _e3299133028_))
                                    (_tl3299333035_ (##cdr _e3299133028_)))
                                (if (gx#stx-pair? _hd3299233032_)
                                    (let ((_e3299433038_
                                           (gx#syntax-e _hd3299233032_)))
                                      (let ((_hd3299533042_
                                             (##car _e3299433038_))
                                            (_tl3299633045_
                                             (##cdr _e3299433038_)))
                                        (if (gx#stx-pair/null? _tl3299333035_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3299333035_)
                                                      '0)
                                                (let ((_g35146_
                                                       (gx#syntax-split-splice
                                                        _tl3299333035_
                                                        '0)))
                                                  (begin
                                                    (let ((_g35147_
                                                           (values-count
                                                            _g35146_)))
                                                      (if (not (fx= _g35147_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g35147_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3299733048_
                                                           (values-ref
                                                            _g35146_
                                                            0))
                                                          (_tl3299933051_
                                                           (values-ref
                                                            _g35146_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3299933051_)
                                                          (letrec ((_loop3300033054_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3299833058_ _body3300433061_)
                              (if (gx#stx-pair? _hd3299833058_)
                                  (let ((_e3300133064_
                                         (gx#syntax-e _hd3299833058_)))
                                    (let ((_lp-hd3300233068_
                                           (##car _e3300133064_))
                                          (_lp-tl3300333071_
                                           (##cdr _e3300133064_)))
                                      (_loop3300033054_
                                       _lp-tl3300333071_
                                       (cons _lp-hd3300233068_
                                             _body3300433061_))))
                                  (let ((_body3300533074_
                                         (reverse _body3300433061_)))
                                    ((lambda (_L33078_
                                              _L33080_
                                              _L33081_
                                              _L33082_)
                                       (if (gx#identifier? _L33081_)
                                           (cons _L33082_
                                                 (cons _L33081_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L33080_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3310333106_ _g3310433109_)
                                            (cons _g3310333106_ _g3310433109_))
                                          '()
                                          _L33078_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3297133011_ _g3297233015_)))
                                     _body3300533074_
                                     _tl3299633045_
                                     _hd3299533042_
                                     _hd3298933022_))))))
                    (_loop3300033054_ _target3299733048_ '()))
                  (_g3297133011_ _g3297233015_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3297133011_ _g3297233015_))
                                            (_g3297133011_ _g3297233015_))))
                                    (_g3297133011_ _g3297233015_))))
                            (_g3297133011_ _g3297233015_))))
                    (_g3297133011_ _g3297233015_))))
             (_g3296933166_
              (lambda (_g3297233116_)
                (if (gx#stx-pair? _g3297233116_)
                    (let ((_e3297533119_ (gx#syntax-e _g3297233116_)))
                      (let ((_hd3297633123_ (##car _e3297533119_))
                            (_tl3297733126_ (##cdr _e3297533119_)))
                        (if (gx#stx-pair? _tl3297733126_)
                            (let ((_e3297833129_ (gx#syntax-e _tl3297733126_)))
                              (let ((_hd3297933133_ (##car _e3297833129_))
                                    (_tl3298033136_ (##cdr _e3297833129_)))
                                (if (gx#stx-pair? _tl3298033136_)
                                    (let ((_e3298133139_
                                           (gx#syntax-e _tl3298033136_)))
                                      (let ((_hd3298233143_
                                             (##car _e3298133139_))
                                            (_tl3298333146_
                                             (##cdr _e3298133139_)))
                                        (if (gx#stx-null? _tl3298333146_)
                                            ((lambda (_L33149_ _L33151_)
                                               (if (gx#identifier? _L33151_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L33151_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L33149_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3297033112_
                                                    _g3297233116_)))
                                             _hd3298233143_
                                             _hd3297933133_)
                                            (_g3297033112_ _g3297233116_))))
                                    (_g3297033112_ _g3297233116_))))
                            (_g3297033112_ _g3297233116_))))
                    (_g3297033112_ _g3297233116_)))))
        (_g3296933166_ _$stx32966_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx33171_)
       (let* ((_g3317433194_
               (lambda (_g3317533190_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3317533190_)))
              (_g3317333265_
               (lambda (_g3317533198_)
                 (if (gx#stx-pair? _g3317533198_)
                     (let ((_e3317733201_ (gx#syntax-e _g3317533198_)))
                       (let ((_hd3317833205_ (##car _e3317733201_))
                             (_tl3317933208_ (##cdr _e3317733201_)))
                         (if (gx#stx-pair/null? _tl3317933208_)
                             (if (fx>= (gx#stx-length _tl3317933208_) '0)
                                 (let ((_g35148_
                                        (gx#syntax-split-splice
                                         _tl3317933208_
                                         '0)))
                                   (begin
                                     (let ((_g35149_ (values-count _g35148_)))
                                       (if (not (fx= _g35149_ 2))
                                           (error "Context expects 2 values"
                                                  _g35149_)))
                                     (let ((_target3318033211_
                                            (values-ref _g35148_ 0))
                                           (_tl3318233214_
                                            (values-ref _g35148_ 1)))
                                       (if (gx#stx-null? _tl3318233214_)
                                           (letrec ((_loop3318333217_
                                                     (lambda (_hd3318133221_
                                                              _body3318733224_)
                                                       (if (gx#stx-pair?
                                                            _hd3318133221_)
                                                           (let ((_e3318433227_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3318133221_)))
                     (let ((_lp-hd3318533231_ (##car _e3318433227_))
                           (_lp-tl3318633234_ (##cdr _e3318433227_)))
                       (_loop3318333217_
                        _lp-tl3318633234_
                        (cons _lp-hd3318533231_ _body3318733224_))))
                   (let ((_body3318833237_ (reverse _body3318733224_)))
                     ((lambda (_L33241_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3325633259_
                                                      _g3325733262_)
                                               (cons _g3325633259_
                                                     _g3325733262_))
                                             '()
                                             _L33241_)))))
                      _body3318833237_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3318333217_
                                              _target3318033211_
                                              '()))
                                           (_g3317433194_ _g3317533198_)))))
                                 (_g3317433194_ _g3317533198_))
                             (_g3317433194_ _g3317533198_))))
                     (_g3317433194_ _g3317533198_)))))
         (_g3317333265_ _stx33171_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33270_)
       (let* ((_g3327333293_
               (lambda (_g3327433289_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3327433289_)))
              (_g3327233364_
               (lambda (_g3327433297_)
                 (if (gx#stx-pair? _g3327433297_)
                     (let ((_e3327633300_ (gx#syntax-e _g3327433297_)))
                       (let ((_hd3327733304_ (##car _e3327633300_))
                             (_tl3327833307_ (##cdr _e3327633300_)))
                         (if (gx#stx-pair/null? _tl3327833307_)
                             (if (fx>= (gx#stx-length _tl3327833307_) '0)
                                 (let ((_g35150_
                                        (gx#syntax-split-splice
                                         _tl3327833307_
                                         '0)))
                                   (begin
                                     (let ((_g35151_ (values-count _g35150_)))
                                       (if (not (fx= _g35151_ 2))
                                           (error "Context expects 2 values"
                                                  _g35151_)))
                                     (let ((_target3327933310_
                                            (values-ref _g35150_ 0))
                                           (_tl3328133313_
                                            (values-ref _g35150_ 1)))
                                       (if (gx#stx-null? _tl3328133313_)
                                           (letrec ((_loop3328233316_
                                                     (lambda (_hd3328033320_
                                                              _body3328633323_)
                                                       (if (gx#stx-pair?
                                                            _hd3328033320_)
                                                           (let ((_e3328333326_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3328033320_)))
                     (let ((_lp-hd3328433330_ (##car _e3328333326_))
                           (_lp-tl3328533333_ (##cdr _e3328333326_)))
                       (_loop3328233316_
                        _lp-tl3328533333_
                        (cons _lp-hd3328433330_ _body3328633323_))))
                   (let ((_body3328733336_ (reverse _body3328633323_)))
                     ((lambda (_L33340_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3335533358_
                                                      _g3335633361_)
                                               (cons _g3335533358_
                                                     _g3335633361_))
                                             '()
                                             _L33340_)))))
                      _body3328733336_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3328233316_
                                              _target3327933310_
                                              '()))
                                           (_g3327333293_ _g3327433297_)))))
                                 (_g3327333293_ _g3327433297_))
                             (_g3327333293_ _g3327433297_))))
                     (_g3327333293_ _g3327433297_)))))
         (_g3327233364_ _stx33270_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33369_)
       (let* ((_g3337233396_
               (lambda (_g3337333392_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3337333392_)))
              (_g3337133518_
               (lambda (_g3337333400_)
                 (if (gx#stx-pair? _g3337333400_)
                     (let ((_e3337633403_ (gx#syntax-e _g3337333400_)))
                       (let ((_hd3337733407_ (##car _e3337633403_))
                             (_tl3337833410_ (##cdr _e3337633403_)))
                         (if (gx#stx-pair? _tl3337833410_)
                             (let ((_e3337933413_
                                    (gx#syntax-e _tl3337833410_)))
                               (let ((_hd3338033417_ (##car _e3337933413_))
                                     (_tl3338133420_ (##cdr _e3337933413_)))
                                 (if (gx#stx-pair/null? _tl3338133420_)
                                     (if (fx>= (gx#stx-length _tl3338133420_)
                                               '0)
                                         (let ((_g35152_
                                                (gx#syntax-split-splice
                                                 _tl3338133420_
                                                 '0)))
                                           (begin
                                             (let ((_g35153_
                                                    (values-count _g35152_)))
                                               (if (not (fx= _g35153_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35153_)))
                                             (let ((_target3338233423_
                                                    (values-ref _g35152_ 0))
                                                   (_tl3338433426_
                                                    (values-ref _g35152_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3338433426_)
                                                   (letrec ((_loop3338533429_
                                                             (lambda (_hd3338333433_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3338933436_)
                       (if (gx#stx-pair? _hd3338333433_)
                           (let ((_e3338633439_ (gx#syntax-e _hd3338333433_)))
                             (let ((_lp-hd3338733443_ (##car _e3338633439_))
                                   (_lp-tl3338833446_ (##cdr _e3338633439_)))
                               (_loop3338533429_
                                _lp-tl3338833446_
                                (cons _lp-hd3338733443_ _id3338933436_))))
                           (let ((_id3339033449_ (reverse _id3338933436_)))
                             ((lambda (_L33453_ _L33455_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3347233475_
                                                       _g3347333478_)
                                                (cons _g3347233475_
                                                      _g3347333478_))
                                              '()
                                              _L33453_)))
                                    (let* ((_keys33489_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3348033483_
                                                               _g3348133486_)
                                                        (cons _g3348033483_
                                                              _g3348133486_))
                                                      '()
                                                      _L33453_))))
                                           (_keytab33500_
                                            (let ((_ht33492_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3349433496_)
                                                   (hash-put!
                                                    _ht33492_
                                                    _g3349433496_
                                                    '#t))
                                                 _keys33489_)
                                                _ht33492_)))
                                           (_imports33503_
                                            (gx#core-expand-import-source
                                             _L33455_))
                                           (_fold-e33513_
                                            (letrec ((_fold-e33506_
                                                      (lambda (_in33509_
                                                               _r33511_)
                                                        (if (gx#module-import?
                                                             _in33509_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33500_
                         (gx#module-import-name _in33509_))
                        (cons _in33509_ _r33511_)
                        _r33511_)
                    (if (gx#import-set? _in33509_)
                        (foldl _fold-e33506_
                               _r33511_
                               (gx#import-set-imports _in33509_))
                        _r33511_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33506_)))
                                      (cons 'begin:
                                            (foldl _fold-e33513_
                                                   '()
                                                   _imports33503_)))
                                    (_g3337233396_ _g3337333400_)))
                              _id3339033449_
                              _hd3338033417_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3338533429_
                                                      _target3338233423_
                                                      '()))
                                                   (_g3337233396_
                                                    _g3337333400_)))))
                                         (_g3337233396_ _g3337333400_))
                                     (_g3337233396_ _g3337333400_))))
                             (_g3337233396_ _g3337333400_))))
                     (_g3337233396_ _g3337333400_)))))
         (_g3337133518_ _stx33369_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33523_)
       (let* ((_g3352633550_
               (lambda (_g3352733546_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3352733546_)))
              (_g3352533672_
               (lambda (_g3352733554_)
                 (if (gx#stx-pair? _g3352733554_)
                     (let ((_e3353033557_ (gx#syntax-e _g3352733554_)))
                       (let ((_hd3353133561_ (##car _e3353033557_))
                             (_tl3353233564_ (##cdr _e3353033557_)))
                         (if (gx#stx-pair? _tl3353233564_)
                             (let ((_e3353333567_
                                    (gx#syntax-e _tl3353233564_)))
                               (let ((_hd3353433571_ (##car _e3353333567_))
                                     (_tl3353533574_ (##cdr _e3353333567_)))
                                 (if (gx#stx-pair/null? _tl3353533574_)
                                     (if (fx>= (gx#stx-length _tl3353533574_)
                                               '0)
                                         (let ((_g35154_
                                                (gx#syntax-split-splice
                                                 _tl3353533574_
                                                 '0)))
                                           (begin
                                             (let ((_g35155_
                                                    (values-count _g35154_)))
                                               (if (not (fx= _g35155_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35155_)))
                                             (let ((_target3353633577_
                                                    (values-ref _g35154_ 0))
                                                   (_tl3353833580_
                                                    (values-ref _g35154_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3353833580_)
                                                   (letrec ((_loop3353933583_
                                                             (lambda (_hd3353733587_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3354333590_)
                       (if (gx#stx-pair? _hd3353733587_)
                           (let ((_e3354033593_ (gx#syntax-e _hd3353733587_)))
                             (let ((_lp-hd3354133597_ (##car _e3354033593_))
                                   (_lp-tl3354233600_ (##cdr _e3354033593_)))
                               (_loop3353933583_
                                _lp-tl3354233600_
                                (cons _lp-hd3354133597_ _id3354333590_))))
                           (let ((_id3354433603_ (reverse _id3354333590_)))
                             ((lambda (_L33607_ _L33609_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3362633629_
                                                       _g3362733632_)
                                                (cons _g3362633629_
                                                      _g3362733632_))
                                              '()
                                              _L33607_)))
                                    (let* ((_keys33643_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3363433637_
                                                               _g3363533640_)
                                                        (cons _g3363433637_
                                                              _g3363533640_))
                                                      '()
                                                      _L33607_))))
                                           (_keytab33654_
                                            (let ((_ht33646_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3364833650_)
                                                   (hash-put!
                                                    _ht33646_
                                                    _g3364833650_
                                                    '#t))
                                                 _keys33643_)
                                                _ht33646_)))
                                           (_imports33657_
                                            (gx#core-expand-import-source
                                             _L33609_))
                                           (_fold-e33667_
                                            (letrec ((_fold-e33660_
                                                      (lambda (_in33663_
                                                               _r33665_)
                                                        (if (gx#module-import?
                                                             _in33663_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33654_
                         (gx#module-import-name _in33663_))
                        _r33665_
                        (cons _in33663_ _r33665_))
                    (if (gx#import-set? _in33663_)
                        (foldl _fold-e33660_
                               _r33665_
                               (gx#import-set-imports _in33663_))
                        (cons _in33663_ _r33665_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33660_)))
                                      (cons 'begin:
                                            (foldl _fold-e33667_
                                                   '()
                                                   _imports33657_)))
                                    (_g3352633550_ _g3352733554_)))
                              _id3354433603_
                              _hd3353433571_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3353933583_
                                                      _target3353633577_
                                                      '()))
                                                   (_g3352633550_
                                                    _g3352733554_)))))
                                         (_g3352633550_ _g3352733554_))
                                     (_g3352633550_ _g3352733554_))))
                             (_g3352633550_ _g3352733554_))))
                     (_g3352633550_ _g3352733554_)))))
         (_g3352533672_ _stx33523_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in33724_ _rename33726_)
      (gx#make-module-import
       (gx#module-import-source _in33724_)
       _rename33726_
       (gx#module-import-phi _in33724_)
       (gx#module-import-weak? _in33724_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name33677_ _pre33679_)
      (let* ((_name3368033688_ _name33677_)
             (_E3368333694_
              (lambda () (error '"No clause matching" _name3368033688_)))
             (_else3368233700_
              (lambda () (make-symbol _pre33679_ _name33677_)))
             (_K3368433708_
              (lambda (_mark33704_ _id33706_)
                (cons (make-symbol _pre33679_ _id33706_) _mark33704_))))
        (if (##pair? _name3368033688_)
            (let ((_hd3368533712_ (##car _name3368033688_))
                  (_tl3368633715_ (##cdr _name3368033688_)))
              (let* ((_id33718_ _hd3368533712_) (_mark33721_ _tl3368633715_))
                (_K3368433708_ _mark33721_ _id33718_)))
            (_else3368233700_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx33728_)
       (let* ((_g3373133764_
               (lambda (_g3373233760_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3373233760_)))
              (_g3373033950_
               (lambda (_g3373233768_)
                 (if (gx#stx-pair? _g3373233768_)
                     (let ((_e3373633771_ (gx#syntax-e _g3373233768_)))
                       (let ((_hd3373733775_ (##car _e3373633771_))
                             (_tl3373833778_ (##cdr _e3373633771_)))
                         (if (gx#stx-pair? _tl3373833778_)
                             (let ((_e3373933781_
                                    (gx#syntax-e _tl3373833778_)))
                               (let ((_hd3374033785_ (##car _e3373933781_))
                                     (_tl3374133788_ (##cdr _e3373933781_)))
                                 (if (gx#stx-pair/null? _tl3374133788_)
                                     (if (fx>= (gx#stx-length _tl3374133788_)
                                               '0)
                                         (let ((_g35156_
                                                (gx#syntax-split-splice
                                                 _tl3374133788_
                                                 '0)))
                                           (begin
                                             (let ((_g35157_
                                                    (values-count _g35156_)))
                                               (if (not (fx= _g35157_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35157_)))
                                             (let ((_target3374233791_
                                                    (values-ref _g35156_ 0))
                                                   (_tl3374433794_
                                                    (values-ref _g35156_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3374433794_)
                                                   (letrec ((_loop3374533797_
                                                             (lambda (_hd3374333801_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3374933804_
                              _id3375033806_)
                       (if (gx#stx-pair? _hd3374333801_)
                           (let ((_e3374633809_ (gx#syntax-e _hd3374333801_)))
                             (let ((_lp-hd3374733813_ (##car _e3374633809_))
                                   (_lp-tl3374833816_ (##cdr _e3374633809_)))
                               (if (gx#stx-pair? _lp-hd3374733813_)
                                   (let ((_e3375333819_
                                          (gx#syntax-e _lp-hd3374733813_)))
                                     (let ((_hd3375433823_
                                            (##car _e3375333819_))
                                           (_tl3375533826_
                                            (##cdr _e3375333819_)))
                                       (if (gx#stx-pair? _tl3375533826_)
                                           (let ((_e3375633829_
                                                  (gx#syntax-e
                                                   _tl3375533826_)))
                                             (let ((_hd3375733833_
                                                    (##car _e3375633829_))
                                                   (_tl3375833836_
                                                    (##cdr _e3375633829_)))
                                               (if (gx#stx-null?
                                                    _tl3375833836_)
                                                   (_loop3374533797_
                                                    _lp-tl3374833816_
                                                    (cons _hd3375733833_
                                                          _new-id3374933804_)
                                                    (cons _hd3375433823_
                                                          _id3375033806_))
                                                   (_g3373133764_
                                                    _g3373233768_))))
                                           (_g3373133764_ _g3373233768_))))
                                   (_g3373133764_ _g3373233768_))))
                           (let ((_new-id3375133839_
                                  (reverse _new-id3374933804_))
                                 (_id3375233842_ (reverse _id3375033806_)))
                             ((lambda (_L33845_ _L33847_ _L33848_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3386633869_
                                                           _g3386733872_)
                                                    (cons _g3386633869_
                                                          _g3386733872_))
                                                  '()
                                                  _L33847_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3387433877_
                                                           _g3387533880_)
                                                    (cons _g3387433877_
                                                          _g3387533880_))
                                                  '()
                                                  _L33845_)))
                                        '#f)
                                    (let* ((_keytab33883_ (make-hash-table))
                                           (_found33886_ (make-hash-table))
                                           (_g35158_
                                            (for-each
                                             (lambda (_id33889_ _new-id33891_)
                                               (hash-put!
                                                _keytab33883_
                                                (gx#core-identifier-key
                                                 _id33889_)
                                                (gx#core-identifier-key
                                                 _new-id33891_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3389233895_
                                                               _g3389333898_)
                                                        (cons _g3389233895_
                                                              _g3389333898_))
                                                      '()
                                                      _L33847_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3390033903_
                                                               _g3390133906_)
                                                        (cons _g3390033903_
                                                              _g3390133906_))
                                                      '()
                                                      _L33845_))))
                                           (_imports33911_
                                            (gx#core-expand-import-source
                                             _L33848_))
                                           (_fold-e33931_
                                            (letrec ((_fold-e33914_
                                                      (lambda (_in33917_
                                                               _r33919_)
                                                        (if (gx#module-import?
                                                             _in33917_)
                                                            (let* ((_name33921_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in33917_))
                           (_$e33924_ (hash-get _keytab33883_ _name33921_)))
                      (if _$e33924_
                          ((lambda (_rename33928_)
                             (begin
                               (hash-put! _found33886_ _name33921_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in33917_
                                      _rename33928_)
                                     _r33919_)))
                           _$e33924_)
                          (cons _in33917_ _r33919_)))
                    (if (gx#import-set? _in33917_)
                        (foldl _fold-e33914_
                               _r33919_
                               (gx#import-set-imports _in33917_))
                        (cons _in33917_ _r33919_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33914_))
                                           (_new-imports33934_
                                            (foldl _fold-e33931_
                                                   '()
                                                   _imports33911_)))
                                      (begin
                                        (for-each
                                         (lambda (_id33939_)
                                           (if (hash-get
                                                _found33886_
                                                (gx#core-identifier-key
                                                 _id33939_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx33728_
                                                _id33939_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3394133944_
                                                           _g3394233947_)
                                                    (cons _g3394133944_
                                                          _g3394233947_))
                                                  '()
                                                  _L33847_)))
                                        (cons 'begin: _new-imports33934_)))
                                    (_g3373133764_ _g3373233768_)))
                              _new-id3375133839_
                              _id3375233842_
                              _hd3374033785_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3374533797_
                                                      _target3374233791_
                                                      '()
                                                      '()))
                                                   (_g3373133764_
                                                    _g3373233768_)))))
                                         (_g3373133764_ _g3373233768_))
                                     (_g3373133764_ _g3373233768_))))
                             (_g3373133764_ _g3373233768_))))
                     (_g3373133764_ _g3373233768_)))))
         (_g3373033950_ _stx33728_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx33956_)
       (let* ((_g3395933977_
               (lambda (_g3396033973_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3396033973_)))
              (_g3395834056_
               (lambda (_g3396033981_)
                 (if (gx#stx-pair? _g3396033981_)
                     (let ((_e3396333984_ (gx#syntax-e _g3396033981_)))
                       (let ((_hd3396433988_ (##car _e3396333984_))
                             (_tl3396533991_ (##cdr _e3396333984_)))
                         (if (gx#stx-pair? _tl3396533991_)
                             (let ((_e3396633994_
                                    (gx#syntax-e _tl3396533991_)))
                               (let ((_hd3396733998_ (##car _e3396633994_))
                                     (_tl3396834001_ (##cdr _e3396633994_)))
                                 (if (gx#stx-pair? _tl3396834001_)
                                     (let ((_e3396934004_
                                            (gx#syntax-e _tl3396834001_)))
                                       (let ((_hd3397034008_
                                              (##car _e3396934004_))
                                             (_tl3397134011_
                                              (##cdr _e3396934004_)))
                                         (if (gx#stx-null? _tl3397134011_)
                                             ((lambda (_L34014_ _L34016_)
                                                (if (gx#identifier? _L34014_)
                                                    (let* ((_pre34032_
                                                            (gx#stx-e
                                                             _L34014_))
                                                           (_imports34035_
                                                            (gx#core-expand-import-source
                                                             _L34016_))
                                                           (_rename-e34041_
                                                            (lambda (_name34038_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34038_
                                                               _pre34032_)))
                                                           (_fold-e34051_
                                                            (letrec ((_fold-e34044_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in34047_ _r34049_)
                                (if (gx#module-import? _in34047_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in34047_
                                           (_rename-e34041_
                                            (gx#module-import-name _in34047_)))
                                          _r34049_)
                                    (if (gx#import-set? _in34047_)
                                        (foldl _fold-e34044_
                                               _r34049_
                                               (gx#import-set-imports
                                                _in34047_))
                                        (cons _in34047_ _r34049_))))))
                      _fold-e34044_)))
              (cons 'begin: (foldl _fold-e34051_ '() _imports34035_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3395933977_
                                                     _g3396033981_)))
                                              _hd3397034008_
                                              _hd3396733998_)
                                             (_g3395933977_ _g3396033981_))))
                                     (_g3395933977_ _g3396033981_))))
                             (_g3395933977_ _g3396033981_))))
                     (_g3395933977_ _g3396033981_)))))
         (_g3395834056_ _stx33956_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx34060_)
       (let* ((_g3406334087_
               (lambda (_g3406434083_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3406434083_)))
              (_g3406234209_
               (lambda (_g3406434091_)
                 (if (gx#stx-pair? _g3406434091_)
                     (let ((_e3406734094_ (gx#syntax-e _g3406434091_)))
                       (let ((_hd3406834098_ (##car _e3406734094_))
                             (_tl3406934101_ (##cdr _e3406734094_)))
                         (if (gx#stx-pair? _tl3406934101_)
                             (let ((_e3407034104_
                                    (gx#syntax-e _tl3406934101_)))
                               (let ((_hd3407134108_ (##car _e3407034104_))
                                     (_tl3407234111_ (##cdr _e3407034104_)))
                                 (if (gx#stx-pair/null? _tl3407234111_)
                                     (if (fx>= (gx#stx-length _tl3407234111_)
                                               '0)
                                         (let ((_g35159_
                                                (gx#syntax-split-splice
                                                 _tl3407234111_
                                                 '0)))
                                           (begin
                                             (let ((_g35160_
                                                    (values-count _g35159_)))
                                               (if (not (fx= _g35160_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35160_)))
                                             (let ((_target3407334114_
                                                    (values-ref _g35159_ 0))
                                                   (_tl3407534117_
                                                    (values-ref _g35159_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3407534117_)
                                                   (letrec ((_loop3407634120_
                                                             (lambda (_hd3407434124_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3408034127_)
                       (if (gx#stx-pair? _hd3407434124_)
                           (let ((_e3407734130_ (gx#syntax-e _hd3407434124_)))
                             (let ((_lp-hd3407834134_ (##car _e3407734130_))
                                   (_lp-tl3407934137_ (##cdr _e3407734130_)))
                               (_loop3407634120_
                                _lp-tl3407934137_
                                (cons _lp-hd3407834134_ _id3408034127_))))
                           (let ((_id3408134140_ (reverse _id3408034127_)))
                             ((lambda (_L34144_ _L34146_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3416334166_
                                                       _g3416434169_)
                                                (cons _g3416334166_
                                                      _g3416434169_))
                                              '()
                                              _L34144_)))
                                    (let* ((_keys34180_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3417134174_
                                                               _g3417234177_)
                                                        (cons _g3417134174_
                                                              _g3417234177_))
                                                      '()
                                                      _L34144_))))
                                           (_keytab34191_
                                            (let ((_ht34183_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3418534187_)
                                                   (hash-put!
                                                    _ht34183_
                                                    _g3418534187_
                                                    '#t))
                                                 _keys34180_)
                                                _ht34183_)))
                                           (_exports34194_
                                            (gx#core-expand-export-source
                                             _L34146_))
                                           (_fold-e34204_
                                            (letrec ((_fold-e34197_
                                                      (lambda (_out34200_
                                                               _r34202_)
                                                        (if (gx#module-export?
                                                             _out34200_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab34191_
                         (gx#module-export-name _out34200_))
                        _r34202_
                        (cons _out34200_ _r34202_))
                    (if (gx#export-set? _out34200_)
                        (foldl _fold-e34197_
                               _r34202_
                               (gx#export-set-exports _out34200_))
                        _r34202_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34197_)))
                                      (cons 'begin:
                                            (foldl _fold-e34204_
                                                   '()
                                                   _exports34194_)))
                                    (_g3406334087_ _g3406434091_)))
                              _id3408134140_
                              _hd3407134108_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3407634120_
                                                      _target3407334114_
                                                      '()))
                                                   (_g3406334087_
                                                    _g3406434091_)))))
                                         (_g3406334087_ _g3406434091_))
                                     (_g3406334087_ _g3406434091_))))
                             (_g3406334087_ _g3406434091_))))
                     (_g3406334087_ _g3406434091_)))))
         (_g3406234209_ _stx34060_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34214_ _rename34216_)
      (gx#make-module-export
       (gx#module-export-context _out34214_)
       (gx#module-export-key _out34214_)
       (gx#module-export-phi _out34214_)
       _rename34216_
       (gx#module-export-weak? _out34214_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34218_)
       (let* ((_g3422134254_
               (lambda (_g3422234250_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3422234250_)))
              (_g3422034440_
               (lambda (_g3422234258_)
                 (if (gx#stx-pair? _g3422234258_)
                     (let ((_e3422634261_ (gx#syntax-e _g3422234258_)))
                       (let ((_hd3422734265_ (##car _e3422634261_))
                             (_tl3422834268_ (##cdr _e3422634261_)))
                         (if (gx#stx-pair? _tl3422834268_)
                             (let ((_e3422934271_
                                    (gx#syntax-e _tl3422834268_)))
                               (let ((_hd3423034275_ (##car _e3422934271_))
                                     (_tl3423134278_ (##cdr _e3422934271_)))
                                 (if (gx#stx-pair/null? _tl3423134278_)
                                     (if (fx>= (gx#stx-length _tl3423134278_)
                                               '0)
                                         (let ((_g35161_
                                                (gx#syntax-split-splice
                                                 _tl3423134278_
                                                 '0)))
                                           (begin
                                             (let ((_g35162_
                                                    (values-count _g35161_)))
                                               (if (not (fx= _g35162_ 2))
                                                   (error "Context expects 2 values"
                                                          _g35162_)))
                                             (let ((_target3423234281_
                                                    (values-ref _g35161_ 0))
                                                   (_tl3423434284_
                                                    (values-ref _g35161_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3423434284_)
                                                   (letrec ((_loop3423534287_
                                                             (lambda (_hd3423334291_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3423934294_
                              _id3424034296_)
                       (if (gx#stx-pair? _hd3423334291_)
                           (let ((_e3423634299_ (gx#syntax-e _hd3423334291_)))
                             (let ((_lp-hd3423734303_ (##car _e3423634299_))
                                   (_lp-tl3423834306_ (##cdr _e3423634299_)))
                               (if (gx#stx-pair? _lp-hd3423734303_)
                                   (let ((_e3424334309_
                                          (gx#syntax-e _lp-hd3423734303_)))
                                     (let ((_hd3424434313_
                                            (##car _e3424334309_))
                                           (_tl3424534316_
                                            (##cdr _e3424334309_)))
                                       (if (gx#stx-pair? _tl3424534316_)
                                           (let ((_e3424634319_
                                                  (gx#syntax-e
                                                   _tl3424534316_)))
                                             (let ((_hd3424734323_
                                                    (##car _e3424634319_))
                                                   (_tl3424834326_
                                                    (##cdr _e3424634319_)))
                                               (if (gx#stx-null?
                                                    _tl3424834326_)
                                                   (_loop3423534287_
                                                    _lp-tl3423834306_
                                                    (cons _hd3424734323_
                                                          _new-id3423934294_)
                                                    (cons _hd3424434313_
                                                          _id3424034296_))
                                                   (_g3422134254_
                                                    _g3422234258_))))
                                           (_g3422134254_ _g3422234258_))))
                                   (_g3422134254_ _g3422234258_))))
                           (let ((_new-id3424134329_
                                  (reverse _new-id3423934294_))
                                 (_id3424234332_ (reverse _id3424034296_)))
                             ((lambda (_L34335_ _L34337_ _L34338_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3435634359_
                                                           _g3435734362_)
                                                    (cons _g3435634359_
                                                          _g3435734362_))
                                                  '()
                                                  _L34337_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3436434367_
                                                           _g3436534370_)
                                                    (cons _g3436434367_
                                                          _g3436534370_))
                                                  '()
                                                  _L34335_)))
                                        '#f)
                                    (let* ((_keytab34373_ (make-hash-table))
                                           (_found34376_ (make-hash-table))
                                           (_g35163_
                                            (for-each
                                             (lambda (_id34379_ _new-id34381_)
                                               (hash-put!
                                                _keytab34373_
                                                (gx#core-identifier-key
                                                 _id34379_)
                                                (gx#core-identifier-key
                                                 _new-id34381_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3438234385_
                                                               _g3438334388_)
                                                        (cons _g3438234385_
                                                              _g3438334388_))
                                                      '()
                                                      _L34337_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3439034393_
                                                               _g3439134396_)
                                                        (cons _g3439034393_
                                                              _g3439134396_))
                                                      '()
                                                      _L34335_))))
                                           (_exports34401_
                                            (gx#core-expand-export-source
                                             _L34338_))
                                           (_fold-e34421_
                                            (letrec ((_fold-e34404_
                                                      (lambda (_out34407_
                                                               _r34409_)
                                                        (if (gx#module-export?
                                                             _out34407_)
                                                            (let* ((_name34411_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34407_))
                           (_$e34414_ (hash-get _keytab34373_ _name34411_)))
                      (if _$e34414_
                          ((lambda (_rename34418_)
                             (begin
                               (hash-put! _found34376_ _name34411_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34407_
                                      _rename34418_)
                                     _r34409_)))
                           _$e34414_)
                          (cons _out34407_ _r34409_)))
                    (if (gx#export-set? _out34407_)
                        (foldl _fold-e34404_
                               _r34409_
                               (gx#export-set-exports _out34407_))
                        (cons _out34407_ _r34409_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34404_))
                                           (_new-exports34424_
                                            (foldl _fold-e34421_
                                                   '()
                                                   _exports34401_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34429_)
                                           (if (hash-get
                                                _found34376_
                                                (gx#core-identifier-key
                                                 _id34429_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34218_
                                                _id34429_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3443134434_
                                                           _g3443234437_)
                                                    (cons _g3443134434_
                                                          _g3443234437_))
                                                  '()
                                                  _L34337_)))
                                        (cons 'begin: _new-exports34424_)))
                                    (_g3422134254_ _g3422234258_)))
                              _new-id3424134329_
                              _id3424234332_
                              _hd3423034275_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3423534287_
                                                      _target3423234281_
                                                      '()
                                                      '()))
                                                   (_g3422134254_
                                                    _g3422234258_)))))
                                         (_g3422134254_ _g3422234258_))
                                     (_g3422134254_ _g3422234258_))))
                             (_g3422134254_ _g3422234258_))))
                     (_g3422134254_ _g3422234258_)))))
         (_g3422034440_ _stx34218_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34446_)
       (let* ((_g3444934467_
               (lambda (_g3445034463_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3445034463_)))
              (_g3444834546_
               (lambda (_g3445034471_)
                 (if (gx#stx-pair? _g3445034471_)
                     (let ((_e3445334474_ (gx#syntax-e _g3445034471_)))
                       (let ((_hd3445434478_ (##car _e3445334474_))
                             (_tl3445534481_ (##cdr _e3445334474_)))
                         (if (gx#stx-pair? _tl3445534481_)
                             (let ((_e3445634484_
                                    (gx#syntax-e _tl3445534481_)))
                               (let ((_hd3445734488_ (##car _e3445634484_))
                                     (_tl3445834491_ (##cdr _e3445634484_)))
                                 (if (gx#stx-pair? _tl3445834491_)
                                     (let ((_e3445934494_
                                            (gx#syntax-e _tl3445834491_)))
                                       (let ((_hd3446034498_
                                              (##car _e3445934494_))
                                             (_tl3446134501_
                                              (##cdr _e3445934494_)))
                                         (if (gx#stx-null? _tl3446134501_)
                                             ((lambda (_L34504_ _L34506_)
                                                (if (gx#identifier? _L34504_)
                                                    (let* ((_pre34522_
                                                            (gx#stx-e
                                                             _L34504_))
                                                           (_exports34525_
                                                            (gx#core-expand-export-source
                                                             _L34506_))
                                                           (_rename-e34531_
                                                            (lambda (_name34528_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34528_
                                                               _pre34522_)))
                                                           (_fold-e34541_
                                                            (letrec ((_fold-e34534_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34537_ _r34539_)
                                (if (gx#module-export? _out34537_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34537_
                                           (_rename-e34531_
                                            (gx#module-export-name
                                             _out34537_)))
                                          _r34539_)
                                    (if (gx#export-set? _out34537_)
                                        (foldl _fold-e34534_
                                               _r34539_
                                               (gx#export-set-exports
                                                _out34537_))
                                        (cons _out34537_ _r34539_))))))
                      _fold-e34534_)))
              (cons 'begin: (foldl _fold-e34541_ '() _exports34525_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3444934467_
                                                     _g3445034471_)))
                                              _hd3446034498_
                                              _hd3445734488_)
                                             (_g3444934467_ _g3445034471_))))
                                     (_g3444934467_ _g3445034471_))))
                             (_g3444934467_ _g3445034471_))))
                     (_g3444934467_ _g3445034471_)))))
         (_g3444834546_ _stx34446_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34550_)
       (let* ((_g3455334573_
               (lambda (_g3455434569_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3455434569_)))
              (_g3455234808_
               (lambda (_g3455434577_)
                 (if (gx#stx-pair? _g3455434577_)
                     (let ((_e3455634580_ (gx#syntax-e _g3455434577_)))
                       (let ((_hd3455734584_ (##car _e3455634580_))
                             (_tl3455834587_ (##cdr _e3455634580_)))
                         (if (gx#stx-pair/null? _tl3455834587_)
                             (if (fx>= (gx#stx-length _tl3455834587_) '0)
                                 (let ((_g35164_
                                        (gx#syntax-split-splice
                                         _tl3455834587_
                                         '0)))
                                   (begin
                                     (let ((_g35165_ (values-count _g35164_)))
                                       (if (not (fx= _g35165_ 2))
                                           (error "Context expects 2 values"
                                                  _g35165_)))
                                     (let ((_target3455934590_
                                            (values-ref _g35164_ 0))
                                           (_tl3456134593_
                                            (values-ref _g35164_ 1)))
                                       (if (gx#stx-null? _tl3456134593_)
                                           (letrec ((_loop3456234596_
                                                     (lambda (_hd3456034600_
                                                              _id3456634603_)
                                                       (if (gx#stx-pair?
                                                            _hd3456034600_)
                                                           (let ((_e3456334606_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3456034600_)))
                     (let ((_lp-hd3456434610_ (##car _e3456334606_))
                           (_lp-tl3456534613_ (##cdr _e3456334606_)))
                       (_loop3456234596_
                        _lp-tl3456534613_
                        (cons _lp-hd3456434610_ _id3456634603_))))
                   (let ((_id3456734616_ (reverse _id3456634603_)))
                     ((lambda (_L34620_)
                        (let _lp34636_ ((_rest34639_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3479934802_
                                                           _g3480034805_)
                                                    (cons _g3479934802_
                                                          _g3480034805_))
                                                  '()
                                                  _L34620_)))
                                        (_ids34641_ '()))
                          (let* ((_g3464434656_
                                  (lambda (_g3464534652_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3464534652_)))
                                 (_g3464334667_
                                  (lambda (_g3464534660_)
                                    ((lambda () (cons 'begin: _ids34641_)))))
                                 (_g3464234796_
                                  (lambda (_g3464534671_)
                                    (if (gx#stx-pair? _g3464534671_)
                                        (let ((_e3464834674_
                                               (gx#syntax-e _g3464534671_)))
                                          (let ((_hd3464934678_
                                                 (##car _e3464834674_))
                                                (_tl3465034681_
                                                 (##cdr _e3464834674_)))
                                            ((lambda (_L34684_ _L34686_)
                                               (let ((_info34701_
                                                      (gx#syntax-local-value
                                                       _L34686_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info34701_)
                                                     (let* ((_g3470334720_
                                                             (slot-ref
                                                              _info34701_
                                                              'expander-identifiers))
                                                            (_E3470534726_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3470334720_)))
                    (_K3470634738_
                     (lambda (_setf34730_
                              _getf34732_
                              _type?34733_
                              _make-type34734_
                              _type::t34735_
                              _super34736_)
                       (_lp34636_
                        _L34684_
                        (cons _L34686_
                              (cons _type::t34735_
                                    (cons _make-type34734_
                                          (cons _type?34733_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids34641_
                                                              _setf34730_)
                                                       _getf34732_)))))))))
               (if (##pair? _g3470334720_)
                   (let ((_hd3470734742_ (##car _g3470334720_))
                         (_tl3470834745_ (##cdr _g3470334720_)))
                     (let ((_super34748_ _hd3470734742_))
                       (if (##pair? _tl3470834745_)
                           (let ((_hd3470934751_ (##car _tl3470834745_))
                                 (_tl3471034754_ (##cdr _tl3470834745_)))
                             (let ((_type::t34757_ _hd3470934751_))
                               (if (##pair? _tl3471034754_)
                                   (let ((_hd3471134760_
                                          (##car _tl3471034754_))
                                         (_tl3471234763_
                                          (##cdr _tl3471034754_)))
                                     (let ((_make-type34766_ _hd3471134760_))
                                       (if (##pair? _tl3471234763_)
                                           (let ((_hd3471334769_
                                                  (##car _tl3471234763_))
                                                 (_tl3471434772_
                                                  (##cdr _tl3471234763_)))
                                             (let ((_type?34775_
                                                    _hd3471334769_))
                                               (if (##pair? _tl3471434772_)
                                                   (let ((_hd3471534778_
                                                          (##car _tl3471434772_))
                                                         (_tl3471634781_
                                                          (##cdr _tl3471434772_)))
                                                     (let ((_getf34784_
                                                            _hd3471534778_))
                                                       (if (##pair? _tl3471634781_)
                                                           (let ((_hd3471734787_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3471634781_))
                         (_tl3471834790_ (##cdr _tl3471634781_)))
                     (let ((_setf34793_ _hd3471734787_))
                       (if (##null? _tl3471834790_)
                           (_K3470634738_
                            _setf34793_
                            _getf34784_
                            _type?34775_
                            _make-type34766_
                            _type::t34757_
                            _super34748_)
                           (_E3470534726_))))
                   (_E3470534726_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3470534726_))))
                                           (_E3470534726_))))
                                   (_E3470534726_))))
                           (_E3470534726_))))
                   (_E3470534726_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34550_
                                                      _L34686_))))
                                             _tl3465034681_
                                             _hd3464934678_)))
                                        (_g3464334667_ _g3464534671_)))))
                            (_g3464234796_ _rest34639_))))
                      _id3456734616_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3456234596_
                                              _target3455934590_
                                              '()))
                                           (_g3455334573_ _g3455434577_)))))
                                 (_g3455334573_ _g3455434577_))
                             (_g3455334573_ _g3455434577_))))
                     (_g3455334573_ _g3455434577_)))))
         (_g3455234808_ _stx34550_))))))
