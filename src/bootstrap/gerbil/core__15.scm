(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx29165_)
      (let* ((_g2917029189_
              (lambda (_g2917129185_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2917129185_)))
             (_g2916929235_
              (lambda (_g2917129193_)
                (if (gx#stx-pair? _g2917129193_)
                    (let ((_e2917829196_ (gx#syntax-e _g2917129193_)))
                      (let ((_hd2917929200_ (##car _e2917829196_))
                            (_tl2918029203_ (##cdr _e2917829196_)))
                        (if (gx#stx-pair? _tl2918029203_)
                            (let ((_e2918129206_ (gx#syntax-e _tl2918029203_)))
                              (let ((_hd2918229210_ (##car _e2918129206_))
                                    (_tl2918329213_ (##cdr _e2918129206_)))
                                ((lambda (_L29216_ _L29218_ _L29219_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L29218_
                                                     (cons (cons _L29219_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L29216_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L29218_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl2918329213_
                                 _hd2918229210_
                                 _hd2917929200_)))
                            (_g2917029189_ _g2917129193_))))
                    (_g2917029189_ _g2917129193_))))
             (_g2916829256_
              (lambda (_g2917129239_)
                (if (gx#stx-pair? _g2917129239_)
                    (let ((_e2917229242_ (gx#syntax-e _g2917129239_)))
                      (let ((_hd2917329246_ (##car _e2917229242_))
                            (_tl2917429249_ (##cdr _e2917229242_)))
                        (if (gx#stx-null? _tl2917429249_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g2916929235_ _g2917129239_))))
                    (_g2916929235_ _g2917129239_)))))
        (_g2916829256_ _$stx29165_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx29260_)
      (let* ((_g2926529305_
              (lambda (_g2926629301_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2926629301_)))
             (_g2926429406_
              (lambda (_g2926629309_)
                (if (gx#stx-pair? _g2926629309_)
                    (let ((_e2928229312_ (gx#syntax-e _g2926629309_)))
                      (let ((_hd2928329316_ (##car _e2928229312_))
                            (_tl2928429319_ (##cdr _e2928229312_)))
                        (if (gx#stx-pair? _tl2928429319_)
                            (let ((_e2928529322_ (gx#syntax-e _tl2928429319_)))
                              (let ((_hd2928629326_ (##car _e2928529322_))
                                    (_tl2928729329_ (##cdr _e2928529322_)))
                                (if (gx#stx-pair? _hd2928629326_)
                                    (let ((_e2928829332_
                                           (gx#syntax-e _hd2928629326_)))
                                      (let ((_hd2928929336_
                                             (##car _e2928829332_))
                                            (_tl2929029339_
                                             (##cdr _e2928829332_)))
                                        (if (gx#stx-pair/null? _tl2928729329_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2928729329_)
                                                      '0)
                                                (let ((_g31811_
                                                       (gx#syntax-split-splice
                                                        _tl2928729329_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31812_
                                                           (values-count
                                                            _g31811_)))
                                                      (if (not (fx= _g31812_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31812_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2929129342_
                                                           (values-ref
                                                            _g31811_
                                                            0))
                                                          (_tl2929329345_
                                                           (values-ref
                                                            _g31811_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2929329345_)
                                                          (letrec ((_loop2929429348_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2929229352_ _body2929829355_)
                              (if (gx#stx-pair? _hd2929229352_)
                                  (let ((_e2929529358_
                                         (gx#syntax-e _hd2929229352_)))
                                    (let ((_lp-hd2929629362_
                                           (##car _e2929529358_))
                                          (_lp-tl2929729365_
                                           (##cdr _e2929529358_)))
                                      (_loop2929429348_
                                       _lp-tl2929729365_
                                       (cons _lp-hd2929629362_
                                             _body2929829355_))))
                                  (let ((_body2929929368_
                                         (reverse _body2929829355_)))
                                    ((lambda (_L29372_
                                              _L29374_
                                              _L29375_
                                              _L29376_)
                                       (if (gx#identifier? _L29375_)
                                           (cons _L29376_
                                                 (cons _L29375_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29374_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2939729400_ _g2939829403_)
                                            (cons _g2939729400_ _g2939829403_))
                                          '()
                                          _L29372_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2926529305_ _g2926629309_)))
                                     _body2929929368_
                                     _tl2929029339_
                                     _hd2928929336_
                                     _hd2928329316_))))))
                    (_loop2929429348_ _target2929129342_ '()))
                  (_g2926529305_ _g2926629309_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2926529305_ _g2926629309_))
                                            (_g2926529305_ _g2926629309_))))
                                    (_g2926529305_ _g2926629309_))))
                            (_g2926529305_ _g2926629309_))))
                    (_g2926529305_ _g2926629309_))))
             (_g2926329460_
              (lambda (_g2926629410_)
                (if (gx#stx-pair? _g2926629410_)
                    (let ((_e2926929413_ (gx#syntax-e _g2926629410_)))
                      (let ((_hd2927029417_ (##car _e2926929413_))
                            (_tl2927129420_ (##cdr _e2926929413_)))
                        (if (gx#stx-pair? _tl2927129420_)
                            (let ((_e2927229423_ (gx#syntax-e _tl2927129420_)))
                              (let ((_hd2927329427_ (##car _e2927229423_))
                                    (_tl2927429430_ (##cdr _e2927229423_)))
                                (if (gx#stx-pair? _tl2927429430_)
                                    (let ((_e2927529433_
                                           (gx#syntax-e _tl2927429430_)))
                                      (let ((_hd2927629437_
                                             (##car _e2927529433_))
                                            (_tl2927729440_
                                             (##cdr _e2927529433_)))
                                        (if (gx#stx-null? _tl2927729440_)
                                            ((lambda (_L29443_ _L29445_)
                                               (if (gx#identifier? _L29445_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29445_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L29443_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2926429406_
                                                    _g2926629410_)))
                                             _hd2927629437_
                                             _hd2927329427_)
                                            (_g2926429406_ _g2926629410_))))
                                    (_g2926429406_ _g2926629410_))))
                            (_g2926429406_ _g2926629410_))))
                    (_g2926429406_ _g2926629410_)))))
        (_g2926329460_ _$stx29260_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx29465_)
      (let* ((_g2947029510_
              (lambda (_g2947129506_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2947129506_)))
             (_g2946929611_
              (lambda (_g2947129514_)
                (if (gx#stx-pair? _g2947129514_)
                    (let ((_e2948729517_ (gx#syntax-e _g2947129514_)))
                      (let ((_hd2948829521_ (##car _e2948729517_))
                            (_tl2948929524_ (##cdr _e2948729517_)))
                        (if (gx#stx-pair? _tl2948929524_)
                            (let ((_e2949029527_ (gx#syntax-e _tl2948929524_)))
                              (let ((_hd2949129531_ (##car _e2949029527_))
                                    (_tl2949229534_ (##cdr _e2949029527_)))
                                (if (gx#stx-pair? _hd2949129531_)
                                    (let ((_e2949329537_
                                           (gx#syntax-e _hd2949129531_)))
                                      (let ((_hd2949429541_
                                             (##car _e2949329537_))
                                            (_tl2949529544_
                                             (##cdr _e2949329537_)))
                                        (if (gx#stx-pair/null? _tl2949229534_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2949229534_)
                                                      '0)
                                                (let ((_g31813_
                                                       (gx#syntax-split-splice
                                                        _tl2949229534_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31814_
                                                           (values-count
                                                            _g31813_)))
                                                      (if (not (fx= _g31814_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31814_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2949629547_
                                                           (values-ref
                                                            _g31813_
                                                            0))
                                                          (_tl2949829550_
                                                           (values-ref
                                                            _g31813_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2949829550_)
                                                          (letrec ((_loop2949929553_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2949729557_ _body2950329560_)
                              (if (gx#stx-pair? _hd2949729557_)
                                  (let ((_e2950029563_
                                         (gx#syntax-e _hd2949729557_)))
                                    (let ((_lp-hd2950129567_
                                           (##car _e2950029563_))
                                          (_lp-tl2950229570_
                                           (##cdr _e2950029563_)))
                                      (_loop2949929553_
                                       _lp-tl2950229570_
                                       (cons _lp-hd2950129567_
                                             _body2950329560_))))
                                  (let ((_body2950429573_
                                         (reverse _body2950329560_)))
                                    ((lambda (_L29577_
                                              _L29579_
                                              _L29580_
                                              _L29581_)
                                       (if (gx#identifier? _L29580_)
                                           (cons _L29581_
                                                 (cons _L29580_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29579_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2960229605_ _g2960329608_)
                                            (cons _g2960229605_ _g2960329608_))
                                          '()
                                          _L29577_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2947029510_ _g2947129514_)))
                                     _body2950429573_
                                     _tl2949529544_
                                     _hd2949429541_
                                     _hd2948829521_))))))
                    (_loop2949929553_ _target2949629547_ '()))
                  (_g2947029510_ _g2947129514_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2947029510_ _g2947129514_))
                                            (_g2947029510_ _g2947129514_))))
                                    (_g2947029510_ _g2947129514_))))
                            (_g2947029510_ _g2947129514_))))
                    (_g2947029510_ _g2947129514_))))
             (_g2946829665_
              (lambda (_g2947129615_)
                (if (gx#stx-pair? _g2947129615_)
                    (let ((_e2947429618_ (gx#syntax-e _g2947129615_)))
                      (let ((_hd2947529622_ (##car _e2947429618_))
                            (_tl2947629625_ (##cdr _e2947429618_)))
                        (if (gx#stx-pair? _tl2947629625_)
                            (let ((_e2947729628_ (gx#syntax-e _tl2947629625_)))
                              (let ((_hd2947829632_ (##car _e2947729628_))
                                    (_tl2947929635_ (##cdr _e2947729628_)))
                                (if (gx#stx-pair? _tl2947929635_)
                                    (let ((_e2948029638_
                                           (gx#syntax-e _tl2947929635_)))
                                      (let ((_hd2948129642_
                                             (##car _e2948029638_))
                                            (_tl2948229645_
                                             (##cdr _e2948029638_)))
                                        (if (gx#stx-null? _tl2948229645_)
                                            ((lambda (_L29648_ _L29650_)
                                               (if (gx#identifier? _L29650_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29650_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L29648_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2946929611_
                                                    _g2947129615_)))
                                             _hd2948129642_
                                             _hd2947829632_)
                                            (_g2946929611_ _g2947129615_))))
                                    (_g2946929611_ _g2947129615_))))
                            (_g2946929611_ _g2947129615_))))
                    (_g2946929611_ _g2947129615_)))))
        (_g2946829665_ _$stx29465_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx29670_)
      (let* ((_g2967529715_
              (lambda (_g2967629711_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2967629711_)))
             (_g2967429816_
              (lambda (_g2967629719_)
                (if (gx#stx-pair? _g2967629719_)
                    (let ((_e2969229722_ (gx#syntax-e _g2967629719_)))
                      (let ((_hd2969329726_ (##car _e2969229722_))
                            (_tl2969429729_ (##cdr _e2969229722_)))
                        (if (gx#stx-pair? _tl2969429729_)
                            (let ((_e2969529732_ (gx#syntax-e _tl2969429729_)))
                              (let ((_hd2969629736_ (##car _e2969529732_))
                                    (_tl2969729739_ (##cdr _e2969529732_)))
                                (if (gx#stx-pair? _hd2969629736_)
                                    (let ((_e2969829742_
                                           (gx#syntax-e _hd2969629736_)))
                                      (let ((_hd2969929746_
                                             (##car _e2969829742_))
                                            (_tl2970029749_
                                             (##cdr _e2969829742_)))
                                        (if (gx#stx-pair/null? _tl2969729739_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2969729739_)
                                                      '0)
                                                (let ((_g31815_
                                                       (gx#syntax-split-splice
                                                        _tl2969729739_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31816_
                                                           (values-count
                                                            _g31815_)))
                                                      (if (not (fx= _g31816_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31816_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2970129752_
                                                           (values-ref
                                                            _g31815_
                                                            0))
                                                          (_tl2970329755_
                                                           (values-ref
                                                            _g31815_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2970329755_)
                                                          (letrec ((_loop2970429758_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2970229762_ _body2970829765_)
                              (if (gx#stx-pair? _hd2970229762_)
                                  (let ((_e2970529768_
                                         (gx#syntax-e _hd2970229762_)))
                                    (let ((_lp-hd2970629772_
                                           (##car _e2970529768_))
                                          (_lp-tl2970729775_
                                           (##cdr _e2970529768_)))
                                      (_loop2970429758_
                                       _lp-tl2970729775_
                                       (cons _lp-hd2970629772_
                                             _body2970829765_))))
                                  (let ((_body2970929778_
                                         (reverse _body2970829765_)))
                                    ((lambda (_L29782_
                                              _L29784_
                                              _L29785_
                                              _L29786_)
                                       (if (gx#identifier? _L29785_)
                                           (cons _L29786_
                                                 (cons _L29785_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29784_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2980729810_ _g2980829813_)
                                            (cons _g2980729810_ _g2980829813_))
                                          '()
                                          _L29782_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2967529715_ _g2967629719_)))
                                     _body2970929778_
                                     _tl2970029749_
                                     _hd2969929746_
                                     _hd2969329726_))))))
                    (_loop2970429758_ _target2970129752_ '()))
                  (_g2967529715_ _g2967629719_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2967529715_ _g2967629719_))
                                            (_g2967529715_ _g2967629719_))))
                                    (_g2967529715_ _g2967629719_))))
                            (_g2967529715_ _g2967629719_))))
                    (_g2967529715_ _g2967629719_))))
             (_g2967329870_
              (lambda (_g2967629820_)
                (if (gx#stx-pair? _g2967629820_)
                    (let ((_e2967929823_ (gx#syntax-e _g2967629820_)))
                      (let ((_hd2968029827_ (##car _e2967929823_))
                            (_tl2968129830_ (##cdr _e2967929823_)))
                        (if (gx#stx-pair? _tl2968129830_)
                            (let ((_e2968229833_ (gx#syntax-e _tl2968129830_)))
                              (let ((_hd2968329837_ (##car _e2968229833_))
                                    (_tl2968429840_ (##cdr _e2968229833_)))
                                (if (gx#stx-pair? _tl2968429840_)
                                    (let ((_e2968529843_
                                           (gx#syntax-e _tl2968429840_)))
                                      (let ((_hd2968629847_
                                             (##car _e2968529843_))
                                            (_tl2968729850_
                                             (##cdr _e2968529843_)))
                                        (if (gx#stx-null? _tl2968729850_)
                                            ((lambda (_L29853_ _L29855_)
                                               (if (gx#identifier? _L29855_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29855_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L29853_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2967429816_
                                                    _g2967629820_)))
                                             _hd2968629847_
                                             _hd2968329837_)
                                            (_g2967429816_ _g2967629820_))))
                                    (_g2967429816_ _g2967629820_))))
                            (_g2967429816_ _g2967629820_))))
                    (_g2967429816_ _g2967629820_)))))
        (_g2967329870_ _$stx29670_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx29875_)
       (let* ((_g2987829898_
               (lambda (_g2987929894_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g2987929894_)))
              (_g2987729969_
               (lambda (_g2987929902_)
                 (if (gx#stx-pair? _g2987929902_)
                     (let ((_e2988129905_ (gx#syntax-e _g2987929902_)))
                       (let ((_hd2988229909_ (##car _e2988129905_))
                             (_tl2988329912_ (##cdr _e2988129905_)))
                         (if (gx#stx-pair/null? _tl2988329912_)
                             (if (fx>= (gx#stx-length _tl2988329912_) '0)
                                 (let ((_g31817_
                                        (gx#syntax-split-splice
                                         _tl2988329912_
                                         '0)))
                                   (begin
                                     (let ((_g31818_ (values-count _g31817_)))
                                       (if (not (fx= _g31818_ 2))
                                           (error "Context expects 2 values"
                                                  _g31818_)))
                                     (let ((_target2988429915_
                                            (values-ref _g31817_ 0))
                                           (_tl2988629918_
                                            (values-ref _g31817_ 1)))
                                       (if (gx#stx-null? _tl2988629918_)
                                           (letrec ((_loop2988729921_
                                                     (lambda (_hd2988529925_
                                                              _body2989129928_)
                                                       (if (gx#stx-pair?
                                                            _hd2988529925_)
                                                           (let ((_e2988829931_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd2988529925_)))
                     (let ((_lp-hd2988929935_ (##car _e2988829931_))
                           (_lp-tl2989029938_ (##cdr _e2988829931_)))
                       (_loop2988729921_
                        _lp-tl2989029938_
                        (cons _lp-hd2988929935_ _body2989129928_))))
                   (let ((_body2989229941_ (reverse _body2989129928_)))
                     ((lambda (_L29945_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g2996029963_
                                                      _g2996129966_)
                                               (cons _g2996029963_
                                                     _g2996129966_))
                                             '()
                                             _L29945_)))))
                      _body2989229941_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop2988729921_
                                              _target2988429915_
                                              '()))
                                           (_g2987829898_ _g2987929902_)))))
                                 (_g2987829898_ _g2987929902_))
                             (_g2987829898_ _g2987929902_))))
                     (_g2987829898_ _g2987929902_)))))
         (_g2987729969_ _stx29875_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx29974_)
       (let* ((_g2997729997_
               (lambda (_g2997829993_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g2997829993_)))
              (_g2997630068_
               (lambda (_g2997830001_)
                 (if (gx#stx-pair? _g2997830001_)
                     (let ((_e2998030004_ (gx#syntax-e _g2997830001_)))
                       (let ((_hd2998130008_ (##car _e2998030004_))
                             (_tl2998230011_ (##cdr _e2998030004_)))
                         (if (gx#stx-pair/null? _tl2998230011_)
                             (if (fx>= (gx#stx-length _tl2998230011_) '0)
                                 (let ((_g31819_
                                        (gx#syntax-split-splice
                                         _tl2998230011_
                                         '0)))
                                   (begin
                                     (let ((_g31820_ (values-count _g31819_)))
                                       (if (not (fx= _g31820_ 2))
                                           (error "Context expects 2 values"
                                                  _g31820_)))
                                     (let ((_target2998330014_
                                            (values-ref _g31819_ 0))
                                           (_tl2998530017_
                                            (values-ref _g31819_ 1)))
                                       (if (gx#stx-null? _tl2998530017_)
                                           (letrec ((_loop2998630020_
                                                     (lambda (_hd2998430024_
                                                              _body2999030027_)
                                                       (if (gx#stx-pair?
                                                            _hd2998430024_)
                                                           (let ((_e2998730030_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd2998430024_)))
                     (let ((_lp-hd2998830034_ (##car _e2998730030_))
                           (_lp-tl2998930037_ (##cdr _e2998730030_)))
                       (_loop2998630020_
                        _lp-tl2998930037_
                        (cons _lp-hd2998830034_ _body2999030027_))))
                   (let ((_body2999130040_ (reverse _body2999030027_)))
                     ((lambda (_L30044_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3005930062_
                                                      _g3006030065_)
                                               (cons _g3005930062_
                                                     _g3006030065_))
                                             '()
                                             _L30044_)))))
                      _body2999130040_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop2998630020_
                                              _target2998330014_
                                              '()))
                                           (_g2997729997_ _g2997830001_)))))
                                 (_g2997729997_ _g2997830001_))
                             (_g2997729997_ _g2997830001_))))
                     (_g2997729997_ _g2997830001_)))))
         (_g2997630068_ _stx29974_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx30073_)
       (let* ((_g3007630100_
               (lambda (_g3007730096_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3007730096_)))
              (_g3007530222_
               (lambda (_g3007730104_)
                 (if (gx#stx-pair? _g3007730104_)
                     (let ((_e3008030107_ (gx#syntax-e _g3007730104_)))
                       (let ((_hd3008130111_ (##car _e3008030107_))
                             (_tl3008230114_ (##cdr _e3008030107_)))
                         (if (gx#stx-pair? _tl3008230114_)
                             (let ((_e3008330117_
                                    (gx#syntax-e _tl3008230114_)))
                               (let ((_hd3008430121_ (##car _e3008330117_))
                                     (_tl3008530124_ (##cdr _e3008330117_)))
                                 (if (gx#stx-pair/null? _tl3008530124_)
                                     (if (fx>= (gx#stx-length _tl3008530124_)
                                               '0)
                                         (let ((_g31821_
                                                (gx#syntax-split-splice
                                                 _tl3008530124_
                                                 '0)))
                                           (begin
                                             (let ((_g31822_
                                                    (values-count _g31821_)))
                                               (if (not (fx= _g31822_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31822_)))
                                             (let ((_target3008630127_
                                                    (values-ref _g31821_ 0))
                                                   (_tl3008830130_
                                                    (values-ref _g31821_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3008830130_)
                                                   (letrec ((_loop3008930133_
                                                             (lambda (_hd3008730137_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3009330140_)
                       (if (gx#stx-pair? _hd3008730137_)
                           (let ((_e3009030143_ (gx#syntax-e _hd3008730137_)))
                             (let ((_lp-hd3009130147_ (##car _e3009030143_))
                                   (_lp-tl3009230150_ (##cdr _e3009030143_)))
                               (_loop3008930133_
                                _lp-tl3009230150_
                                (cons _lp-hd3009130147_ _id3009330140_))))
                           (let ((_id3009430153_ (reverse _id3009330140_)))
                             ((lambda (_L30157_ _L30159_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3017630179_
                                                       _g3017730182_)
                                                (cons _g3017630179_
                                                      _g3017730182_))
                                              '()
                                              _L30157_)))
                                    (let* ((_keys30193_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3018430187_
                                                               _g3018530190_)
                                                        (cons _g3018430187_
                                                              _g3018530190_))
                                                      '()
                                                      _L30157_))))
                                           (_keytab30204_
                                            (let ((_ht30196_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3019830200_)
                                                   (hash-put!
                                                    _ht30196_
                                                    _g3019830200_
                                                    '#t))
                                                 _keys30193_)
                                                _ht30196_)))
                                           (_imports30207_
                                            (gx#core-expand-import-source
                                             _L30159_))
                                           (_fold-e30217_
                                            (letrec ((_fold-e30210_
                                                      (lambda (_in30213_
                                                               _r30215_)
                                                        (if (gx#module-import?
                                                             _in30213_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30204_
                         (gx#module-import-name _in30213_))
                        (cons _in30213_ _r30215_)
                        _r30215_)
                    (if (gx#import-set? _in30213_)
                        (foldl _fold-e30210_
                               _r30215_
                               (gx#import-set-imports _in30213_))
                        _r30215_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30210_)))
                                      (cons 'begin:
                                            (foldl _fold-e30217_
                                                   '()
                                                   _imports30207_)))
                                    (_g3007630100_ _g3007730104_)))
                              _id3009430153_
                              _hd3008430121_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3008930133_
                                                      _target3008630127_
                                                      '()))
                                                   (_g3007630100_
                                                    _g3007730104_)))))
                                         (_g3007630100_ _g3007730104_))
                                     (_g3007630100_ _g3007730104_))))
                             (_g3007630100_ _g3007730104_))))
                     (_g3007630100_ _g3007730104_)))))
         (_g3007530222_ _stx30073_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx30227_)
       (let* ((_g3023030254_
               (lambda (_g3023130250_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3023130250_)))
              (_g3022930376_
               (lambda (_g3023130258_)
                 (if (gx#stx-pair? _g3023130258_)
                     (let ((_e3023430261_ (gx#syntax-e _g3023130258_)))
                       (let ((_hd3023530265_ (##car _e3023430261_))
                             (_tl3023630268_ (##cdr _e3023430261_)))
                         (if (gx#stx-pair? _tl3023630268_)
                             (let ((_e3023730271_
                                    (gx#syntax-e _tl3023630268_)))
                               (let ((_hd3023830275_ (##car _e3023730271_))
                                     (_tl3023930278_ (##cdr _e3023730271_)))
                                 (if (gx#stx-pair/null? _tl3023930278_)
                                     (if (fx>= (gx#stx-length _tl3023930278_)
                                               '0)
                                         (let ((_g31823_
                                                (gx#syntax-split-splice
                                                 _tl3023930278_
                                                 '0)))
                                           (begin
                                             (let ((_g31824_
                                                    (values-count _g31823_)))
                                               (if (not (fx= _g31824_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31824_)))
                                             (let ((_target3024030281_
                                                    (values-ref _g31823_ 0))
                                                   (_tl3024230284_
                                                    (values-ref _g31823_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3024230284_)
                                                   (letrec ((_loop3024330287_
                                                             (lambda (_hd3024130291_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3024730294_)
                       (if (gx#stx-pair? _hd3024130291_)
                           (let ((_e3024430297_ (gx#syntax-e _hd3024130291_)))
                             (let ((_lp-hd3024530301_ (##car _e3024430297_))
                                   (_lp-tl3024630304_ (##cdr _e3024430297_)))
                               (_loop3024330287_
                                _lp-tl3024630304_
                                (cons _lp-hd3024530301_ _id3024730294_))))
                           (let ((_id3024830307_ (reverse _id3024730294_)))
                             ((lambda (_L30311_ _L30313_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3033030333_
                                                       _g3033130336_)
                                                (cons _g3033030333_
                                                      _g3033130336_))
                                              '()
                                              _L30311_)))
                                    (let* ((_keys30347_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3033830341_
                                                               _g3033930344_)
                                                        (cons _g3033830341_
                                                              _g3033930344_))
                                                      '()
                                                      _L30311_))))
                                           (_keytab30358_
                                            (let ((_ht30350_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3035230354_)
                                                   (hash-put!
                                                    _ht30350_
                                                    _g3035230354_
                                                    '#t))
                                                 _keys30347_)
                                                _ht30350_)))
                                           (_imports30361_
                                            (gx#core-expand-import-source
                                             _L30313_))
                                           (_fold-e30371_
                                            (letrec ((_fold-e30364_
                                                      (lambda (_in30367_
                                                               _r30369_)
                                                        (if (gx#module-import?
                                                             _in30367_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30358_
                         (gx#module-import-name _in30367_))
                        _r30369_
                        (cons _in30367_ _r30369_))
                    (if (gx#import-set? _in30367_)
                        (foldl _fold-e30364_
                               _r30369_
                               (gx#import-set-imports _in30367_))
                        (cons _in30367_ _r30369_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30364_)))
                                      (cons 'begin:
                                            (foldl _fold-e30371_
                                                   '()
                                                   _imports30361_)))
                                    (_g3023030254_ _g3023130258_)))
                              _id3024830307_
                              _hd3023830275_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3024330287_
                                                      _target3024030281_
                                                      '()))
                                                   (_g3023030254_
                                                    _g3023130258_)))))
                                         (_g3023030254_ _g3023130258_))
                                     (_g3023030254_ _g3023130258_))))
                             (_g3023030254_ _g3023130258_))))
                     (_g3023030254_ _g3023130258_)))))
         (_g3022930376_ _stx30227_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in30428_ _rename30430_)
      (gx#make-module-import
       (gx#module-import-source _in30428_)
       _rename30430_
       (gx#module-import-phi _in30428_)
       (gx#module-import-weak? _in30428_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name30381_ _pre30383_)
      (let* ((_name3038430392_ _name30381_)
             (_E3038730398_
              (lambda () (error '"No clause matching" _name3038430392_)))
             (_else3038630404_
              (lambda () (make-symbol _pre30383_ _name30381_)))
             (_K3038830412_
              (lambda (_mark30408_ _id30410_)
                (cons (make-symbol _pre30383_ _id30410_) _mark30408_))))
        (if (##pair? _name3038430392_)
            (let ((_hd3038930416_ (##car _name3038430392_))
                  (_tl3039030419_ (##cdr _name3038430392_)))
              (let* ((_id30422_ _hd3038930416_) (_mark30425_ _tl3039030419_))
                (_K3038830412_ _mark30425_ _id30422_)))
            (_else3038630404_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx30432_)
       (let* ((_g3043530468_
               (lambda (_g3043630464_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3043630464_)))
              (_g3043430654_
               (lambda (_g3043630472_)
                 (if (gx#stx-pair? _g3043630472_)
                     (let ((_e3044030475_ (gx#syntax-e _g3043630472_)))
                       (let ((_hd3044130479_ (##car _e3044030475_))
                             (_tl3044230482_ (##cdr _e3044030475_)))
                         (if (gx#stx-pair? _tl3044230482_)
                             (let ((_e3044330485_
                                    (gx#syntax-e _tl3044230482_)))
                               (let ((_hd3044430489_ (##car _e3044330485_))
                                     (_tl3044530492_ (##cdr _e3044330485_)))
                                 (if (gx#stx-pair/null? _tl3044530492_)
                                     (if (fx>= (gx#stx-length _tl3044530492_)
                                               '0)
                                         (let ((_g31825_
                                                (gx#syntax-split-splice
                                                 _tl3044530492_
                                                 '0)))
                                           (begin
                                             (let ((_g31826_
                                                    (values-count _g31825_)))
                                               (if (not (fx= _g31826_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31826_)))
                                             (let ((_target3044630495_
                                                    (values-ref _g31825_ 0))
                                                   (_tl3044830498_
                                                    (values-ref _g31825_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3044830498_)
                                                   (letrec ((_loop3044930501_
                                                             (lambda (_hd3044730505_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3045330508_
                              _id3045430510_)
                       (if (gx#stx-pair? _hd3044730505_)
                           (let ((_e3045030513_ (gx#syntax-e _hd3044730505_)))
                             (let ((_lp-hd3045130517_ (##car _e3045030513_))
                                   (_lp-tl3045230520_ (##cdr _e3045030513_)))
                               (if (gx#stx-pair? _lp-hd3045130517_)
                                   (let ((_e3045730523_
                                          (gx#syntax-e _lp-hd3045130517_)))
                                     (let ((_hd3045830527_
                                            (##car _e3045730523_))
                                           (_tl3045930530_
                                            (##cdr _e3045730523_)))
                                       (if (gx#stx-pair? _tl3045930530_)
                                           (let ((_e3046030533_
                                                  (gx#syntax-e
                                                   _tl3045930530_)))
                                             (let ((_hd3046130537_
                                                    (##car _e3046030533_))
                                                   (_tl3046230540_
                                                    (##cdr _e3046030533_)))
                                               (if (gx#stx-null?
                                                    _tl3046230540_)
                                                   (_loop3044930501_
                                                    _lp-tl3045230520_
                                                    (cons _hd3046130537_
                                                          _new-id3045330508_)
                                                    (cons _hd3045830527_
                                                          _id3045430510_))
                                                   (_g3043530468_
                                                    _g3043630472_))))
                                           (_g3043530468_ _g3043630472_))))
                                   (_g3043530468_ _g3043630472_))))
                           (let ((_new-id3045530543_
                                  (reverse _new-id3045330508_))
                                 (_id3045630546_ (reverse _id3045430510_)))
                             ((lambda (_L30549_ _L30551_ _L30552_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3057030573_
                                                           _g3057130576_)
                                                    (cons _g3057030573_
                                                          _g3057130576_))
                                                  '()
                                                  _L30551_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3057830581_
                                                           _g3057930584_)
                                                    (cons _g3057830581_
                                                          _g3057930584_))
                                                  '()
                                                  _L30549_)))
                                        '#f)
                                    (let* ((_keytab30587_ (make-hash-table))
                                           (_found30590_ (make-hash-table))
                                           (_g31827_
                                            (for-each
                                             (lambda (_id30593_ _new-id30595_)
                                               (hash-put!
                                                _keytab30587_
                                                (gx#core-identifier-key
                                                 _id30593_)
                                                (gx#core-identifier-key
                                                 _new-id30595_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3059630599_
                                                               _g3059730602_)
                                                        (cons _g3059630599_
                                                              _g3059730602_))
                                                      '()
                                                      _L30551_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3060430607_
                                                               _g3060530610_)
                                                        (cons _g3060430607_
                                                              _g3060530610_))
                                                      '()
                                                      _L30549_))))
                                           (_imports30615_
                                            (gx#core-expand-import-source
                                             _L30552_))
                                           (_fold-e30635_
                                            (letrec ((_fold-e30618_
                                                      (lambda (_in30621_
                                                               _r30623_)
                                                        (if (gx#module-import?
                                                             _in30621_)
                                                            (let* ((_name30625_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in30621_))
                           (_$e30628_ (hash-get _keytab30587_ _name30625_)))
                      (if _$e30628_
                          ((lambda (_rename30632_)
                             (begin
                               (hash-put! _found30590_ _name30625_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in30621_
                                      _rename30632_)
                                     _r30623_)))
                           _$e30628_)
                          (cons _in30621_ _r30623_)))
                    (if (gx#import-set? _in30621_)
                        (foldl _fold-e30618_
                               _r30623_
                               (gx#import-set-imports _in30621_))
                        (cons _in30621_ _r30623_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30618_))
                                           (_new-imports30638_
                                            (foldl _fold-e30635_
                                                   '()
                                                   _imports30615_)))
                                      (begin
                                        (for-each
                                         (lambda (_id30643_)
                                           (if (hash-get
                                                _found30590_
                                                (gx#core-identifier-key
                                                 _id30643_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx30432_
                                                _id30643_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3064530648_
                                                           _g3064630651_)
                                                    (cons _g3064530648_
                                                          _g3064630651_))
                                                  '()
                                                  _L30551_)))
                                        (cons 'begin: _new-imports30638_)))
                                    (_g3043530468_ _g3043630472_)))
                              _new-id3045530543_
                              _id3045630546_
                              _hd3044430489_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3044930501_
                                                      _target3044630495_
                                                      '()
                                                      '()))
                                                   (_g3043530468_
                                                    _g3043630472_)))))
                                         (_g3043530468_ _g3043630472_))
                                     (_g3043530468_ _g3043630472_))))
                             (_g3043530468_ _g3043630472_))))
                     (_g3043530468_ _g3043630472_)))))
         (_g3043430654_ _stx30432_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx30660_)
       (let* ((_g3066330681_
               (lambda (_g3066430677_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3066430677_)))
              (_g3066230760_
               (lambda (_g3066430685_)
                 (if (gx#stx-pair? _g3066430685_)
                     (let ((_e3066730688_ (gx#syntax-e _g3066430685_)))
                       (let ((_hd3066830692_ (##car _e3066730688_))
                             (_tl3066930695_ (##cdr _e3066730688_)))
                         (if (gx#stx-pair? _tl3066930695_)
                             (let ((_e3067030698_
                                    (gx#syntax-e _tl3066930695_)))
                               (let ((_hd3067130702_ (##car _e3067030698_))
                                     (_tl3067230705_ (##cdr _e3067030698_)))
                                 (if (gx#stx-pair? _tl3067230705_)
                                     (let ((_e3067330708_
                                            (gx#syntax-e _tl3067230705_)))
                                       (let ((_hd3067430712_
                                              (##car _e3067330708_))
                                             (_tl3067530715_
                                              (##cdr _e3067330708_)))
                                         (if (gx#stx-null? _tl3067530715_)
                                             ((lambda (_L30718_ _L30720_)
                                                (if (gx#identifier? _L30718_)
                                                    (let* ((_pre30736_
                                                            (gx#stx-e
                                                             _L30718_))
                                                           (_imports30739_
                                                            (gx#core-expand-import-source
                                                             _L30720_))
                                                           (_rename-e30745_
                                                            (lambda (_name30742_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name30742_
                                                               _pre30736_)))
                                                           (_fold-e30755_
                                                            (letrec ((_fold-e30748_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in30751_ _r30753_)
                                (if (gx#module-import? _in30751_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in30751_
                                           (_rename-e30745_
                                            (gx#module-import-name _in30751_)))
                                          _r30753_)
                                    (if (gx#import-set? _in30751_)
                                        (foldl _fold-e30748_
                                               _r30753_
                                               (gx#import-set-imports
                                                _in30751_))
                                        (cons _in30751_ _r30753_))))))
                      _fold-e30748_)))
              (cons 'begin: (foldl _fold-e30755_ '() _imports30739_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3066330681_
                                                     _g3066430685_)))
                                              _hd3067430712_
                                              _hd3067130702_)
                                             (_g3066330681_ _g3066430685_))))
                                     (_g3066330681_ _g3066430685_))))
                             (_g3066330681_ _g3066430685_))))
                     (_g3066330681_ _g3066430685_)))))
         (_g3066230760_ _stx30660_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx30764_)
       (let* ((_g3076730791_
               (lambda (_g3076830787_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3076830787_)))
              (_g3076630913_
               (lambda (_g3076830795_)
                 (if (gx#stx-pair? _g3076830795_)
                     (let ((_e3077130798_ (gx#syntax-e _g3076830795_)))
                       (let ((_hd3077230802_ (##car _e3077130798_))
                             (_tl3077330805_ (##cdr _e3077130798_)))
                         (if (gx#stx-pair? _tl3077330805_)
                             (let ((_e3077430808_
                                    (gx#syntax-e _tl3077330805_)))
                               (let ((_hd3077530812_ (##car _e3077430808_))
                                     (_tl3077630815_ (##cdr _e3077430808_)))
                                 (if (gx#stx-pair/null? _tl3077630815_)
                                     (if (fx>= (gx#stx-length _tl3077630815_)
                                               '0)
                                         (let ((_g31828_
                                                (gx#syntax-split-splice
                                                 _tl3077630815_
                                                 '0)))
                                           (begin
                                             (let ((_g31829_
                                                    (values-count _g31828_)))
                                               (if (not (fx= _g31829_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31829_)))
                                             (let ((_target3077730818_
                                                    (values-ref _g31828_ 0))
                                                   (_tl3077930821_
                                                    (values-ref _g31828_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3077930821_)
                                                   (letrec ((_loop3078030824_
                                                             (lambda (_hd3077830828_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3078430831_)
                       (if (gx#stx-pair? _hd3077830828_)
                           (let ((_e3078130834_ (gx#syntax-e _hd3077830828_)))
                             (let ((_lp-hd3078230838_ (##car _e3078130834_))
                                   (_lp-tl3078330841_ (##cdr _e3078130834_)))
                               (_loop3078030824_
                                _lp-tl3078330841_
                                (cons _lp-hd3078230838_ _id3078430831_))))
                           (let ((_id3078530844_ (reverse _id3078430831_)))
                             ((lambda (_L30848_ _L30850_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3086730870_
                                                       _g3086830873_)
                                                (cons _g3086730870_
                                                      _g3086830873_))
                                              '()
                                              _L30848_)))
                                    (let* ((_keys30884_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3087530878_
                                                               _g3087630881_)
                                                        (cons _g3087530878_
                                                              _g3087630881_))
                                                      '()
                                                      _L30848_))))
                                           (_keytab30895_
                                            (let ((_ht30887_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3088930891_)
                                                   (hash-put!
                                                    _ht30887_
                                                    _g3088930891_
                                                    '#t))
                                                 _keys30884_)
                                                _ht30887_)))
                                           (_exports30898_
                                            (gx#core-expand-export-source
                                             _L30850_))
                                           (_fold-e30908_
                                            (letrec ((_fold-e30901_
                                                      (lambda (_out30904_
                                                               _r30906_)
                                                        (if (gx#module-export?
                                                             _out30904_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30895_
                         (gx#module-export-name _out30904_))
                        _r30906_
                        (cons _out30904_ _r30906_))
                    (if (gx#export-set? _out30904_)
                        (foldl _fold-e30901_
                               _r30906_
                               (gx#export-set-exports _out30904_))
                        _r30906_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30901_)))
                                      (cons 'begin:
                                            (foldl _fold-e30908_
                                                   '()
                                                   _exports30898_)))
                                    (_g3076730791_ _g3076830795_)))
                              _id3078530844_
                              _hd3077530812_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3078030824_
                                                      _target3077730818_
                                                      '()))
                                                   (_g3076730791_
                                                    _g3076830795_)))))
                                         (_g3076730791_ _g3076830795_))
                                     (_g3076730791_ _g3076830795_))))
                             (_g3076730791_ _g3076830795_))))
                     (_g3076730791_ _g3076830795_)))))
         (_g3076630913_ _stx30764_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out30918_ _rename30920_)
      (gx#make-module-export
       (gx#module-export-context _out30918_)
       (gx#module-export-key _out30918_)
       (gx#module-export-phi _out30918_)
       _rename30920_
       (gx#module-export-weak? _out30918_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx30922_)
       (let* ((_g3092530958_
               (lambda (_g3092630954_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3092630954_)))
              (_g3092431144_
               (lambda (_g3092630962_)
                 (if (gx#stx-pair? _g3092630962_)
                     (let ((_e3093030965_ (gx#syntax-e _g3092630962_)))
                       (let ((_hd3093130969_ (##car _e3093030965_))
                             (_tl3093230972_ (##cdr _e3093030965_)))
                         (if (gx#stx-pair? _tl3093230972_)
                             (let ((_e3093330975_
                                    (gx#syntax-e _tl3093230972_)))
                               (let ((_hd3093430979_ (##car _e3093330975_))
                                     (_tl3093530982_ (##cdr _e3093330975_)))
                                 (if (gx#stx-pair/null? _tl3093530982_)
                                     (if (fx>= (gx#stx-length _tl3093530982_)
                                               '0)
                                         (let ((_g31830_
                                                (gx#syntax-split-splice
                                                 _tl3093530982_
                                                 '0)))
                                           (begin
                                             (let ((_g31831_
                                                    (values-count _g31830_)))
                                               (if (not (fx= _g31831_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31831_)))
                                             (let ((_target3093630985_
                                                    (values-ref _g31830_ 0))
                                                   (_tl3093830988_
                                                    (values-ref _g31830_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3093830988_)
                                                   (letrec ((_loop3093930991_
                                                             (lambda (_hd3093730995_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3094330998_
                              _id3094431000_)
                       (if (gx#stx-pair? _hd3093730995_)
                           (let ((_e3094031003_ (gx#syntax-e _hd3093730995_)))
                             (let ((_lp-hd3094131007_ (##car _e3094031003_))
                                   (_lp-tl3094231010_ (##cdr _e3094031003_)))
                               (if (gx#stx-pair? _lp-hd3094131007_)
                                   (let ((_e3094731013_
                                          (gx#syntax-e _lp-hd3094131007_)))
                                     (let ((_hd3094831017_
                                            (##car _e3094731013_))
                                           (_tl3094931020_
                                            (##cdr _e3094731013_)))
                                       (if (gx#stx-pair? _tl3094931020_)
                                           (let ((_e3095031023_
                                                  (gx#syntax-e
                                                   _tl3094931020_)))
                                             (let ((_hd3095131027_
                                                    (##car _e3095031023_))
                                                   (_tl3095231030_
                                                    (##cdr _e3095031023_)))
                                               (if (gx#stx-null?
                                                    _tl3095231030_)
                                                   (_loop3093930991_
                                                    _lp-tl3094231010_
                                                    (cons _hd3095131027_
                                                          _new-id3094330998_)
                                                    (cons _hd3094831017_
                                                          _id3094431000_))
                                                   (_g3092530958_
                                                    _g3092630962_))))
                                           (_g3092530958_ _g3092630962_))))
                                   (_g3092530958_ _g3092630962_))))
                           (let ((_new-id3094531033_
                                  (reverse _new-id3094330998_))
                                 (_id3094631036_ (reverse _id3094431000_)))
                             ((lambda (_L31039_ _L31041_ _L31042_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3106031063_
                                                           _g3106131066_)
                                                    (cons _g3106031063_
                                                          _g3106131066_))
                                                  '()
                                                  _L31041_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3106831071_
                                                           _g3106931074_)
                                                    (cons _g3106831071_
                                                          _g3106931074_))
                                                  '()
                                                  _L31039_)))
                                        '#f)
                                    (let* ((_keytab31077_ (make-hash-table))
                                           (_found31080_ (make-hash-table))
                                           (_g31832_
                                            (for-each
                                             (lambda (_id31083_ _new-id31085_)
                                               (hash-put!
                                                _keytab31077_
                                                (gx#core-identifier-key
                                                 _id31083_)
                                                (gx#core-identifier-key
                                                 _new-id31085_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3108631089_
                                                               _g3108731092_)
                                                        (cons _g3108631089_
                                                              _g3108731092_))
                                                      '()
                                                      _L31041_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3109431097_
                                                               _g3109531100_)
                                                        (cons _g3109431097_
                                                              _g3109531100_))
                                                      '()
                                                      _L31039_))))
                                           (_exports31105_
                                            (gx#core-expand-export-source
                                             _L31042_))
                                           (_fold-e31125_
                                            (letrec ((_fold-e31108_
                                                      (lambda (_out31111_
                                                               _r31113_)
                                                        (if (gx#module-export?
                                                             _out31111_)
                                                            (let* ((_name31115_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out31111_))
                           (_$e31118_ (hash-get _keytab31077_ _name31115_)))
                      (if _$e31118_
                          ((lambda (_rename31122_)
                             (begin
                               (hash-put! _found31080_ _name31115_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out31111_
                                      _rename31122_)
                                     _r31113_)))
                           _$e31118_)
                          (cons _out31111_ _r31113_)))
                    (if (gx#export-set? _out31111_)
                        (foldl _fold-e31108_
                               _r31113_
                               (gx#export-set-exports _out31111_))
                        (cons _out31111_ _r31113_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e31108_))
                                           (_new-exports31128_
                                            (foldl _fold-e31125_
                                                   '()
                                                   _exports31105_)))
                                      (begin
                                        (for-each
                                         (lambda (_id31133_)
                                           (if (hash-get
                                                _found31080_
                                                (gx#core-identifier-key
                                                 _id31133_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx30922_
                                                _id31133_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3113531138_
                                                           _g3113631141_)
                                                    (cons _g3113531138_
                                                          _g3113631141_))
                                                  '()
                                                  _L31041_)))
                                        (cons 'begin: _new-exports31128_)))
                                    (_g3092530958_ _g3092630962_)))
                              _new-id3094531033_
                              _id3094631036_
                              _hd3093430979_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3093930991_
                                                      _target3093630985_
                                                      '()
                                                      '()))
                                                   (_g3092530958_
                                                    _g3092630962_)))))
                                         (_g3092530958_ _g3092630962_))
                                     (_g3092530958_ _g3092630962_))))
                             (_g3092530958_ _g3092630962_))))
                     (_g3092530958_ _g3092630962_)))))
         (_g3092431144_ _stx30922_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx31150_)
       (let* ((_g3115331171_
               (lambda (_g3115431167_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3115431167_)))
              (_g3115231250_
               (lambda (_g3115431175_)
                 (if (gx#stx-pair? _g3115431175_)
                     (let ((_e3115731178_ (gx#syntax-e _g3115431175_)))
                       (let ((_hd3115831182_ (##car _e3115731178_))
                             (_tl3115931185_ (##cdr _e3115731178_)))
                         (if (gx#stx-pair? _tl3115931185_)
                             (let ((_e3116031188_
                                    (gx#syntax-e _tl3115931185_)))
                               (let ((_hd3116131192_ (##car _e3116031188_))
                                     (_tl3116231195_ (##cdr _e3116031188_)))
                                 (if (gx#stx-pair? _tl3116231195_)
                                     (let ((_e3116331198_
                                            (gx#syntax-e _tl3116231195_)))
                                       (let ((_hd3116431202_
                                              (##car _e3116331198_))
                                             (_tl3116531205_
                                              (##cdr _e3116331198_)))
                                         (if (gx#stx-null? _tl3116531205_)
                                             ((lambda (_L31208_ _L31210_)
                                                (if (gx#identifier? _L31208_)
                                                    (let* ((_pre31226_
                                                            (gx#stx-e
                                                             _L31208_))
                                                           (_exports31229_
                                                            (gx#core-expand-export-source
                                                             _L31210_))
                                                           (_rename-e31235_
                                                            (lambda (_name31232_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name31232_
                                                               _pre31226_)))
                                                           (_fold-e31245_
                                                            (letrec ((_fold-e31238_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out31241_ _r31243_)
                                (if (gx#module-export? _out31241_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out31241_
                                           (_rename-e31235_
                                            (gx#module-export-name
                                             _out31241_)))
                                          _r31243_)
                                    (if (gx#export-set? _out31241_)
                                        (foldl _fold-e31238_
                                               _r31243_
                                               (gx#export-set-exports
                                                _out31241_))
                                        (cons _out31241_ _r31243_))))))
                      _fold-e31238_)))
              (cons 'begin: (foldl _fold-e31245_ '() _exports31229_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3115331171_
                                                     _g3115431175_)))
                                              _hd3116431202_
                                              _hd3116131192_)
                                             (_g3115331171_ _g3115431175_))))
                                     (_g3115331171_ _g3115431175_))))
                             (_g3115331171_ _g3115431175_))))
                     (_g3115331171_ _g3115431175_)))))
         (_g3115231250_ _stx31150_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx31254_)
       (let* ((_g3125731277_
               (lambda (_g3125831273_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3125831273_)))
              (_g3125631512_
               (lambda (_g3125831281_)
                 (if (gx#stx-pair? _g3125831281_)
                     (let ((_e3126031284_ (gx#syntax-e _g3125831281_)))
                       (let ((_hd3126131288_ (##car _e3126031284_))
                             (_tl3126231291_ (##cdr _e3126031284_)))
                         (if (gx#stx-pair/null? _tl3126231291_)
                             (if (fx>= (gx#stx-length _tl3126231291_) '0)
                                 (let ((_g31833_
                                        (gx#syntax-split-splice
                                         _tl3126231291_
                                         '0)))
                                   (begin
                                     (let ((_g31834_ (values-count _g31833_)))
                                       (if (not (fx= _g31834_ 2))
                                           (error "Context expects 2 values"
                                                  _g31834_)))
                                     (let ((_target3126331294_
                                            (values-ref _g31833_ 0))
                                           (_tl3126531297_
                                            (values-ref _g31833_ 1)))
                                       (if (gx#stx-null? _tl3126531297_)
                                           (letrec ((_loop3126631300_
                                                     (lambda (_hd3126431304_
                                                              _id3127031307_)
                                                       (if (gx#stx-pair?
                                                            _hd3126431304_)
                                                           (let ((_e3126731310_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3126431304_)))
                     (let ((_lp-hd3126831314_ (##car _e3126731310_))
                           (_lp-tl3126931317_ (##cdr _e3126731310_)))
                       (_loop3126631300_
                        _lp-tl3126931317_
                        (cons _lp-hd3126831314_ _id3127031307_))))
                   (let ((_id3127131320_ (reverse _id3127031307_)))
                     ((lambda (_L31324_)
                        (let _lp31340_ ((_rest31343_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3150331506_
                                                           _g3150431509_)
                                                    (cons _g3150331506_
                                                          _g3150431509_))
                                                  '()
                                                  _L31324_)))
                                        (_ids31345_ '()))
                          (let* ((_g3134831360_
                                  (lambda (_g3134931356_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3134931356_)))
                                 (_g3134731371_
                                  (lambda (_g3134931364_)
                                    ((lambda () (cons 'begin: _ids31345_)))))
                                 (_g3134631500_
                                  (lambda (_g3134931375_)
                                    (if (gx#stx-pair? _g3134931375_)
                                        (let ((_e3135231378_
                                               (gx#syntax-e _g3134931375_)))
                                          (let ((_hd3135331382_
                                                 (##car _e3135231378_))
                                                (_tl3135431385_
                                                 (##cdr _e3135231378_)))
                                            ((lambda (_L31388_ _L31390_)
                                               (let ((_info31405_
                                                      (gx#syntax-local-value
                                                       _L31390_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info31405_)
                                                     (let* ((_g3140731424_
                                                             (slot-ref
                                                              _info31405_
                                                              'expander-identifiers))
                                                            (_E3140931430_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3140731424_)))
                    (_K3141031442_
                     (lambda (_setf31434_
                              _getf31436_
                              _type?31437_
                              _make-type31438_
                              _type::t31439_
                              _super31440_)
                       (_lp31340_
                        _L31388_
                        (cons _L31390_
                              (cons _type::t31439_
                                    (cons _make-type31438_
                                          (cons _type?31437_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids31345_
                                                              _setf31434_)
                                                       _getf31436_)))))))))
               (if (##pair? _g3140731424_)
                   (let ((_hd3141131446_ (##car _g3140731424_))
                         (_tl3141231449_ (##cdr _g3140731424_)))
                     (let ((_super31452_ _hd3141131446_))
                       (if (##pair? _tl3141231449_)
                           (let ((_hd3141331455_ (##car _tl3141231449_))
                                 (_tl3141431458_ (##cdr _tl3141231449_)))
                             (let ((_type::t31461_ _hd3141331455_))
                               (if (##pair? _tl3141431458_)
                                   (let ((_hd3141531464_
                                          (##car _tl3141431458_))
                                         (_tl3141631467_
                                          (##cdr _tl3141431458_)))
                                     (let ((_make-type31470_ _hd3141531464_))
                                       (if (##pair? _tl3141631467_)
                                           (let ((_hd3141731473_
                                                  (##car _tl3141631467_))
                                                 (_tl3141831476_
                                                  (##cdr _tl3141631467_)))
                                             (let ((_type?31479_
                                                    _hd3141731473_))
                                               (if (##pair? _tl3141831476_)
                                                   (let ((_hd3141931482_
                                                          (##car _tl3141831476_))
                                                         (_tl3142031485_
                                                          (##cdr _tl3141831476_)))
                                                     (let ((_getf31488_
                                                            _hd3141931482_))
                                                       (if (##pair? _tl3142031485_)
                                                           (let ((_hd3142131491_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3142031485_))
                         (_tl3142231494_ (##cdr _tl3142031485_)))
                     (let ((_setf31497_ _hd3142131491_))
                       (if (##null? _tl3142231494_)
                           (_K3141031442_
                            _setf31497_
                            _getf31488_
                            _type?31479_
                            _make-type31470_
                            _type::t31461_
                            _super31452_)
                           (_E3140931430_))))
                   (_E3140931430_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3140931430_))))
                                           (_E3140931430_))))
                                   (_E3140931430_))))
                           (_E3140931430_))))
                   (_E3140931430_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx31254_
                                                      _L31390_))))
                                             _tl3135431385_
                                             _hd3135331382_)))
                                        (_g3134731371_ _g3134931375_)))))
                            (_g3134631500_ _rest31343_))))
                      _id3127131320_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3126631300_
                                              _target3126331294_
                                              '()))
                                           (_g3125731277_ _g3125831281_)))))
                                 (_g3125731277_ _g3125831281_))
                             (_g3125731277_ _g3125831281_))))
                     (_g3125731277_ _g3125831281_)))))
         (_g3125631512_ _stx31254_))))))
