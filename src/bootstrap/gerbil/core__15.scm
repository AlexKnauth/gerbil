(declare (block) (standard-bindings) (extended-bindings) (inlining-limit 200))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx33901_)
      (let* ((___stx4157941580_ _$stx33901_)
             (_g3390633925_
              (lambda ()
                (gx#raise-syntax-error '#f '"Bad syntax" ___stx4157941580_))))
        (let ((___kont4158241583_
               (lambda () (cons (gx#datum->syntax '#f 'begin) '())))
              (___kont4158441585_
               (lambda (_L33952_ _L33954_ _L33955_)
                 (cons (gx#datum->syntax '#f 'cond-expand)
                       (cons (cons _L33954_
                                   (cons (cons _L33955_ _L33952_) '()))
                             (cons (cons (gx#datum->syntax '#f 'else)
                                         (cons (cons (gx#datum->syntax
                                                      '#f
                                                      'syntax-error)
                                                     (cons '"Missing required feature"
                                                           (cons _L33954_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               '()))
                                   '()))))))
          (if (gx#stx-pair? ___stx4157941580_)
              (let ((_e3390833978_ (gx#syntax-e ___stx4157941580_)))
                (let ((_tl3391033985_ (##cdr _e3390833978_))
                      (_hd3390933982_ (##car _e3390833978_)))
                  (if (gx#stx-null? _tl3391033985_)
                      (___kont4158241583_)
                      (if (gx#stx-pair? _tl3391033985_)
                          (let ((_e3391733942_ (gx#syntax-e _tl3391033985_)))
                            (let ((_tl3391933949_ (##cdr _e3391733942_))
                                  (_hd3391833946_ (##car _e3391733942_)))
                              (___kont4158441585_
                               _tl3391933949_
                               _hd3391833946_
                               _hd3390933982_)))
                          (_g3390633925_)))))
              (_g3390633925_))))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx33996_)
      (let* ((___stx4160941610_ _$stx33996_)
             (_g3400134041_
              (lambda ()
                (gx#raise-syntax-error '#f '"Bad syntax" ___stx4160941610_))))
        (let ((___kont4161241613_
               (lambda (_L34179_ _L34181_)
                 (cons (gx#datum->syntax '#f 'defsyntax)
                       (cons _L34181_
                             (cons (cons (gx#datum->syntax
                                          '#f
                                          'make-import-expander)
                                         (cons _L34179_ '()))
                                   '())))))
              (___kont4161441615_
               (lambda (_L34108_ _L34110_ _L34111_ _L34112_)
                 (cons _L34112_
                       (cons _L34111_
                             (cons (cons (gx#datum->syntax '#f 'lambda)
                                         (cons _L34110_
                                               (foldr (lambda (_g3413334136_
                                                               _g3413434139_)
                                                        (cons _g3413334136_
                                                              _g3413434139_))
                                                      '()
                                                      _L34108_)))
                                   '()))))))
          (let* ((___match4166441665_
                  (lambda (_e3401834048_
                           _hd3401934052_
                           _tl3402034055_
                           _e3402134058_
                           _hd3402234062_
                           _tl3402334065_
                           _e3402434068_
                           _hd3402534072_
                           _tl3402634075_
                           ___splice4161641617_
                           _target3402734078_
                           _tl3402934081_)
                    (letrec ((_loop3403034084_
                              (lambda (_hd3402834088_ _body3403434091_)
                                (if (gx#stx-pair? _hd3402834088_)
                                    (let ((_e3403134094_
                                           (gx#syntax-e _hd3402834088_)))
                                      (let ((_lp-tl3403334101_
                                             (##cdr _e3403134094_))
                                            (_lp-hd3403234098_
                                             (##car _e3403134094_)))
                                        (_loop3403034084_
                                         _lp-tl3403334101_
                                         (cons _lp-hd3403234098_
                                               _body3403434091_))))
                                    (let ((_body3403534104_
                                           (reverse _body3403434091_)))
                                      (let ((_L34108_ _body3403534104_)
                                            (_L34110_ _tl3402634075_)
                                            (_L34111_ _hd3402534072_)
                                            (_L34112_ _hd3401934052_))
                                        (if (gx#identifier? _L34111_)
                                            (___kont4161441615_
                                             _L34108_
                                             _L34110_
                                             _L34111_
                                             _L34112_)
                                            (_g3400134041_))))))))
                      (_loop3403034084_ _target3402734078_ '()))))
                 (___match4163841639_
                  (lambda (_e3400534149_
                           _hd3400634153_
                           _tl3400734156_
                           _e3400834159_
                           _hd3400934163_
                           _tl3401034166_
                           _e3401134169_
                           _hd3401234173_
                           _tl3401334176_)
                    (let ((_L34179_ _hd3401234173_) (_L34181_ _hd3400934163_))
                      (if (gx#identifier? _L34181_)
                          (___kont4161241613_ _L34179_ _L34181_)
                          (if (gx#stx-pair? _hd3400934163_)
                              (let ((_e3402434068_
                                     (gx#syntax-e _hd3400934163_)))
                                (let ((_tl3402634075_ (##cdr _e3402434068_))
                                      (_hd3402534072_ (##car _e3402434068_)))
                                  (if (gx#stx-pair/null? _tl3401034166_)
                                      (let ((___splice4161641617_
                                             (gx#syntax-split-splice
                                              _tl3401034166_
                                              '0)))
                                        (let ((_tl3402934081_
                                               (##vector-ref
                                                ___splice4161641617_
                                                '1))
                                              (_target3402734078_
                                               (##vector-ref
                                                ___splice4161641617_
                                                '0)))
                                          (if (gx#stx-null? _tl3402934081_)
                                              (___match4166441665_
                                               _e3400534149_
                                               _hd3400634153_
                                               _tl3400734156_
                                               _e3400834159_
                                               _hd3400934163_
                                               _tl3401034166_
                                               _e3402434068_
                                               _hd3402534072_
                                               _tl3402634075_
                                               ___splice4161641617_
                                               _target3402734078_
                                               _tl3402934081_)
                                              (_g3400134041_))))
                                      (_g3400134041_))))
                              (_g3400134041_)))))))
            (if (gx#stx-pair? ___stx4160941610_)
                (let ((_e3400534149_ (gx#syntax-e ___stx4160941610_)))
                  (let ((_tl3400734156_ (##cdr _e3400534149_))
                        (_hd3400634153_ (##car _e3400534149_)))
                    (if (gx#stx-pair? _tl3400734156_)
                        (let ((_e3400834159_ (gx#syntax-e _tl3400734156_)))
                          (let ((_tl3401034166_ (##cdr _e3400834159_))
                                (_hd3400934163_ (##car _e3400834159_)))
                            (if (gx#stx-pair? _tl3401034166_)
                                (let ((_e3401134169_
                                       (gx#syntax-e _tl3401034166_)))
                                  (let ((_tl3401334176_ (##cdr _e3401134169_))
                                        (_hd3401234173_ (##car _e3401134169_)))
                                    (if (gx#stx-null? _tl3401334176_)
                                        (___match4163841639_
                                         _e3400534149_
                                         _hd3400634153_
                                         _tl3400734156_
                                         _e3400834159_
                                         _hd3400934163_
                                         _tl3401034166_
                                         _e3401134169_
                                         _hd3401234173_
                                         _tl3401334176_)
                                        (if (gx#stx-pair? _hd3400934163_)
                                            (let ((_e3402434068_
                                                   (gx#syntax-e
                                                    _hd3400934163_)))
                                              (let ((_tl3402634075_
                                                     (##cdr _e3402434068_))
                                                    (_hd3402534072_
                                                     (##car _e3402434068_)))
                                                (if (gx#stx-pair/null?
                                                     _tl3401034166_)
                                                    (let ((___splice4161641617_
                                                           (gx#syntax-split-splice
                                                            _tl3401034166_
                                                            '0)))
                                                      (let ((_tl3402934081_
                                                             (##vector-ref
                                                              ___splice4161641617_
                                                              '1))
                                                            (_target3402734078_
                                                             (##vector-ref
                                                              ___splice4161641617_
                                                              '0)))
                                                        (if (gx#stx-null?
                                                             _tl3402934081_)
                                                            (___match4166441665_
                                                             _e3400534149_
                                                             _hd3400634153_
                                                             _tl3400734156_
                                                             _e3400834159_
                                                             _hd3400934163_
                                                             _tl3401034166_
                                                             _e3402434068_
                                                             _hd3402534072_
                                                             _tl3402634075_
                                                             ___splice4161641617_
                                                             _target3402734078_
                                                             _tl3402934081_)
                                                            (_g3400134041_))))
                                                    (_g3400134041_))))
                                            (_g3400134041_)))))
                                (if (gx#stx-pair? _hd3400934163_)
                                    (let ((_e3402434068_
                                           (gx#syntax-e _hd3400934163_)))
                                      (let ((_tl3402634075_
                                             (##cdr _e3402434068_))
                                            (_hd3402534072_
                                             (##car _e3402434068_)))
                                        (if (gx#stx-pair/null? _tl3401034166_)
                                            (let ((___splice4161641617_
                                                   (gx#syntax-split-splice
                                                    _tl3401034166_
                                                    '0)))
                                              (let ((_tl3402934081_
                                                     (##vector-ref
                                                      ___splice4161641617_
                                                      '1))
                                                    (_target3402734078_
                                                     (##vector-ref
                                                      ___splice4161641617_
                                                      '0)))
                                                (if (gx#stx-null?
                                                     _tl3402934081_)
                                                    (___match4166441665_
                                                     _e3400534149_
                                                     _hd3400634153_
                                                     _tl3400734156_
                                                     _e3400834159_
                                                     _hd3400934163_
                                                     _tl3401034166_
                                                     _e3402434068_
                                                     _hd3402534072_
                                                     _tl3402634075_
                                                     ___splice4161641617_
                                                     _target3402734078_
                                                     _tl3402934081_)
                                                    (_g3400134041_))))
                                            (_g3400134041_))))
                                    (_g3400134041_)))))
                        (_g3400134041_))))
                (_g3400134041_)))))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx34201_)
      (let* ((___stx4166741668_ _$stx34201_)
             (_g3420634246_
              (lambda ()
                (gx#raise-syntax-error '#f '"Bad syntax" ___stx4166741668_))))
        (let ((___kont4167041671_
               (lambda (_L34384_ _L34386_)
                 (cons (gx#datum->syntax '#f 'defsyntax)
                       (cons _L34386_
                             (cons (cons (gx#datum->syntax
                                          '#f
                                          'make-export-expander)
                                         (cons _L34384_ '()))
                                   '())))))
              (___kont4167241673_
               (lambda (_L34313_ _L34315_ _L34316_ _L34317_)
                 (cons _L34317_
                       (cons _L34316_
                             (cons (cons (gx#datum->syntax '#f 'lambda)
                                         (cons _L34315_
                                               (foldr (lambda (_g3433834341_
                                                               _g3433934344_)
                                                        (cons _g3433834341_
                                                              _g3433934344_))
                                                      '()
                                                      _L34313_)))
                                   '()))))))
          (let* ((___match4172241723_
                  (lambda (_e3422334253_
                           _hd3422434257_
                           _tl3422534260_
                           _e3422634263_
                           _hd3422734267_
                           _tl3422834270_
                           _e3422934273_
                           _hd3423034277_
                           _tl3423134280_
                           ___splice4167441675_
                           _target3423234283_
                           _tl3423434286_)
                    (letrec ((_loop3423534289_
                              (lambda (_hd3423334293_ _body3423934296_)
                                (if (gx#stx-pair? _hd3423334293_)
                                    (let ((_e3423634299_
                                           (gx#syntax-e _hd3423334293_)))
                                      (let ((_lp-tl3423834306_
                                             (##cdr _e3423634299_))
                                            (_lp-hd3423734303_
                                             (##car _e3423634299_)))
                                        (_loop3423534289_
                                         _lp-tl3423834306_
                                         (cons _lp-hd3423734303_
                                               _body3423934296_))))
                                    (let ((_body3424034309_
                                           (reverse _body3423934296_)))
                                      (let ((_L34313_ _body3424034309_)
                                            (_L34315_ _tl3423134280_)
                                            (_L34316_ _hd3423034277_)
                                            (_L34317_ _hd3422434257_))
                                        (if (gx#identifier? _L34316_)
                                            (___kont4167241673_
                                             _L34313_
                                             _L34315_
                                             _L34316_
                                             _L34317_)
                                            (_g3420634246_))))))))
                      (_loop3423534289_ _target3423234283_ '()))))
                 (___match4169641697_
                  (lambda (_e3421034354_
                           _hd3421134358_
                           _tl3421234361_
                           _e3421334364_
                           _hd3421434368_
                           _tl3421534371_
                           _e3421634374_
                           _hd3421734378_
                           _tl3421834381_)
                    (let ((_L34384_ _hd3421734378_) (_L34386_ _hd3421434368_))
                      (if (gx#identifier? _L34386_)
                          (___kont4167041671_ _L34384_ _L34386_)
                          (if (gx#stx-pair? _hd3421434368_)
                              (let ((_e3422934273_
                                     (gx#syntax-e _hd3421434368_)))
                                (let ((_tl3423134280_ (##cdr _e3422934273_))
                                      (_hd3423034277_ (##car _e3422934273_)))
                                  (if (gx#stx-pair/null? _tl3421534371_)
                                      (let ((___splice4167441675_
                                             (gx#syntax-split-splice
                                              _tl3421534371_
                                              '0)))
                                        (let ((_tl3423434286_
                                               (##vector-ref
                                                ___splice4167441675_
                                                '1))
                                              (_target3423234283_
                                               (##vector-ref
                                                ___splice4167441675_
                                                '0)))
                                          (if (gx#stx-null? _tl3423434286_)
                                              (___match4172241723_
                                               _e3421034354_
                                               _hd3421134358_
                                               _tl3421234361_
                                               _e3421334364_
                                               _hd3421434368_
                                               _tl3421534371_
                                               _e3422934273_
                                               _hd3423034277_
                                               _tl3423134280_
                                               ___splice4167441675_
                                               _target3423234283_
                                               _tl3423434286_)
                                              (_g3420634246_))))
                                      (_g3420634246_))))
                              (_g3420634246_)))))))
            (if (gx#stx-pair? ___stx4166741668_)
                (let ((_e3421034354_ (gx#syntax-e ___stx4166741668_)))
                  (let ((_tl3421234361_ (##cdr _e3421034354_))
                        (_hd3421134358_ (##car _e3421034354_)))
                    (if (gx#stx-pair? _tl3421234361_)
                        (let ((_e3421334364_ (gx#syntax-e _tl3421234361_)))
                          (let ((_tl3421534371_ (##cdr _e3421334364_))
                                (_hd3421434368_ (##car _e3421334364_)))
                            (if (gx#stx-pair? _tl3421534371_)
                                (let ((_e3421634374_
                                       (gx#syntax-e _tl3421534371_)))
                                  (let ((_tl3421834381_ (##cdr _e3421634374_))
                                        (_hd3421734378_ (##car _e3421634374_)))
                                    (if (gx#stx-null? _tl3421834381_)
                                        (___match4169641697_
                                         _e3421034354_
                                         _hd3421134358_
                                         _tl3421234361_
                                         _e3421334364_
                                         _hd3421434368_
                                         _tl3421534371_
                                         _e3421634374_
                                         _hd3421734378_
                                         _tl3421834381_)
                                        (if (gx#stx-pair? _hd3421434368_)
                                            (let ((_e3422934273_
                                                   (gx#syntax-e
                                                    _hd3421434368_)))
                                              (let ((_tl3423134280_
                                                     (##cdr _e3422934273_))
                                                    (_hd3423034277_
                                                     (##car _e3422934273_)))
                                                (if (gx#stx-pair/null?
                                                     _tl3421534371_)
                                                    (let ((___splice4167441675_
                                                           (gx#syntax-split-splice
                                                            _tl3421534371_
                                                            '0)))
                                                      (let ((_tl3423434286_
                                                             (##vector-ref
                                                              ___splice4167441675_
                                                              '1))
                                                            (_target3423234283_
                                                             (##vector-ref
                                                              ___splice4167441675_
                                                              '0)))
                                                        (if (gx#stx-null?
                                                             _tl3423434286_)
                                                            (___match4172241723_
                                                             _e3421034354_
                                                             _hd3421134358_
                                                             _tl3421234361_
                                                             _e3421334364_
                                                             _hd3421434368_
                                                             _tl3421534371_
                                                             _e3422934273_
                                                             _hd3423034277_
                                                             _tl3423134280_
                                                             ___splice4167441675_
                                                             _target3423234283_
                                                             _tl3423434286_)
                                                            (_g3420634246_))))
                                                    (_g3420634246_))))
                                            (_g3420634246_)))))
                                (if (gx#stx-pair? _hd3421434368_)
                                    (let ((_e3422934273_
                                           (gx#syntax-e _hd3421434368_)))
                                      (let ((_tl3423134280_
                                             (##cdr _e3422934273_))
                                            (_hd3423034277_
                                             (##car _e3422934273_)))
                                        (if (gx#stx-pair/null? _tl3421534371_)
                                            (let ((___splice4167441675_
                                                   (gx#syntax-split-splice
                                                    _tl3421534371_
                                                    '0)))
                                              (let ((_tl3423434286_
                                                     (##vector-ref
                                                      ___splice4167441675_
                                                      '1))
                                                    (_target3423234283_
                                                     (##vector-ref
                                                      ___splice4167441675_
                                                      '0)))
                                                (if (gx#stx-null?
                                                     _tl3423434286_)
                                                    (___match4172241723_
                                                     _e3421034354_
                                                     _hd3421134358_
                                                     _tl3421234361_
                                                     _e3421334364_
                                                     _hd3421434368_
                                                     _tl3421534371_
                                                     _e3422934273_
                                                     _hd3423034277_
                                                     _tl3423134280_
                                                     ___splice4167441675_
                                                     _target3423234283_
                                                     _tl3423434286_)
                                                    (_g3420634246_))))
                                            (_g3420634246_))))
                                    (_g3420634246_)))))
                        (_g3420634246_))))
                (_g3420634246_)))))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx34406_)
      (let* ((___stx4172541726_ _$stx34406_)
             (_g3441134451_
              (lambda ()
                (gx#raise-syntax-error '#f '"Bad syntax" ___stx4172541726_))))
        (let ((___kont4172841729_
               (lambda (_L34589_ _L34591_)
                 (cons (gx#datum->syntax '#f 'defsyntax)
                       (cons _L34591_
                             (cons (cons (gx#datum->syntax
                                          '#f
                                          'make-import-export-expander)
                                         (cons _L34589_ '()))
                                   '())))))
              (___kont4173041731_
               (lambda (_L34518_ _L34520_ _L34521_ _L34522_)
                 (cons _L34522_
                       (cons _L34521_
                             (cons (cons (gx#datum->syntax '#f 'lambda)
                                         (cons _L34520_
                                               (foldr (lambda (_g3454334546_
                                                               _g3454434549_)
                                                        (cons _g3454334546_
                                                              _g3454434549_))
                                                      '()
                                                      _L34518_)))
                                   '()))))))
          (let* ((___match4178041781_
                  (lambda (_e3442834458_
                           _hd3442934462_
                           _tl3443034465_
                           _e3443134468_
                           _hd3443234472_
                           _tl3443334475_
                           _e3443434478_
                           _hd3443534482_
                           _tl3443634485_
                           ___splice4173241733_
                           _target3443734488_
                           _tl3443934491_)
                    (letrec ((_loop3444034494_
                              (lambda (_hd3443834498_ _body3444434501_)
                                (if (gx#stx-pair? _hd3443834498_)
                                    (let ((_e3444134504_
                                           (gx#syntax-e _hd3443834498_)))
                                      (let ((_lp-tl3444334511_
                                             (##cdr _e3444134504_))
                                            (_lp-hd3444234508_
                                             (##car _e3444134504_)))
                                        (_loop3444034494_
                                         _lp-tl3444334511_
                                         (cons _lp-hd3444234508_
                                               _body3444434501_))))
                                    (let ((_body3444534514_
                                           (reverse _body3444434501_)))
                                      (let ((_L34518_ _body3444534514_)
                                            (_L34520_ _tl3443634485_)
                                            (_L34521_ _hd3443534482_)
                                            (_L34522_ _hd3442934462_))
                                        (if (gx#identifier? _L34521_)
                                            (___kont4173041731_
                                             _L34518_
                                             _L34520_
                                             _L34521_
                                             _L34522_)
                                            (_g3441134451_))))))))
                      (_loop3444034494_ _target3443734488_ '()))))
                 (___match4175441755_
                  (lambda (_e3441534559_
                           _hd3441634563_
                           _tl3441734566_
                           _e3441834569_
                           _hd3441934573_
                           _tl3442034576_
                           _e3442134579_
                           _hd3442234583_
                           _tl3442334586_)
                    (let ((_L34589_ _hd3442234583_) (_L34591_ _hd3441934573_))
                      (if (gx#identifier? _L34591_)
                          (___kont4172841729_ _L34589_ _L34591_)
                          (if (gx#stx-pair? _hd3441934573_)
                              (let ((_e3443434478_
                                     (gx#syntax-e _hd3441934573_)))
                                (let ((_tl3443634485_ (##cdr _e3443434478_))
                                      (_hd3443534482_ (##car _e3443434478_)))
                                  (if (gx#stx-pair/null? _tl3442034576_)
                                      (let ((___splice4173241733_
                                             (gx#syntax-split-splice
                                              _tl3442034576_
                                              '0)))
                                        (let ((_tl3443934491_
                                               (##vector-ref
                                                ___splice4173241733_
                                                '1))
                                              (_target3443734488_
                                               (##vector-ref
                                                ___splice4173241733_
                                                '0)))
                                          (if (gx#stx-null? _tl3443934491_)
                                              (___match4178041781_
                                               _e3441534559_
                                               _hd3441634563_
                                               _tl3441734566_
                                               _e3441834569_
                                               _hd3441934573_
                                               _tl3442034576_
                                               _e3443434478_
                                               _hd3443534482_
                                               _tl3443634485_
                                               ___splice4173241733_
                                               _target3443734488_
                                               _tl3443934491_)
                                              (_g3441134451_))))
                                      (_g3441134451_))))
                              (_g3441134451_)))))))
            (if (gx#stx-pair? ___stx4172541726_)
                (let ((_e3441534559_ (gx#syntax-e ___stx4172541726_)))
                  (let ((_tl3441734566_ (##cdr _e3441534559_))
                        (_hd3441634563_ (##car _e3441534559_)))
                    (if (gx#stx-pair? _tl3441734566_)
                        (let ((_e3441834569_ (gx#syntax-e _tl3441734566_)))
                          (let ((_tl3442034576_ (##cdr _e3441834569_))
                                (_hd3441934573_ (##car _e3441834569_)))
                            (if (gx#stx-pair? _tl3442034576_)
                                (let ((_e3442134579_
                                       (gx#syntax-e _tl3442034576_)))
                                  (let ((_tl3442334586_ (##cdr _e3442134579_))
                                        (_hd3442234583_ (##car _e3442134579_)))
                                    (if (gx#stx-null? _tl3442334586_)
                                        (___match4175441755_
                                         _e3441534559_
                                         _hd3441634563_
                                         _tl3441734566_
                                         _e3441834569_
                                         _hd3441934573_
                                         _tl3442034576_
                                         _e3442134579_
                                         _hd3442234583_
                                         _tl3442334586_)
                                        (if (gx#stx-pair? _hd3441934573_)
                                            (let ((_e3443434478_
                                                   (gx#syntax-e
                                                    _hd3441934573_)))
                                              (let ((_tl3443634485_
                                                     (##cdr _e3443434478_))
                                                    (_hd3443534482_
                                                     (##car _e3443434478_)))
                                                (if (gx#stx-pair/null?
                                                     _tl3442034576_)
                                                    (let ((___splice4173241733_
                                                           (gx#syntax-split-splice
                                                            _tl3442034576_
                                                            '0)))
                                                      (let ((_tl3443934491_
                                                             (##vector-ref
                                                              ___splice4173241733_
                                                              '1))
                                                            (_target3443734488_
                                                             (##vector-ref
                                                              ___splice4173241733_
                                                              '0)))
                                                        (if (gx#stx-null?
                                                             _tl3443934491_)
                                                            (___match4178041781_
                                                             _e3441534559_
                                                             _hd3441634563_
                                                             _tl3441734566_
                                                             _e3441834569_
                                                             _hd3441934573_
                                                             _tl3442034576_
                                                             _e3443434478_
                                                             _hd3443534482_
                                                             _tl3443634485_
                                                             ___splice4173241733_
                                                             _target3443734488_
                                                             _tl3443934491_)
                                                            (_g3441134451_))))
                                                    (_g3441134451_))))
                                            (_g3441134451_)))))
                                (if (gx#stx-pair? _hd3441934573_)
                                    (let ((_e3443434478_
                                           (gx#syntax-e _hd3441934573_)))
                                      (let ((_tl3443634485_
                                             (##cdr _e3443434478_))
                                            (_hd3443534482_
                                             (##car _e3443434478_)))
                                        (if (gx#stx-pair/null? _tl3442034576_)
                                            (let ((___splice4173241733_
                                                   (gx#syntax-split-splice
                                                    _tl3442034576_
                                                    '0)))
                                              (let ((_tl3443934491_
                                                     (##vector-ref
                                                      ___splice4173241733_
                                                      '1))
                                                    (_target3443734488_
                                                     (##vector-ref
                                                      ___splice4173241733_
                                                      '0)))
                                                (if (gx#stx-null?
                                                     _tl3443934491_)
                                                    (___match4178041781_
                                                     _e3441534559_
                                                     _hd3441634563_
                                                     _tl3441734566_
                                                     _e3441834569_
                                                     _hd3441934573_
                                                     _tl3442034576_
                                                     _e3443434478_
                                                     _hd3443534482_
                                                     _tl3443634485_
                                                     ___splice4173241733_
                                                     _target3443734488_
                                                     _tl3443934491_)
                                                    (_g3441134451_))))
                                            (_g3441134451_))))
                                    (_g3441134451_)))))
                        (_g3441134451_))))
                (_g3441134451_)))))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx34611_)
       (let* ((_g3461434634_
               (lambda (_g3461534630_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3461534630_)))
              (_g3461334705_
               (lambda (_g3461534638_)
                 (if (gx#stx-pair? _g3461534638_)
                     (let ((_e3461734641_ (gx#syntax-e _g3461534638_)))
                       (let ((_hd3461834645_ (##car _e3461734641_))
                             (_tl3461934648_ (##cdr _e3461734641_)))
                         (if (gx#stx-pair/null? _tl3461934648_)
                             (let ((_g42023_
                                    (gx#syntax-split-splice
                                     _tl3461934648_
                                     '0)))
                               (begin
                                 (let ((_g42024_
                                        (if (##values? _g42023_)
                                            (##vector-length _g42023_)
                                            1)))
                                   (if (not (##fx= _g42024_ 2))
                                       (error "Context expects 2 values"
                                              _g42024_)))
                                 (let ((_target3462034651_
                                        (##vector-ref _g42023_ 0))
                                       (_tl3462234654_
                                        (##vector-ref _g42023_ 1)))
                                   (if (gx#stx-null? _tl3462234654_)
                                       (letrec ((_loop3462334657_
                                                 (lambda (_hd3462134661_
                                                          _body3462734664_)
                                                   (if (gx#stx-pair?
                                                        _hd3462134661_)
                                                       (let ((_e3462434667_
                                                              (gx#syntax-e
                                                               _hd3462134661_)))
                                                         (let ((_lp-hd3462534671_
                                                                (##car _e3462434667_))
                                                               (_lp-tl3462634674_
                                                                (##cdr _e3462434667_)))
                                                           (_loop3462334657_
                                                            _lp-tl3462634674_
                                                            (cons _lp-hd3462534671_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _body3462734664_))))
               (let ((_body3462834677_ (reverse _body3462734664_)))
                 ((lambda (_L34681_)
                    (cons 'phi:
                          (cons '1
                                (foldr (lambda (_g3469634699_ _g3469734702_)
                                         (cons _g3469634699_ _g3469734702_))
                                       '()
                                       _L34681_))))
                  _body3462834677_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                         (_loop3462334657_
                                          _target3462034651_
                                          '()))
                                       (_g3461434634_ _g3461534638_)))))
                             (_g3461434634_ _g3461534638_))))
                     (_g3461434634_ _g3461534638_)))))
         (_g3461334705_ _stx34611_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx34710_)
       (let* ((_g3471334733_
               (lambda (_g3471434729_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3471434729_)))
              (_g3471234804_
               (lambda (_g3471434737_)
                 (if (gx#stx-pair? _g3471434737_)
                     (let ((_e3471634740_ (gx#syntax-e _g3471434737_)))
                       (let ((_hd3471734744_ (##car _e3471634740_))
                             (_tl3471834747_ (##cdr _e3471634740_)))
                         (if (gx#stx-pair/null? _tl3471834747_)
                             (let ((_g42025_
                                    (gx#syntax-split-splice
                                     _tl3471834747_
                                     '0)))
                               (begin
                                 (let ((_g42026_
                                        (if (##values? _g42025_)
                                            (##vector-length _g42025_)
                                            1)))
                                   (if (not (##fx= _g42026_ 2))
                                       (error "Context expects 2 values"
                                              _g42026_)))
                                 (let ((_target3471934750_
                                        (##vector-ref _g42025_ 0))
                                       (_tl3472134753_
                                        (##vector-ref _g42025_ 1)))
                                   (if (gx#stx-null? _tl3472134753_)
                                       (letrec ((_loop3472234756_
                                                 (lambda (_hd3472034760_
                                                          _body3472634763_)
                                                   (if (gx#stx-pair?
                                                        _hd3472034760_)
                                                       (let ((_e3472334766_
                                                              (gx#syntax-e
                                                               _hd3472034760_)))
                                                         (let ((_lp-hd3472434770_
                                                                (##car _e3472334766_))
                                                               (_lp-tl3472534773_
                                                                (##cdr _e3472334766_)))
                                                           (_loop3472234756_
                                                            _lp-tl3472534773_
                                                            (cons _lp-hd3472434770_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _body3472634763_))))
               (let ((_body3472734776_ (reverse _body3472634763_)))
                 ((lambda (_L34780_)
                    (cons 'phi:
                          (cons '-1
                                (foldr (lambda (_g3479534798_ _g3479634801_)
                                         (cons _g3479534798_ _g3479634801_))
                                       '()
                                       _L34780_))))
                  _body3472734776_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                         (_loop3472234756_
                                          _target3471934750_
                                          '()))
                                       (_g3471334733_ _g3471434737_)))))
                             (_g3471334733_ _g3471434737_))))
                     (_g3471334733_ _g3471434737_)))))
         (_g3471234804_ _stx34710_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx34809_)
       (let* ((_g3481234836_
               (lambda (_g3481334832_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3481334832_)))
              (_g3481134958_
               (lambda (_g3481334840_)
                 (if (gx#stx-pair? _g3481334840_)
                     (let ((_e3481634843_ (gx#syntax-e _g3481334840_)))
                       (let ((_hd3481734847_ (##car _e3481634843_))
                             (_tl3481834850_ (##cdr _e3481634843_)))
                         (if (gx#stx-pair? _tl3481834850_)
                             (let ((_e3481934853_
                                    (gx#syntax-e _tl3481834850_)))
                               (let ((_hd3482034857_ (##car _e3481934853_))
                                     (_tl3482134860_ (##cdr _e3481934853_)))
                                 (if (gx#stx-pair/null? _tl3482134860_)
                                     (let ((_g42027_
                                            (gx#syntax-split-splice
                                             _tl3482134860_
                                             '0)))
                                       (begin
                                         (let ((_g42028_
                                                (if (##values? _g42027_)
                                                    (##vector-length _g42027_)
                                                    1)))
                                           (if (not (##fx= _g42028_ 2))
                                               (error "Context expects 2 values"
                                                      _g42028_)))
                                         (let ((_target3482234863_
                                                (##vector-ref _g42027_ 0))
                                               (_tl3482434866_
                                                (##vector-ref _g42027_ 1)))
                                           (if (gx#stx-null? _tl3482434866_)
                                               (letrec ((_loop3482534869_
                                                         (lambda (_hd3482334873_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _id3482934876_)
                   (if (gx#stx-pair? _hd3482334873_)
                       (let ((_e3482634879_ (gx#syntax-e _hd3482334873_)))
                         (let ((_lp-hd3482734883_ (##car _e3482634879_))
                               (_lp-tl3482834886_ (##cdr _e3482634879_)))
                           (_loop3482534869_
                            _lp-tl3482834886_
                            (cons _lp-hd3482734883_ _id3482934876_))))
                       (let ((_id3483034889_ (reverse _id3482934876_)))
                         ((lambda (_L34893_ _L34895_)
                            (if (gx#identifier-list?
                                 (foldr (lambda (_g3491234915_ _g3491334918_)
                                          (cons _g3491234915_ _g3491334918_))
                                        '()
                                        _L34893_))
                                (let* ((_keys34929_
                                        (gx#stx-map
                                         gx#core-identifier-key
                                         (foldr (lambda (_g3492034923_
                                                         _g3492134926_)
                                                  (cons _g3492034923_
                                                        _g3492134926_))
                                                '()
                                                _L34893_)))
                                       (_keytab34940_
                                        (let ((_ht34932_ (make-hash-table)))
                                          (for-each
                                           (lambda (_g3493434936_)
                                             (hash-put!
                                              _ht34932_
                                              _g3493434936_
                                              '#t))
                                           _keys34929_)
                                          _ht34932_))
                                       (_imports34943_
                                        (gx#core-expand-import-source
                                         _L34895_))
                                       (_fold-e34953_
                                        (letrec ((_fold-e34946_
                                                  (lambda (_in34949_ _r34951_)
                                                    (if (gx#module-import?
                                                         _in34949_)
                                                        (if (hash-get
                                                             _keytab34940_
                                                             (gx#module-import-name
                                                              _in34949_))
                                                            (cons _in34949_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _r34951_)
                    _r34951_)
                (if (gx#import-set? _in34949_)
                    (foldl _fold-e34946_
                           _r34951_
                           (gx#import-set-imports _in34949_))
                    _r34951_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                          _fold-e34946_)))
                                  (cons 'begin:
                                        (foldl _fold-e34953_
                                               '()
                                               _imports34943_)))
                                (_g3481234836_ _g3481334840_)))
                          _id3483034889_
                          _hd3482034857_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                 (_loop3482534869_
                                                  _target3482234863_
                                                  '()))
                                               (_g3481234836_
                                                _g3481334840_)))))
                                     (_g3481234836_ _g3481334840_))))
                             (_g3481234836_ _g3481334840_))))
                     (_g3481234836_ _g3481334840_)))))
         (_g3481134958_ _stx34809_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx34963_)
       (let* ((_g3496634990_
               (lambda (_g3496734986_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3496734986_)))
              (_g3496535112_
               (lambda (_g3496734994_)
                 (if (gx#stx-pair? _g3496734994_)
                     (let ((_e3497034997_ (gx#syntax-e _g3496734994_)))
                       (let ((_hd3497135001_ (##car _e3497034997_))
                             (_tl3497235004_ (##cdr _e3497034997_)))
                         (if (gx#stx-pair? _tl3497235004_)
                             (let ((_e3497335007_
                                    (gx#syntax-e _tl3497235004_)))
                               (let ((_hd3497435011_ (##car _e3497335007_))
                                     (_tl3497535014_ (##cdr _e3497335007_)))
                                 (if (gx#stx-pair/null? _tl3497535014_)
                                     (let ((_g42029_
                                            (gx#syntax-split-splice
                                             _tl3497535014_
                                             '0)))
                                       (begin
                                         (let ((_g42030_
                                                (if (##values? _g42029_)
                                                    (##vector-length _g42029_)
                                                    1)))
                                           (if (not (##fx= _g42030_ 2))
                                               (error "Context expects 2 values"
                                                      _g42030_)))
                                         (let ((_target3497635017_
                                                (##vector-ref _g42029_ 0))
                                               (_tl3497835020_
                                                (##vector-ref _g42029_ 1)))
                                           (if (gx#stx-null? _tl3497835020_)
                                               (letrec ((_loop3497935023_
                                                         (lambda (_hd3497735027_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _id3498335030_)
                   (if (gx#stx-pair? _hd3497735027_)
                       (let ((_e3498035033_ (gx#syntax-e _hd3497735027_)))
                         (let ((_lp-hd3498135037_ (##car _e3498035033_))
                               (_lp-tl3498235040_ (##cdr _e3498035033_)))
                           (_loop3497935023_
                            _lp-tl3498235040_
                            (cons _lp-hd3498135037_ _id3498335030_))))
                       (let ((_id3498435043_ (reverse _id3498335030_)))
                         ((lambda (_L35047_ _L35049_)
                            (if (gx#identifier-list?
                                 (foldr (lambda (_g3506635069_ _g3506735072_)
                                          (cons _g3506635069_ _g3506735072_))
                                        '()
                                        _L35047_))
                                (let* ((_keys35083_
                                        (gx#stx-map
                                         gx#core-identifier-key
                                         (foldr (lambda (_g3507435077_
                                                         _g3507535080_)
                                                  (cons _g3507435077_
                                                        _g3507535080_))
                                                '()
                                                _L35047_)))
                                       (_keytab35094_
                                        (let ((_ht35086_ (make-hash-table)))
                                          (for-each
                                           (lambda (_g3508835090_)
                                             (hash-put!
                                              _ht35086_
                                              _g3508835090_
                                              '#t))
                                           _keys35083_)
                                          _ht35086_))
                                       (_imports35097_
                                        (gx#core-expand-import-source
                                         _L35049_))
                                       (_fold-e35107_
                                        (letrec ((_fold-e35100_
                                                  (lambda (_in35103_ _r35105_)
                                                    (if (gx#module-import?
                                                         _in35103_)
                                                        (if (hash-get
                                                             _keytab35094_
                                                             (gx#module-import-name
                                                              _in35103_))
                                                            _r35105_
                                                            (cons _in35103_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _r35105_))
                (if (gx#import-set? _in35103_)
                    (foldl _fold-e35100_
                           _r35105_
                           (gx#import-set-imports _in35103_))
                    (cons _in35103_ _r35105_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                          _fold-e35100_)))
                                  (cons 'begin:
                                        (foldl _fold-e35107_
                                               '()
                                               _imports35097_)))
                                (_g3496634990_ _g3496734994_)))
                          _id3498435043_
                          _hd3497435011_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                 (_loop3497935023_
                                                  _target3497635017_
                                                  '()))
                                               (_g3496634990_
                                                _g3496734994_)))))
                                     (_g3496634990_ _g3496734994_))))
                             (_g3496634990_ _g3496734994_))))
                     (_g3496634990_ _g3496734994_)))))
         (_g3496535112_ _stx34963_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in35164_ _rename35166_)
      (gx#make-module-import
       (gx#module-import-source _in35164_)
       _rename35166_
       (gx#module-import-phi _in35164_)
       (gx#module-import-weak? _in35164_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name35117_ _pre35119_)
      (let* ((_name3512035128_ _name35117_)
             (_else3512235140_
              (lambda () (make-symbol _pre35119_ _name35117_)))
             (_K3512435148_
              (lambda (_mark35144_ _id35146_)
                (cons (make-symbol _pre35119_ _id35146_) _mark35144_))))
        (if (##pair? _name3512035128_)
            (let ((_hd3512535152_ (##car _name3512035128_))
                  (_tl3512635155_ (##cdr _name3512035128_)))
              (let* ((_id35158_ _hd3512535152_) (_mark35161_ _tl3512635155_))
                (_K3512435148_ _mark35161_ _id35158_)))
            (_else3512235140_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx35168_)
       (let* ((_g3517135204_
               (lambda (_g3517235200_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3517235200_)))
              (_g3517035390_
               (lambda (_g3517235208_)
                 (if (gx#stx-pair? _g3517235208_)
                     (let ((_e3517635211_ (gx#syntax-e _g3517235208_)))
                       (let ((_hd3517735215_ (##car _e3517635211_))
                             (_tl3517835218_ (##cdr _e3517635211_)))
                         (if (gx#stx-pair? _tl3517835218_)
                             (let ((_e3517935221_
                                    (gx#syntax-e _tl3517835218_)))
                               (let ((_hd3518035225_ (##car _e3517935221_))
                                     (_tl3518135228_ (##cdr _e3517935221_)))
                                 (if (gx#stx-pair/null? _tl3518135228_)
                                     (let ((_g42031_
                                            (gx#syntax-split-splice
                                             _tl3518135228_
                                             '0)))
                                       (begin
                                         (let ((_g42032_
                                                (if (##values? _g42031_)
                                                    (##vector-length _g42031_)
                                                    1)))
                                           (if (not (##fx= _g42032_ 2))
                                               (error "Context expects 2 values"
                                                      _g42032_)))
                                         (let ((_target3518235231_
                                                (##vector-ref _g42031_ 0))
                                               (_tl3518435234_
                                                (##vector-ref _g42031_ 1)))
                                           (if (gx#stx-null? _tl3518435234_)
                                               (letrec ((_loop3518535237_
                                                         (lambda (_hd3518335241_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _new-id3518935244_
                          _id3519035246_)
                   (if (gx#stx-pair? _hd3518335241_)
                       (let ((_e3518635249_ (gx#syntax-e _hd3518335241_)))
                         (let ((_lp-hd3518735253_ (##car _e3518635249_))
                               (_lp-tl3518835256_ (##cdr _e3518635249_)))
                           (if (gx#stx-pair? _lp-hd3518735253_)
                               (let ((_e3519335259_
                                      (gx#syntax-e _lp-hd3518735253_)))
                                 (let ((_hd3519435263_ (##car _e3519335259_))
                                       (_tl3519535266_ (##cdr _e3519335259_)))
                                   (if (gx#stx-pair? _tl3519535266_)
                                       (let ((_e3519635269_
                                              (gx#syntax-e _tl3519535266_)))
                                         (let ((_hd3519735273_
                                                (##car _e3519635269_))
                                               (_tl3519835276_
                                                (##cdr _e3519635269_)))
                                           (if (gx#stx-null? _tl3519835276_)
                                               (_loop3518535237_
                                                _lp-tl3518835256_
                                                (cons _hd3519735273_
                                                      _new-id3518935244_)
                                                (cons _hd3519435263_
                                                      _id3519035246_))
                                               (_g3517135204_ _g3517235208_))))
                                       (_g3517135204_ _g3517235208_))))
                               (_g3517135204_ _g3517235208_))))
                       (let ((_new-id3519135279_ (reverse _new-id3518935244_))
                             (_id3519235282_ (reverse _id3519035246_)))
                         ((lambda (_L35285_ _L35287_ _L35288_)
                            (if (and (gx#identifier-list?
                                      (foldr (lambda (_g3530635309_
                                                      _g3530735312_)
                                               (cons _g3530635309_
                                                     _g3530735312_))
                                             '()
                                             _L35287_))
                                     (gx#identifier-list?
                                      (foldr (lambda (_g3531435317_
                                                      _g3531535320_)
                                               (cons _g3531435317_
                                                     _g3531535320_))
                                             '()
                                             _L35285_)))
                                (let* ((_keytab35323_ (make-hash-table))
                                       (_found35326_ (make-hash-table))
                                       (_g42033_
                                        (for-each
                                         (lambda (_id35329_ _new-id35331_)
                                           (hash-put!
                                            _keytab35323_
                                            (gx#core-identifier-key _id35329_)
                                            (gx#core-identifier-key
                                             _new-id35331_)))
                                         (foldr (lambda (_g3533235335_
                                                         _g3533335338_)
                                                  (cons _g3533235335_
                                                        _g3533335338_))
                                                '()
                                                _L35287_)
                                         (foldr (lambda (_g3534035343_
                                                         _g3534135346_)
                                                  (cons _g3534035343_
                                                        _g3534135346_))
                                                '()
                                                _L35285_)))
                                       (_imports35351_
                                        (gx#core-expand-import-source
                                         _L35288_))
                                       (_fold-e35371_
                                        (letrec ((_fold-e35354_
                                                  (lambda (_in35357_ _r35359_)
                                                    (if (gx#module-import?
                                                         _in35357_)
                                                        (let* ((_name35361_
                                                                (gx#module-import-name
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _in35357_))
                       (_$e35364_ (hash-get _keytab35323_ _name35361_)))
                  (if _$e35364_
                      ((lambda (_rename35368_)
                         (hash-put! _found35326_ _name35361_ '#t)
                         (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                _in35357_
                                _rename35368_)
                               _r35359_))
                       _$e35364_)
                      (cons _in35357_ _r35359_)))
                (if (gx#import-set? _in35357_)
                    (foldl _fold-e35354_
                           _r35359_
                           (gx#import-set-imports _in35357_))
                    (cons _in35357_ _r35359_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                          _fold-e35354_))
                                       (_new-imports35374_
                                        (foldl _fold-e35371_
                                               '()
                                               _imports35351_)))
                                  (for-each
                                   (lambda (_id35379_)
                                     (if (hash-get
                                          _found35326_
                                          (gx#core-identifier-key _id35379_))
                                         '#!void
                                         (gx#raise-syntax-error
                                          '#f
                                          '"Bad syntax; identifier is not in the import set"
                                          _stx35168_
                                          _id35379_)))
                                   (foldr (lambda (_g3538135384_ _g3538235387_)
                                            (cons _g3538135384_ _g3538235387_))
                                          '()
                                          _L35287_))
                                  (cons 'begin: _new-imports35374_))
                                (_g3517135204_ _g3517235208_)))
                          _new-id3519135279_
                          _id3519235282_
                          _hd3518035225_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                 (_loop3518535237_
                                                  _target3518235231_
                                                  '()
                                                  '()))
                                               (_g3517135204_
                                                _g3517235208_)))))
                                     (_g3517135204_ _g3517235208_))))
                             (_g3517135204_ _g3517235208_))))
                     (_g3517135204_ _g3517235208_)))))
         (_g3517035390_ _stx35168_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx35396_)
       (let* ((_g3539935417_
               (lambda (_g3540035413_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3540035413_)))
              (_g3539835496_
               (lambda (_g3540035421_)
                 (if (gx#stx-pair? _g3540035421_)
                     (let ((_e3540335424_ (gx#syntax-e _g3540035421_)))
                       (let ((_hd3540435428_ (##car _e3540335424_))
                             (_tl3540535431_ (##cdr _e3540335424_)))
                         (if (gx#stx-pair? _tl3540535431_)
                             (let ((_e3540635434_
                                    (gx#syntax-e _tl3540535431_)))
                               (let ((_hd3540735438_ (##car _e3540635434_))
                                     (_tl3540835441_ (##cdr _e3540635434_)))
                                 (if (gx#stx-pair? _tl3540835441_)
                                     (let ((_e3540935444_
                                            (gx#syntax-e _tl3540835441_)))
                                       (let ((_hd3541035448_
                                              (##car _e3540935444_))
                                             (_tl3541135451_
                                              (##cdr _e3540935444_)))
                                         (if (gx#stx-null? _tl3541135451_)
                                             ((lambda (_L35454_ _L35456_)
                                                (if (gx#identifier? _L35454_)
                                                    (let* ((_pre35472_
                                                            (gx#stx-e
                                                             _L35454_))
                                                           (_imports35475_
                                                            (gx#core-expand-import-source
                                                             _L35456_))
                                                           (_rename-e35481_
                                                            (lambda (_name35478_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name35478_
                                                               _pre35472_)))
                                                           (_fold-e35491_
                                                            (letrec ((_fold-e35484_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in35487_ _r35489_)
                                (if (gx#module-import? _in35487_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in35487_
                                           (_rename-e35481_
                                            (gx#module-import-name _in35487_)))
                                          _r35489_)
                                    (if (gx#import-set? _in35487_)
                                        (foldl _fold-e35484_
                                               _r35489_
                                               (gx#import-set-imports
                                                _in35487_))
                                        (cons _in35487_ _r35489_))))))
                      _fold-e35484_)))
              (cons 'begin: (foldl _fold-e35491_ '() _imports35475_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3539935417_
                                                     _g3540035421_)))
                                              _hd3541035448_
                                              _hd3540735438_)
                                             (_g3539935417_ _g3540035421_))))
                                     (_g3539935417_ _g3540035421_))))
                             (_g3539935417_ _g3540035421_))))
                     (_g3539935417_ _g3540035421_)))))
         (_g3539835496_ _stx35396_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx35500_)
       (let* ((_g3550335527_
               (lambda (_g3550435523_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3550435523_)))
              (_g3550235649_
               (lambda (_g3550435531_)
                 (if (gx#stx-pair? _g3550435531_)
                     (let ((_e3550735534_ (gx#syntax-e _g3550435531_)))
                       (let ((_hd3550835538_ (##car _e3550735534_))
                             (_tl3550935541_ (##cdr _e3550735534_)))
                         (if (gx#stx-pair? _tl3550935541_)
                             (let ((_e3551035544_
                                    (gx#syntax-e _tl3550935541_)))
                               (let ((_hd3551135548_ (##car _e3551035544_))
                                     (_tl3551235551_ (##cdr _e3551035544_)))
                                 (if (gx#stx-pair/null? _tl3551235551_)
                                     (let ((_g42034_
                                            (gx#syntax-split-splice
                                             _tl3551235551_
                                             '0)))
                                       (begin
                                         (let ((_g42035_
                                                (if (##values? _g42034_)
                                                    (##vector-length _g42034_)
                                                    1)))
                                           (if (not (##fx= _g42035_ 2))
                                               (error "Context expects 2 values"
                                                      _g42035_)))
                                         (let ((_target3551335554_
                                                (##vector-ref _g42034_ 0))
                                               (_tl3551535557_
                                                (##vector-ref _g42034_ 1)))
                                           (if (gx#stx-null? _tl3551535557_)
                                               (letrec ((_loop3551635560_
                                                         (lambda (_hd3551435564_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _id3552035567_)
                   (if (gx#stx-pair? _hd3551435564_)
                       (let ((_e3551735570_ (gx#syntax-e _hd3551435564_)))
                         (let ((_lp-hd3551835574_ (##car _e3551735570_))
                               (_lp-tl3551935577_ (##cdr _e3551735570_)))
                           (_loop3551635560_
                            _lp-tl3551935577_
                            (cons _lp-hd3551835574_ _id3552035567_))))
                       (let ((_id3552135580_ (reverse _id3552035567_)))
                         ((lambda (_L35584_ _L35586_)
                            (if (gx#identifier-list?
                                 (foldr (lambda (_g3560335606_ _g3560435609_)
                                          (cons _g3560335606_ _g3560435609_))
                                        '()
                                        _L35584_))
                                (let* ((_keys35620_
                                        (gx#stx-map
                                         gx#core-identifier-key
                                         (foldr (lambda (_g3561135614_
                                                         _g3561235617_)
                                                  (cons _g3561135614_
                                                        _g3561235617_))
                                                '()
                                                _L35584_)))
                                       (_keytab35631_
                                        (let ((_ht35623_ (make-hash-table)))
                                          (for-each
                                           (lambda (_g3562535627_)
                                             (hash-put!
                                              _ht35623_
                                              _g3562535627_
                                              '#t))
                                           _keys35620_)
                                          _ht35623_))
                                       (_exports35634_
                                        (gx#core-expand-export-source
                                         _L35586_))
                                       (_fold-e35644_
                                        (letrec ((_fold-e35637_
                                                  (lambda (_out35640_ _r35642_)
                                                    (if (gx#module-export?
                                                         _out35640_)
                                                        (if (hash-get
                                                             _keytab35631_
                                                             (gx#module-export-name
                                                              _out35640_))
                                                            _r35642_
                                                            (cons _out35640_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _r35642_))
                (if (gx#export-set? _out35640_)
                    (foldl _fold-e35637_
                           _r35642_
                           (gx#export-set-exports _out35640_))
                    _r35642_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                          _fold-e35637_)))
                                  (cons 'begin:
                                        (foldl _fold-e35644_
                                               '()
                                               _exports35634_)))
                                (_g3550335527_ _g3550435531_)))
                          _id3552135580_
                          _hd3551135548_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                 (_loop3551635560_
                                                  _target3551335554_
                                                  '()))
                                               (_g3550335527_
                                                _g3550435531_)))))
                                     (_g3550335527_ _g3550435531_))))
                             (_g3550335527_ _g3550435531_))))
                     (_g3550335527_ _g3550435531_)))))
         (_g3550235649_ _stx35500_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out35654_ _rename35656_)
      (gx#make-module-export
       (gx#module-export-context _out35654_)
       (gx#module-export-key _out35654_)
       (gx#module-export-phi _out35654_)
       _rename35656_
       (gx#module-export-weak? _out35654_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx35658_)
       (let* ((_g3566135694_
               (lambda (_g3566235690_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3566235690_)))
              (_g3566035880_
               (lambda (_g3566235698_)
                 (if (gx#stx-pair? _g3566235698_)
                     (let ((_e3566635701_ (gx#syntax-e _g3566235698_)))
                       (let ((_hd3566735705_ (##car _e3566635701_))
                             (_tl3566835708_ (##cdr _e3566635701_)))
                         (if (gx#stx-pair? _tl3566835708_)
                             (let ((_e3566935711_
                                    (gx#syntax-e _tl3566835708_)))
                               (let ((_hd3567035715_ (##car _e3566935711_))
                                     (_tl3567135718_ (##cdr _e3566935711_)))
                                 (if (gx#stx-pair/null? _tl3567135718_)
                                     (let ((_g42036_
                                            (gx#syntax-split-splice
                                             _tl3567135718_
                                             '0)))
                                       (begin
                                         (let ((_g42037_
                                                (if (##values? _g42036_)
                                                    (##vector-length _g42036_)
                                                    1)))
                                           (if (not (##fx= _g42037_ 2))
                                               (error "Context expects 2 values"
                                                      _g42037_)))
                                         (let ((_target3567235721_
                                                (##vector-ref _g42036_ 0))
                                               (_tl3567435724_
                                                (##vector-ref _g42036_ 1)))
                                           (if (gx#stx-null? _tl3567435724_)
                                               (letrec ((_loop3567535727_
                                                         (lambda (_hd3567335731_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _new-id3567935734_
                          _id3568035736_)
                   (if (gx#stx-pair? _hd3567335731_)
                       (let ((_e3567635739_ (gx#syntax-e _hd3567335731_)))
                         (let ((_lp-hd3567735743_ (##car _e3567635739_))
                               (_lp-tl3567835746_ (##cdr _e3567635739_)))
                           (if (gx#stx-pair? _lp-hd3567735743_)
                               (let ((_e3568335749_
                                      (gx#syntax-e _lp-hd3567735743_)))
                                 (let ((_hd3568435753_ (##car _e3568335749_))
                                       (_tl3568535756_ (##cdr _e3568335749_)))
                                   (if (gx#stx-pair? _tl3568535756_)
                                       (let ((_e3568635759_
                                              (gx#syntax-e _tl3568535756_)))
                                         (let ((_hd3568735763_
                                                (##car _e3568635759_))
                                               (_tl3568835766_
                                                (##cdr _e3568635759_)))
                                           (if (gx#stx-null? _tl3568835766_)
                                               (_loop3567535727_
                                                _lp-tl3567835746_
                                                (cons _hd3568735763_
                                                      _new-id3567935734_)
                                                (cons _hd3568435753_
                                                      _id3568035736_))
                                               (_g3566135694_ _g3566235698_))))
                                       (_g3566135694_ _g3566235698_))))
                               (_g3566135694_ _g3566235698_))))
                       (let ((_new-id3568135769_ (reverse _new-id3567935734_))
                             (_id3568235772_ (reverse _id3568035736_)))
                         ((lambda (_L35775_ _L35777_ _L35778_)
                            (if (and (gx#identifier-list?
                                      (foldr (lambda (_g3579635799_
                                                      _g3579735802_)
                                               (cons _g3579635799_
                                                     _g3579735802_))
                                             '()
                                             _L35777_))
                                     (gx#identifier-list?
                                      (foldr (lambda (_g3580435807_
                                                      _g3580535810_)
                                               (cons _g3580435807_
                                                     _g3580535810_))
                                             '()
                                             _L35775_)))
                                (let* ((_keytab35813_ (make-hash-table))
                                       (_found35816_ (make-hash-table))
                                       (_g42038_
                                        (for-each
                                         (lambda (_id35819_ _new-id35821_)
                                           (hash-put!
                                            _keytab35813_
                                            (gx#core-identifier-key _id35819_)
                                            (gx#core-identifier-key
                                             _new-id35821_)))
                                         (foldr (lambda (_g3582235825_
                                                         _g3582335828_)
                                                  (cons _g3582235825_
                                                        _g3582335828_))
                                                '()
                                                _L35777_)
                                         (foldr (lambda (_g3583035833_
                                                         _g3583135836_)
                                                  (cons _g3583035833_
                                                        _g3583135836_))
                                                '()
                                                _L35775_)))
                                       (_exports35841_
                                        (gx#core-expand-export-source
                                         _L35778_))
                                       (_fold-e35861_
                                        (letrec ((_fold-e35844_
                                                  (lambda (_out35847_ _r35849_)
                                                    (if (gx#module-export?
                                                         _out35847_)
                                                        (let* ((_name35851_
                                                                (gx#module-export-name
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _out35847_))
                       (_$e35854_ (hash-get _keytab35813_ _name35851_)))
                  (if _$e35854_
                      ((lambda (_rename35858_)
                         (hash-put! _found35816_ _name35851_ '#t)
                         (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                _out35847_
                                _rename35858_)
                               _r35849_))
                       _$e35854_)
                      (cons _out35847_ _r35849_)))
                (if (gx#export-set? _out35847_)
                    (foldl _fold-e35844_
                           _r35849_
                           (gx#export-set-exports _out35847_))
                    (cons _out35847_ _r35849_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                          _fold-e35844_))
                                       (_new-exports35864_
                                        (foldl _fold-e35861_
                                               '()
                                               _exports35841_)))
                                  (for-each
                                   (lambda (_id35869_)
                                     (if (hash-get
                                          _found35816_
                                          (gx#core-identifier-key _id35869_))
                                         '#!void
                                         (gx#raise-syntax-error
                                          '#f
                                          '"Bad syntax; identifier is not in the export set"
                                          _stx35658_
                                          _id35869_)))
                                   (foldr (lambda (_g3587135874_ _g3587235877_)
                                            (cons _g3587135874_ _g3587235877_))
                                          '()
                                          _L35777_))
                                  (cons 'begin: _new-exports35864_))
                                (_g3566135694_ _g3566235698_)))
                          _new-id3568135769_
                          _id3568235772_
                          _hd3567035715_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                 (_loop3567535727_
                                                  _target3567235721_
                                                  '()
                                                  '()))
                                               (_g3566135694_
                                                _g3566235698_)))))
                                     (_g3566135694_ _g3566235698_))))
                             (_g3566135694_ _g3566235698_))))
                     (_g3566135694_ _g3566235698_)))))
         (_g3566035880_ _stx35658_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx35886_)
       (let* ((_g3588935907_
               (lambda (_g3589035903_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3589035903_)))
              (_g3588835986_
               (lambda (_g3589035911_)
                 (if (gx#stx-pair? _g3589035911_)
                     (let ((_e3589335914_ (gx#syntax-e _g3589035911_)))
                       (let ((_hd3589435918_ (##car _e3589335914_))
                             (_tl3589535921_ (##cdr _e3589335914_)))
                         (if (gx#stx-pair? _tl3589535921_)
                             (let ((_e3589635924_
                                    (gx#syntax-e _tl3589535921_)))
                               (let ((_hd3589735928_ (##car _e3589635924_))
                                     (_tl3589835931_ (##cdr _e3589635924_)))
                                 (if (gx#stx-pair? _tl3589835931_)
                                     (let ((_e3589935934_
                                            (gx#syntax-e _tl3589835931_)))
                                       (let ((_hd3590035938_
                                              (##car _e3589935934_))
                                             (_tl3590135941_
                                              (##cdr _e3589935934_)))
                                         (if (gx#stx-null? _tl3590135941_)
                                             ((lambda (_L35944_ _L35946_)
                                                (if (gx#identifier? _L35944_)
                                                    (let* ((_pre35962_
                                                            (gx#stx-e
                                                             _L35944_))
                                                           (_exports35965_
                                                            (gx#core-expand-export-source
                                                             _L35946_))
                                                           (_rename-e35971_
                                                            (lambda (_name35968_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name35968_
                                                               _pre35962_)))
                                                           (_fold-e35981_
                                                            (letrec ((_fold-e35974_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out35977_ _r35979_)
                                (if (gx#module-export? _out35977_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out35977_
                                           (_rename-e35971_
                                            (gx#module-export-name
                                             _out35977_)))
                                          _r35979_)
                                    (if (gx#export-set? _out35977_)
                                        (foldl _fold-e35974_
                                               _r35979_
                                               (gx#export-set-exports
                                                _out35977_))
                                        (cons _out35977_ _r35979_))))))
                      _fold-e35974_)))
              (cons 'begin: (foldl _fold-e35981_ '() _exports35965_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3588935907_
                                                     _g3589035911_)))
                                              _hd3590035938_
                                              _hd3589735928_)
                                             (_g3588935907_ _g3589035911_))))
                                     (_g3588935907_ _g3589035911_))))
                             (_g3588935907_ _g3589035911_))))
                     (_g3588935907_ _g3589035911_)))))
         (_g3588835986_ _stx35886_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx35990_)
       (let* ((_g3599336013_
               (lambda (_g3599436009_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3599436009_)))
              (_g3599236248_
               (lambda (_g3599436017_)
                 (if (gx#stx-pair? _g3599436017_)
                     (let ((_e3599636020_ (gx#syntax-e _g3599436017_)))
                       (let ((_hd3599736024_ (##car _e3599636020_))
                             (_tl3599836027_ (##cdr _e3599636020_)))
                         (if (gx#stx-pair/null? _tl3599836027_)
                             (let ((_g42039_
                                    (gx#syntax-split-splice
                                     _tl3599836027_
                                     '0)))
                               (begin
                                 (let ((_g42040_
                                        (if (##values? _g42039_)
                                            (##vector-length _g42039_)
                                            1)))
                                   (if (not (##fx= _g42040_ 2))
                                       (error "Context expects 2 values"
                                              _g42040_)))
                                 (let ((_target3599936030_
                                        (##vector-ref _g42039_ 0))
                                       (_tl3600136033_
                                        (##vector-ref _g42039_ 1)))
                                   (if (gx#stx-null? _tl3600136033_)
                                       (letrec ((_loop3600236036_
                                                 (lambda (_hd3600036040_
                                                          _id3600636043_)
                                                   (if (gx#stx-pair?
                                                        _hd3600036040_)
                                                       (let ((_e3600336046_
                                                              (gx#syntax-e
                                                               _hd3600036040_)))
                                                         (let ((_lp-hd3600436050_
                                                                (##car _e3600336046_))
                                                               (_lp-tl3600536053_
                                                                (##cdr _e3600336046_)))
                                                           (_loop3600236036_
                                                            _lp-tl3600536053_
                                                            (cons _lp-hd3600436050_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          _id3600636043_))))
               (let ((_id3600736056_ (reverse _id3600636043_)))
                 ((lambda (_L36060_)
                    (let _lp36076_ ((_rest36079_
                                     (foldr (lambda (_g3623936242_
                                                     _g3624036245_)
                                              (cons _g3623936242_
                                                    _g3624036245_))
                                            '()
                                            _L36060_))
                                    (_ids36081_ '()))
                      (let* ((___stx4178341784_ _rest36079_)
                             (_g3608436096_
                              (lambda ()
                                (gx#raise-syntax-error
                                 '#f
                                 '"Bad syntax"
                                 ___stx4178341784_))))
                        (let ((___kont4178641787_
                               (lambda (_L36124_ _L36126_)
                                 (let ((_info36141_
                                        (gx#syntax-local-value
                                         _L36126_
                                         false)))
                                   (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                        _info36141_)
                                       (let* ((_g3614336160_
                                               (slot-ref
                                                _info36141_
                                                'expander-identifiers))
                                              (_E3614536166_
                                               (lambda ()
                                                 (error '"No clause matching"
                                                        _g3614336160_)))
                                              (_K3614636178_
                                               (lambda (_setf36170_
                                                        _getf36172_
                                                        _type?36173_
                                                        _make-type36174_
                                                        _type::t36175_
                                                        _super36176_)
                                                 (_lp36076_
                                                  _L36124_
                                                  (cons _L36126_
                                                        (cons _type::t36175_
                                                              (cons _make-type36174_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (cons _type?36173_
                                  (foldr cons
                                         (foldr cons _ids36081_ _setf36170_)
                                         _getf36172_)))))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                         (if (##pair? _g3614336160_)
                                             (let ((_hd3614736182_
                                                    (##car _g3614336160_))
                                                   (_tl3614836185_
                                                    (##cdr _g3614336160_)))
                                               (let ((_super36188_
                                                      _hd3614736182_))
                                                 (if (##pair? _tl3614836185_)
                                                     (let ((_hd3614936191_
                                                            (##car _tl3614836185_))
                                                           (_tl3615036194_
                                                            (##cdr _tl3614836185_)))
                                                       (let ((_type::t36197_
                                                              _hd3614936191_))
                                                         (if (##pair? _tl3615036194_)
                                                             (let ((_hd3615136200_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (##car _tl3615036194_))
                           (_tl3615236203_ (##cdr _tl3615036194_)))
                       (let ((_make-type36206_ _hd3615136200_))
                         (if (##pair? _tl3615236203_)
                             (let ((_hd3615336209_ (##car _tl3615236203_))
                                   (_tl3615436212_ (##cdr _tl3615236203_)))
                               (let ((_type?36215_ _hd3615336209_))
                                 (if (##pair? _tl3615436212_)
                                     (let ((_hd3615536218_
                                            (##car _tl3615436212_))
                                           (_tl3615636221_
                                            (##cdr _tl3615436212_)))
                                       (let ((_getf36224_ _hd3615536218_))
                                         (if (##pair? _tl3615636221_)
                                             (let ((_hd3615736227_
                                                    (##car _tl3615636221_))
                                                   (_tl3615836230_
                                                    (##cdr _tl3615636221_)))
                                               (let ((_setf36233_
                                                      _hd3615736227_))
                                                 (if (##null? _tl3615836230_)
                                                     (_K3614636178_
                                                      _setf36233_
                                                      _getf36224_
                                                      _type?36215_
                                                      _make-type36206_
                                                      _type::t36197_
                                                      _super36188_)
                                                     (_E3614536166_))))
                                             (_E3614536166_))))
                                     (_E3614536166_))))
                             (_E3614536166_))))
                     (_E3614536166_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_E3614536166_))))
                                             (_E3614536166_)))
                                       (gx#raise-syntax-error
                                        '#f
                                        '"Incomplete type info"
                                        _stx35990_
                                        _L36126_)))))
                              (___kont4178841789_
                               (lambda () (cons 'begin: _ids36081_))))
                          (if (gx#stx-pair? ___stx4178341784_)
                              (let ((_e3608836114_
                                     (gx#syntax-e ___stx4178341784_)))
                                (let ((_tl3609036121_ (##cdr _e3608836114_))
                                      (_hd3608936118_ (##car _e3608836114_)))
                                  (___kont4178641787_
                                   _tl3609036121_
                                   _hd3608936118_)))
                              (___kont4178841789_))))))
                  _id3600736056_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                         (_loop3600236036_
                                          _target3599936030_
                                          '()))
                                       (_g3599336013_ _g3599436017_)))))
                             (_g3599336013_ _g3599436017_))))
                     (_g3599336013_ _g3599436017_)))))
         (_g3599236248_ _stx35990_))))))
