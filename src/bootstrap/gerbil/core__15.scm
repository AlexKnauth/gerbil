(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32058_)
      (let* ((_g3206332082_
              (lambda (_g3206432078_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3206432078_)))
             (_g3206232128_
              (lambda (_g3206432086_)
                (if (gx#stx-pair? _g3206432086_)
                    (let ((_e3207132089_ (gx#syntax-e _g3206432086_)))
                      (let ((_hd3207232093_ (##car _e3207132089_))
                            (_tl3207332096_ (##cdr _e3207132089_)))
                        (if (gx#stx-pair? _tl3207332096_)
                            (let ((_e3207432099_ (gx#syntax-e _tl3207332096_)))
                              (let ((_hd3207532103_ (##car _e3207432099_))
                                    (_tl3207632106_ (##cdr _e3207432099_)))
                                ((lambda (_L32109_ _L32111_ _L32112_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32111_
                                                     (cons (cons _L32112_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32109_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32111_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3207632106_
                                 _hd3207532103_
                                 _hd3207232093_)))
                            (_g3206332082_ _g3206432086_))))
                    (_g3206332082_ _g3206432086_))))
             (_g3206132149_
              (lambda (_g3206432132_)
                (if (gx#stx-pair? _g3206432132_)
                    (let ((_e3206532135_ (gx#syntax-e _g3206432132_)))
                      (let ((_hd3206632139_ (##car _e3206532135_))
                            (_tl3206732142_ (##cdr _e3206532135_)))
                        (if (gx#stx-null? _tl3206732142_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3206232128_ _g3206432132_))))
                    (_g3206232128_ _g3206432132_)))))
        (_g3206132149_ _$stx32058_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32153_)
      (let* ((_g3215832198_
              (lambda (_g3215932194_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3215932194_)))
             (_g3215732299_
              (lambda (_g3215932202_)
                (if (gx#stx-pair? _g3215932202_)
                    (let ((_e3217532205_ (gx#syntax-e _g3215932202_)))
                      (let ((_hd3217632209_ (##car _e3217532205_))
                            (_tl3217732212_ (##cdr _e3217532205_)))
                        (if (gx#stx-pair? _tl3217732212_)
                            (let ((_e3217832215_ (gx#syntax-e _tl3217732212_)))
                              (let ((_hd3217932219_ (##car _e3217832215_))
                                    (_tl3218032222_ (##cdr _e3217832215_)))
                                (if (gx#stx-pair? _hd3217932219_)
                                    (let ((_e3218132225_
                                           (gx#syntax-e _hd3217932219_)))
                                      (let ((_hd3218232229_
                                             (##car _e3218132225_))
                                            (_tl3218332232_
                                             (##cdr _e3218132225_)))
                                        (if (gx#stx-pair/null? _tl3218032222_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3218032222_)
                                                      '0)
                                                (let ((_g34739_
                                                       (gx#syntax-split-splice
                                                        _tl3218032222_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34740_
                                                           (values-count
                                                            _g34739_)))
                                                      (if (not (fx= _g34740_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34740_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3218432235_
                                                           (values-ref
                                                            _g34739_
                                                            0))
                                                          (_tl3218632238_
                                                           (values-ref
                                                            _g34739_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3218632238_)
                                                          (letrec ((_loop3218732241_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3218532245_ _body3219132248_)
                              (if (gx#stx-pair? _hd3218532245_)
                                  (let ((_e3218832251_
                                         (gx#syntax-e _hd3218532245_)))
                                    (let ((_lp-hd3218932255_
                                           (##car _e3218832251_))
                                          (_lp-tl3219032258_
                                           (##cdr _e3218832251_)))
                                      (_loop3218732241_
                                       _lp-tl3219032258_
                                       (cons _lp-hd3218932255_
                                             _body3219132248_))))
                                  (let ((_body3219232261_
                                         (reverse _body3219132248_)))
                                    ((lambda (_L32265_
                                              _L32267_
                                              _L32268_
                                              _L32269_)
                                       (if (gx#identifier? _L32268_)
                                           (cons _L32269_
                                                 (cons _L32268_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32267_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3229032293_ _g3229132296_)
                                            (cons _g3229032293_ _g3229132296_))
                                          '()
                                          _L32265_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3215832198_ _g3215932202_)))
                                     _body3219232261_
                                     _tl3218332232_
                                     _hd3218232229_
                                     _hd3217632209_))))))
                    (_loop3218732241_ _target3218432235_ '()))
                  (_g3215832198_ _g3215932202_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3215832198_ _g3215932202_))
                                            (_g3215832198_ _g3215932202_))))
                                    (_g3215832198_ _g3215932202_))))
                            (_g3215832198_ _g3215932202_))))
                    (_g3215832198_ _g3215932202_))))
             (_g3215632353_
              (lambda (_g3215932303_)
                (if (gx#stx-pair? _g3215932303_)
                    (let ((_e3216232306_ (gx#syntax-e _g3215932303_)))
                      (let ((_hd3216332310_ (##car _e3216232306_))
                            (_tl3216432313_ (##cdr _e3216232306_)))
                        (if (gx#stx-pair? _tl3216432313_)
                            (let ((_e3216532316_ (gx#syntax-e _tl3216432313_)))
                              (let ((_hd3216632320_ (##car _e3216532316_))
                                    (_tl3216732323_ (##cdr _e3216532316_)))
                                (if (gx#stx-pair? _tl3216732323_)
                                    (let ((_e3216832326_
                                           (gx#syntax-e _tl3216732323_)))
                                      (let ((_hd3216932330_
                                             (##car _e3216832326_))
                                            (_tl3217032333_
                                             (##cdr _e3216832326_)))
                                        (if (gx#stx-null? _tl3217032333_)
                                            ((lambda (_L32336_ _L32338_)
                                               (if (gx#identifier? _L32338_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32338_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L32336_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3215732299_
                                                    _g3215932303_)))
                                             _hd3216932330_
                                             _hd3216632320_)
                                            (_g3215732299_ _g3215932303_))))
                                    (_g3215732299_ _g3215932303_))))
                            (_g3215732299_ _g3215932303_))))
                    (_g3215732299_ _g3215932303_)))))
        (_g3215632353_ _$stx32153_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx32358_)
      (let* ((_g3236332403_
              (lambda (_g3236432399_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3236432399_)))
             (_g3236232504_
              (lambda (_g3236432407_)
                (if (gx#stx-pair? _g3236432407_)
                    (let ((_e3238032410_ (gx#syntax-e _g3236432407_)))
                      (let ((_hd3238132414_ (##car _e3238032410_))
                            (_tl3238232417_ (##cdr _e3238032410_)))
                        (if (gx#stx-pair? _tl3238232417_)
                            (let ((_e3238332420_ (gx#syntax-e _tl3238232417_)))
                              (let ((_hd3238432424_ (##car _e3238332420_))
                                    (_tl3238532427_ (##cdr _e3238332420_)))
                                (if (gx#stx-pair? _hd3238432424_)
                                    (let ((_e3238632430_
                                           (gx#syntax-e _hd3238432424_)))
                                      (let ((_hd3238732434_
                                             (##car _e3238632430_))
                                            (_tl3238832437_
                                             (##cdr _e3238632430_)))
                                        (if (gx#stx-pair/null? _tl3238532427_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3238532427_)
                                                      '0)
                                                (let ((_g34741_
                                                       (gx#syntax-split-splice
                                                        _tl3238532427_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34742_
                                                           (values-count
                                                            _g34741_)))
                                                      (if (not (fx= _g34742_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34742_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3238932440_
                                                           (values-ref
                                                            _g34741_
                                                            0))
                                                          (_tl3239132443_
                                                           (values-ref
                                                            _g34741_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3239132443_)
                                                          (letrec ((_loop3239232446_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3239032450_ _body3239632453_)
                              (if (gx#stx-pair? _hd3239032450_)
                                  (let ((_e3239332456_
                                         (gx#syntax-e _hd3239032450_)))
                                    (let ((_lp-hd3239432460_
                                           (##car _e3239332456_))
                                          (_lp-tl3239532463_
                                           (##cdr _e3239332456_)))
                                      (_loop3239232446_
                                       _lp-tl3239532463_
                                       (cons _lp-hd3239432460_
                                             _body3239632453_))))
                                  (let ((_body3239732466_
                                         (reverse _body3239632453_)))
                                    ((lambda (_L32470_
                                              _L32472_
                                              _L32473_
                                              _L32474_)
                                       (if (gx#identifier? _L32473_)
                                           (cons _L32474_
                                                 (cons _L32473_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32472_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3249532498_ _g3249632501_)
                                            (cons _g3249532498_ _g3249632501_))
                                          '()
                                          _L32470_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3236332403_ _g3236432407_)))
                                     _body3239732466_
                                     _tl3238832437_
                                     _hd3238732434_
                                     _hd3238132414_))))))
                    (_loop3239232446_ _target3238932440_ '()))
                  (_g3236332403_ _g3236432407_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3236332403_ _g3236432407_))
                                            (_g3236332403_ _g3236432407_))))
                                    (_g3236332403_ _g3236432407_))))
                            (_g3236332403_ _g3236432407_))))
                    (_g3236332403_ _g3236432407_))))
             (_g3236132558_
              (lambda (_g3236432508_)
                (if (gx#stx-pair? _g3236432508_)
                    (let ((_e3236732511_ (gx#syntax-e _g3236432508_)))
                      (let ((_hd3236832515_ (##car _e3236732511_))
                            (_tl3236932518_ (##cdr _e3236732511_)))
                        (if (gx#stx-pair? _tl3236932518_)
                            (let ((_e3237032521_ (gx#syntax-e _tl3236932518_)))
                              (let ((_hd3237132525_ (##car _e3237032521_))
                                    (_tl3237232528_ (##cdr _e3237032521_)))
                                (if (gx#stx-pair? _tl3237232528_)
                                    (let ((_e3237332531_
                                           (gx#syntax-e _tl3237232528_)))
                                      (let ((_hd3237432535_
                                             (##car _e3237332531_))
                                            (_tl3237532538_
                                             (##cdr _e3237332531_)))
                                        (if (gx#stx-null? _tl3237532538_)
                                            ((lambda (_L32541_ _L32543_)
                                               (if (gx#identifier? _L32543_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32543_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L32541_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3236232504_
                                                    _g3236432508_)))
                                             _hd3237432535_
                                             _hd3237132525_)
                                            (_g3236232504_ _g3236432508_))))
                                    (_g3236232504_ _g3236432508_))))
                            (_g3236232504_ _g3236432508_))))
                    (_g3236232504_ _g3236432508_)))))
        (_g3236132558_ _$stx32358_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx32563_)
      (let* ((_g3256832608_
              (lambda (_g3256932604_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3256932604_)))
             (_g3256732709_
              (lambda (_g3256932612_)
                (if (gx#stx-pair? _g3256932612_)
                    (let ((_e3258532615_ (gx#syntax-e _g3256932612_)))
                      (let ((_hd3258632619_ (##car _e3258532615_))
                            (_tl3258732622_ (##cdr _e3258532615_)))
                        (if (gx#stx-pair? _tl3258732622_)
                            (let ((_e3258832625_ (gx#syntax-e _tl3258732622_)))
                              (let ((_hd3258932629_ (##car _e3258832625_))
                                    (_tl3259032632_ (##cdr _e3258832625_)))
                                (if (gx#stx-pair? _hd3258932629_)
                                    (let ((_e3259132635_
                                           (gx#syntax-e _hd3258932629_)))
                                      (let ((_hd3259232639_
                                             (##car _e3259132635_))
                                            (_tl3259332642_
                                             (##cdr _e3259132635_)))
                                        (if (gx#stx-pair/null? _tl3259032632_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3259032632_)
                                                      '0)
                                                (let ((_g34743_
                                                       (gx#syntax-split-splice
                                                        _tl3259032632_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34744_
                                                           (values-count
                                                            _g34743_)))
                                                      (if (not (fx= _g34744_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34744_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3259432645_
                                                           (values-ref
                                                            _g34743_
                                                            0))
                                                          (_tl3259632648_
                                                           (values-ref
                                                            _g34743_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3259632648_)
                                                          (letrec ((_loop3259732651_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3259532655_ _body3260132658_)
                              (if (gx#stx-pair? _hd3259532655_)
                                  (let ((_e3259832661_
                                         (gx#syntax-e _hd3259532655_)))
                                    (let ((_lp-hd3259932665_
                                           (##car _e3259832661_))
                                          (_lp-tl3260032668_
                                           (##cdr _e3259832661_)))
                                      (_loop3259732651_
                                       _lp-tl3260032668_
                                       (cons _lp-hd3259932665_
                                             _body3260132658_))))
                                  (let ((_body3260232671_
                                         (reverse _body3260132658_)))
                                    ((lambda (_L32675_
                                              _L32677_
                                              _L32678_
                                              _L32679_)
                                       (if (gx#identifier? _L32678_)
                                           (cons _L32679_
                                                 (cons _L32678_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32677_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3270032703_ _g3270132706_)
                                            (cons _g3270032703_ _g3270132706_))
                                          '()
                                          _L32675_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3256832608_ _g3256932612_)))
                                     _body3260232671_
                                     _tl3259332642_
                                     _hd3259232639_
                                     _hd3258632619_))))))
                    (_loop3259732651_ _target3259432645_ '()))
                  (_g3256832608_ _g3256932612_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3256832608_ _g3256932612_))
                                            (_g3256832608_ _g3256932612_))))
                                    (_g3256832608_ _g3256932612_))))
                            (_g3256832608_ _g3256932612_))))
                    (_g3256832608_ _g3256932612_))))
             (_g3256632763_
              (lambda (_g3256932713_)
                (if (gx#stx-pair? _g3256932713_)
                    (let ((_e3257232716_ (gx#syntax-e _g3256932713_)))
                      (let ((_hd3257332720_ (##car _e3257232716_))
                            (_tl3257432723_ (##cdr _e3257232716_)))
                        (if (gx#stx-pair? _tl3257432723_)
                            (let ((_e3257532726_ (gx#syntax-e _tl3257432723_)))
                              (let ((_hd3257632730_ (##car _e3257532726_))
                                    (_tl3257732733_ (##cdr _e3257532726_)))
                                (if (gx#stx-pair? _tl3257732733_)
                                    (let ((_e3257832736_
                                           (gx#syntax-e _tl3257732733_)))
                                      (let ((_hd3257932740_
                                             (##car _e3257832736_))
                                            (_tl3258032743_
                                             (##cdr _e3257832736_)))
                                        (if (gx#stx-null? _tl3258032743_)
                                            ((lambda (_L32746_ _L32748_)
                                               (if (gx#identifier? _L32748_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32748_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L32746_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3256732709_
                                                    _g3256932713_)))
                                             _hd3257932740_
                                             _hd3257632730_)
                                            (_g3256732709_ _g3256932713_))))
                                    (_g3256732709_ _g3256932713_))))
                            (_g3256732709_ _g3256932713_))))
                    (_g3256732709_ _g3256932713_)))))
        (_g3256632763_ _$stx32563_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx32768_)
       (let* ((_g3277132791_
               (lambda (_g3277232787_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3277232787_)))
              (_g3277032862_
               (lambda (_g3277232795_)
                 (if (gx#stx-pair? _g3277232795_)
                     (let ((_e3277432798_ (gx#syntax-e _g3277232795_)))
                       (let ((_hd3277532802_ (##car _e3277432798_))
                             (_tl3277632805_ (##cdr _e3277432798_)))
                         (if (gx#stx-pair/null? _tl3277632805_)
                             (if (fx>= (gx#stx-length _tl3277632805_) '0)
                                 (let ((_g34745_
                                        (gx#syntax-split-splice
                                         _tl3277632805_
                                         '0)))
                                   (begin
                                     (let ((_g34746_ (values-count _g34745_)))
                                       (if (not (fx= _g34746_ 2))
                                           (error "Context expects 2 values"
                                                  _g34746_)))
                                     (let ((_target3277732808_
                                            (values-ref _g34745_ 0))
                                           (_tl3277932811_
                                            (values-ref _g34745_ 1)))
                                       (if (gx#stx-null? _tl3277932811_)
                                           (letrec ((_loop3278032814_
                                                     (lambda (_hd3277832818_
                                                              _body3278432821_)
                                                       (if (gx#stx-pair?
                                                            _hd3277832818_)
                                                           (let ((_e3278132824_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3277832818_)))
                     (let ((_lp-hd3278232828_ (##car _e3278132824_))
                           (_lp-tl3278332831_ (##cdr _e3278132824_)))
                       (_loop3278032814_
                        _lp-tl3278332831_
                        (cons _lp-hd3278232828_ _body3278432821_))))
                   (let ((_body3278532834_ (reverse _body3278432821_)))
                     ((lambda (_L32838_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3285332856_
                                                      _g3285432859_)
                                               (cons _g3285332856_
                                                     _g3285432859_))
                                             '()
                                             _L32838_)))))
                      _body3278532834_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3278032814_
                                              _target3277732808_
                                              '()))
                                           (_g3277132791_ _g3277232795_)))))
                                 (_g3277132791_ _g3277232795_))
                             (_g3277132791_ _g3277232795_))))
                     (_g3277132791_ _g3277232795_)))))
         (_g3277032862_ _stx32768_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx32867_)
       (let* ((_g3287032890_
               (lambda (_g3287132886_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3287132886_)))
              (_g3286932961_
               (lambda (_g3287132894_)
                 (if (gx#stx-pair? _g3287132894_)
                     (let ((_e3287332897_ (gx#syntax-e _g3287132894_)))
                       (let ((_hd3287432901_ (##car _e3287332897_))
                             (_tl3287532904_ (##cdr _e3287332897_)))
                         (if (gx#stx-pair/null? _tl3287532904_)
                             (if (fx>= (gx#stx-length _tl3287532904_) '0)
                                 (let ((_g34747_
                                        (gx#syntax-split-splice
                                         _tl3287532904_
                                         '0)))
                                   (begin
                                     (let ((_g34748_ (values-count _g34747_)))
                                       (if (not (fx= _g34748_ 2))
                                           (error "Context expects 2 values"
                                                  _g34748_)))
                                     (let ((_target3287632907_
                                            (values-ref _g34747_ 0))
                                           (_tl3287832910_
                                            (values-ref _g34747_ 1)))
                                       (if (gx#stx-null? _tl3287832910_)
                                           (letrec ((_loop3287932913_
                                                     (lambda (_hd3287732917_
                                                              _body3288332920_)
                                                       (if (gx#stx-pair?
                                                            _hd3287732917_)
                                                           (let ((_e3288032923_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3287732917_)))
                     (let ((_lp-hd3288132927_ (##car _e3288032923_))
                           (_lp-tl3288232930_ (##cdr _e3288032923_)))
                       (_loop3287932913_
                        _lp-tl3288232930_
                        (cons _lp-hd3288132927_ _body3288332920_))))
                   (let ((_body3288432933_ (reverse _body3288332920_)))
                     ((lambda (_L32937_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3295232955_
                                                      _g3295332958_)
                                               (cons _g3295232955_
                                                     _g3295332958_))
                                             '()
                                             _L32937_)))))
                      _body3288432933_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3287932913_
                                              _target3287632907_
                                              '()))
                                           (_g3287032890_ _g3287132894_)))))
                                 (_g3287032890_ _g3287132894_))
                             (_g3287032890_ _g3287132894_))))
                     (_g3287032890_ _g3287132894_)))))
         (_g3286932961_ _stx32867_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx32966_)
       (let* ((_g3296932993_
               (lambda (_g3297032989_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3297032989_)))
              (_g3296833115_
               (lambda (_g3297032997_)
                 (if (gx#stx-pair? _g3297032997_)
                     (let ((_e3297333000_ (gx#syntax-e _g3297032997_)))
                       (let ((_hd3297433004_ (##car _e3297333000_))
                             (_tl3297533007_ (##cdr _e3297333000_)))
                         (if (gx#stx-pair? _tl3297533007_)
                             (let ((_e3297633010_
                                    (gx#syntax-e _tl3297533007_)))
                               (let ((_hd3297733014_ (##car _e3297633010_))
                                     (_tl3297833017_ (##cdr _e3297633010_)))
                                 (if (gx#stx-pair/null? _tl3297833017_)
                                     (if (fx>= (gx#stx-length _tl3297833017_)
                                               '0)
                                         (let ((_g34749_
                                                (gx#syntax-split-splice
                                                 _tl3297833017_
                                                 '0)))
                                           (begin
                                             (let ((_g34750_
                                                    (values-count _g34749_)))
                                               (if (not (fx= _g34750_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34750_)))
                                             (let ((_target3297933020_
                                                    (values-ref _g34749_ 0))
                                                   (_tl3298133023_
                                                    (values-ref _g34749_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3298133023_)
                                                   (letrec ((_loop3298233026_
                                                             (lambda (_hd3298033030_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3298633033_)
                       (if (gx#stx-pair? _hd3298033030_)
                           (let ((_e3298333036_ (gx#syntax-e _hd3298033030_)))
                             (let ((_lp-hd3298433040_ (##car _e3298333036_))
                                   (_lp-tl3298533043_ (##cdr _e3298333036_)))
                               (_loop3298233026_
                                _lp-tl3298533043_
                                (cons _lp-hd3298433040_ _id3298633033_))))
                           (let ((_id3298733046_ (reverse _id3298633033_)))
                             ((lambda (_L33050_ _L33052_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3306933072_
                                                       _g3307033075_)
                                                (cons _g3306933072_
                                                      _g3307033075_))
                                              '()
                                              _L33050_)))
                                    (let* ((_keys33086_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3307733080_
                                                               _g3307833083_)
                                                        (cons _g3307733080_
                                                              _g3307833083_))
                                                      '()
                                                      _L33050_))))
                                           (_keytab33097_
                                            (let ((_ht33089_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3309133093_)
                                                   (hash-put!
                                                    _ht33089_
                                                    _g3309133093_
                                                    '#t))
                                                 _keys33086_)
                                                _ht33089_)))
                                           (_imports33100_
                                            (gx#core-expand-import-source
                                             _L33052_))
                                           (_fold-e33110_
                                            (letrec ((_fold-e33103_
                                                      (lambda (_in33106_
                                                               _r33108_)
                                                        (if (gx#module-import?
                                                             _in33106_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33097_
                         (gx#module-import-name _in33106_))
                        (cons _in33106_ _r33108_)
                        _r33108_)
                    (if (gx#import-set? _in33106_)
                        (foldl _fold-e33103_
                               _r33108_
                               (gx#import-set-imports _in33106_))
                        _r33108_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33103_)))
                                      (cons 'begin:
                                            (foldl _fold-e33110_
                                                   '()
                                                   _imports33100_)))
                                    (_g3296932993_ _g3297032997_)))
                              _id3298733046_
                              _hd3297733014_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3298233026_
                                                      _target3297933020_
                                                      '()))
                                                   (_g3296932993_
                                                    _g3297032997_)))))
                                         (_g3296932993_ _g3297032997_))
                                     (_g3296932993_ _g3297032997_))))
                             (_g3296932993_ _g3297032997_))))
                     (_g3296932993_ _g3297032997_)))))
         (_g3296833115_ _stx32966_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33120_)
       (let* ((_g3312333147_
               (lambda (_g3312433143_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3312433143_)))
              (_g3312233269_
               (lambda (_g3312433151_)
                 (if (gx#stx-pair? _g3312433151_)
                     (let ((_e3312733154_ (gx#syntax-e _g3312433151_)))
                       (let ((_hd3312833158_ (##car _e3312733154_))
                             (_tl3312933161_ (##cdr _e3312733154_)))
                         (if (gx#stx-pair? _tl3312933161_)
                             (let ((_e3313033164_
                                    (gx#syntax-e _tl3312933161_)))
                               (let ((_hd3313133168_ (##car _e3313033164_))
                                     (_tl3313233171_ (##cdr _e3313033164_)))
                                 (if (gx#stx-pair/null? _tl3313233171_)
                                     (if (fx>= (gx#stx-length _tl3313233171_)
                                               '0)
                                         (let ((_g34751_
                                                (gx#syntax-split-splice
                                                 _tl3313233171_
                                                 '0)))
                                           (begin
                                             (let ((_g34752_
                                                    (values-count _g34751_)))
                                               (if (not (fx= _g34752_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34752_)))
                                             (let ((_target3313333174_
                                                    (values-ref _g34751_ 0))
                                                   (_tl3313533177_
                                                    (values-ref _g34751_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3313533177_)
                                                   (letrec ((_loop3313633180_
                                                             (lambda (_hd3313433184_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3314033187_)
                       (if (gx#stx-pair? _hd3313433184_)
                           (let ((_e3313733190_ (gx#syntax-e _hd3313433184_)))
                             (let ((_lp-hd3313833194_ (##car _e3313733190_))
                                   (_lp-tl3313933197_ (##cdr _e3313733190_)))
                               (_loop3313633180_
                                _lp-tl3313933197_
                                (cons _lp-hd3313833194_ _id3314033187_))))
                           (let ((_id3314133200_ (reverse _id3314033187_)))
                             ((lambda (_L33204_ _L33206_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3322333226_
                                                       _g3322433229_)
                                                (cons _g3322333226_
                                                      _g3322433229_))
                                              '()
                                              _L33204_)))
                                    (let* ((_keys33240_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3323133234_
                                                               _g3323233237_)
                                                        (cons _g3323133234_
                                                              _g3323233237_))
                                                      '()
                                                      _L33204_))))
                                           (_keytab33251_
                                            (let ((_ht33243_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3324533247_)
                                                   (hash-put!
                                                    _ht33243_
                                                    _g3324533247_
                                                    '#t))
                                                 _keys33240_)
                                                _ht33243_)))
                                           (_imports33254_
                                            (gx#core-expand-import-source
                                             _L33206_))
                                           (_fold-e33264_
                                            (letrec ((_fold-e33257_
                                                      (lambda (_in33260_
                                                               _r33262_)
                                                        (if (gx#module-import?
                                                             _in33260_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33251_
                         (gx#module-import-name _in33260_))
                        _r33262_
                        (cons _in33260_ _r33262_))
                    (if (gx#import-set? _in33260_)
                        (foldl _fold-e33257_
                               _r33262_
                               (gx#import-set-imports _in33260_))
                        (cons _in33260_ _r33262_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33257_)))
                                      (cons 'begin:
                                            (foldl _fold-e33264_
                                                   '()
                                                   _imports33254_)))
                                    (_g3312333147_ _g3312433151_)))
                              _id3314133200_
                              _hd3313133168_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3313633180_
                                                      _target3313333174_
                                                      '()))
                                                   (_g3312333147_
                                                    _g3312433151_)))))
                                         (_g3312333147_ _g3312433151_))
                                     (_g3312333147_ _g3312433151_))))
                             (_g3312333147_ _g3312433151_))))
                     (_g3312333147_ _g3312433151_)))))
         (_g3312233269_ _stx33120_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in33321_ _rename33323_)
      (gx#make-module-import
       (gx#module-import-source _in33321_)
       _rename33323_
       (gx#module-import-phi _in33321_)
       (gx#module-import-weak? _in33321_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name33274_ _pre33276_)
      (let* ((_name3327733285_ _name33274_)
             (_E3328033291_
              (lambda () (error '"No clause matching" _name3327733285_)))
             (_else3327933297_
              (lambda () (make-symbol _pre33276_ _name33274_)))
             (_K3328133305_
              (lambda (_mark33301_ _id33303_)
                (cons (make-symbol _pre33276_ _id33303_) _mark33301_))))
        (if (##pair? _name3327733285_)
            (let ((_hd3328233309_ (##car _name3327733285_))
                  (_tl3328333312_ (##cdr _name3327733285_)))
              (let* ((_id33315_ _hd3328233309_) (_mark33318_ _tl3328333312_))
                (_K3328133305_ _mark33318_ _id33315_)))
            (_else3327933297_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx33325_)
       (let* ((_g3332833361_
               (lambda (_g3332933357_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3332933357_)))
              (_g3332733547_
               (lambda (_g3332933365_)
                 (if (gx#stx-pair? _g3332933365_)
                     (let ((_e3333333368_ (gx#syntax-e _g3332933365_)))
                       (let ((_hd3333433372_ (##car _e3333333368_))
                             (_tl3333533375_ (##cdr _e3333333368_)))
                         (if (gx#stx-pair? _tl3333533375_)
                             (let ((_e3333633378_
                                    (gx#syntax-e _tl3333533375_)))
                               (let ((_hd3333733382_ (##car _e3333633378_))
                                     (_tl3333833385_ (##cdr _e3333633378_)))
                                 (if (gx#stx-pair/null? _tl3333833385_)
                                     (if (fx>= (gx#stx-length _tl3333833385_)
                                               '0)
                                         (let ((_g34753_
                                                (gx#syntax-split-splice
                                                 _tl3333833385_
                                                 '0)))
                                           (begin
                                             (let ((_g34754_
                                                    (values-count _g34753_)))
                                               (if (not (fx= _g34754_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34754_)))
                                             (let ((_target3333933388_
                                                    (values-ref _g34753_ 0))
                                                   (_tl3334133391_
                                                    (values-ref _g34753_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3334133391_)
                                                   (letrec ((_loop3334233394_
                                                             (lambda (_hd3334033398_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3334633401_
                              _id3334733403_)
                       (if (gx#stx-pair? _hd3334033398_)
                           (let ((_e3334333406_ (gx#syntax-e _hd3334033398_)))
                             (let ((_lp-hd3334433410_ (##car _e3334333406_))
                                   (_lp-tl3334533413_ (##cdr _e3334333406_)))
                               (if (gx#stx-pair? _lp-hd3334433410_)
                                   (let ((_e3335033416_
                                          (gx#syntax-e _lp-hd3334433410_)))
                                     (let ((_hd3335133420_
                                            (##car _e3335033416_))
                                           (_tl3335233423_
                                            (##cdr _e3335033416_)))
                                       (if (gx#stx-pair? _tl3335233423_)
                                           (let ((_e3335333426_
                                                  (gx#syntax-e
                                                   _tl3335233423_)))
                                             (let ((_hd3335433430_
                                                    (##car _e3335333426_))
                                                   (_tl3335533433_
                                                    (##cdr _e3335333426_)))
                                               (if (gx#stx-null?
                                                    _tl3335533433_)
                                                   (_loop3334233394_
                                                    _lp-tl3334533413_
                                                    (cons _hd3335433430_
                                                          _new-id3334633401_)
                                                    (cons _hd3335133420_
                                                          _id3334733403_))
                                                   (_g3332833361_
                                                    _g3332933365_))))
                                           (_g3332833361_ _g3332933365_))))
                                   (_g3332833361_ _g3332933365_))))
                           (let ((_new-id3334833436_
                                  (reverse _new-id3334633401_))
                                 (_id3334933439_ (reverse _id3334733403_)))
                             ((lambda (_L33442_ _L33444_ _L33445_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3346333466_
                                                           _g3346433469_)
                                                    (cons _g3346333466_
                                                          _g3346433469_))
                                                  '()
                                                  _L33444_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3347133474_
                                                           _g3347233477_)
                                                    (cons _g3347133474_
                                                          _g3347233477_))
                                                  '()
                                                  _L33442_)))
                                        '#f)
                                    (let* ((_keytab33480_ (make-hash-table))
                                           (_found33483_ (make-hash-table))
                                           (_g34755_
                                            (for-each
                                             (lambda (_id33486_ _new-id33488_)
                                               (hash-put!
                                                _keytab33480_
                                                (gx#core-identifier-key
                                                 _id33486_)
                                                (gx#core-identifier-key
                                                 _new-id33488_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3348933492_
                                                               _g3349033495_)
                                                        (cons _g3348933492_
                                                              _g3349033495_))
                                                      '()
                                                      _L33444_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3349733500_
                                                               _g3349833503_)
                                                        (cons _g3349733500_
                                                              _g3349833503_))
                                                      '()
                                                      _L33442_))))
                                           (_imports33508_
                                            (gx#core-expand-import-source
                                             _L33445_))
                                           (_fold-e33528_
                                            (letrec ((_fold-e33511_
                                                      (lambda (_in33514_
                                                               _r33516_)
                                                        (if (gx#module-import?
                                                             _in33514_)
                                                            (let* ((_name33518_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in33514_))
                           (_$e33521_ (hash-get _keytab33480_ _name33518_)))
                      (if _$e33521_
                          ((lambda (_rename33525_)
                             (begin
                               (hash-put! _found33483_ _name33518_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in33514_
                                      _rename33525_)
                                     _r33516_)))
                           _$e33521_)
                          (cons _in33514_ _r33516_)))
                    (if (gx#import-set? _in33514_)
                        (foldl _fold-e33511_
                               _r33516_
                               (gx#import-set-imports _in33514_))
                        (cons _in33514_ _r33516_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33511_))
                                           (_new-imports33531_
                                            (foldl _fold-e33528_
                                                   '()
                                                   _imports33508_)))
                                      (begin
                                        (for-each
                                         (lambda (_id33536_)
                                           (if (hash-get
                                                _found33483_
                                                (gx#core-identifier-key
                                                 _id33536_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx33325_
                                                _id33536_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3353833541_
                                                           _g3353933544_)
                                                    (cons _g3353833541_
                                                          _g3353933544_))
                                                  '()
                                                  _L33444_)))
                                        (cons 'begin: _new-imports33531_)))
                                    (_g3332833361_ _g3332933365_)))
                              _new-id3334833436_
                              _id3334933439_
                              _hd3333733382_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3334233394_
                                                      _target3333933388_
                                                      '()
                                                      '()))
                                                   (_g3332833361_
                                                    _g3332933365_)))))
                                         (_g3332833361_ _g3332933365_))
                                     (_g3332833361_ _g3332933365_))))
                             (_g3332833361_ _g3332933365_))))
                     (_g3332833361_ _g3332933365_)))))
         (_g3332733547_ _stx33325_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx33553_)
       (let* ((_g3355633574_
               (lambda (_g3355733570_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3355733570_)))
              (_g3355533653_
               (lambda (_g3355733578_)
                 (if (gx#stx-pair? _g3355733578_)
                     (let ((_e3356033581_ (gx#syntax-e _g3355733578_)))
                       (let ((_hd3356133585_ (##car _e3356033581_))
                             (_tl3356233588_ (##cdr _e3356033581_)))
                         (if (gx#stx-pair? _tl3356233588_)
                             (let ((_e3356333591_
                                    (gx#syntax-e _tl3356233588_)))
                               (let ((_hd3356433595_ (##car _e3356333591_))
                                     (_tl3356533598_ (##cdr _e3356333591_)))
                                 (if (gx#stx-pair? _tl3356533598_)
                                     (let ((_e3356633601_
                                            (gx#syntax-e _tl3356533598_)))
                                       (let ((_hd3356733605_
                                              (##car _e3356633601_))
                                             (_tl3356833608_
                                              (##cdr _e3356633601_)))
                                         (if (gx#stx-null? _tl3356833608_)
                                             ((lambda (_L33611_ _L33613_)
                                                (if (gx#identifier? _L33611_)
                                                    (let* ((_pre33629_
                                                            (gx#stx-e
                                                             _L33611_))
                                                           (_imports33632_
                                                            (gx#core-expand-import-source
                                                             _L33613_))
                                                           (_rename-e33638_
                                                            (lambda (_name33635_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name33635_
                                                               _pre33629_)))
                                                           (_fold-e33648_
                                                            (letrec ((_fold-e33641_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in33644_ _r33646_)
                                (if (gx#module-import? _in33644_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in33644_
                                           (_rename-e33638_
                                            (gx#module-import-name _in33644_)))
                                          _r33646_)
                                    (if (gx#import-set? _in33644_)
                                        (foldl _fold-e33641_
                                               _r33646_
                                               (gx#import-set-imports
                                                _in33644_))
                                        (cons _in33644_ _r33646_))))))
                      _fold-e33641_)))
              (cons 'begin: (foldl _fold-e33648_ '() _imports33632_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3355633574_
                                                     _g3355733578_)))
                                              _hd3356733605_
                                              _hd3356433595_)
                                             (_g3355633574_ _g3355733578_))))
                                     (_g3355633574_ _g3355733578_))))
                             (_g3355633574_ _g3355733578_))))
                     (_g3355633574_ _g3355733578_)))))
         (_g3355533653_ _stx33553_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx33657_)
       (let* ((_g3366033684_
               (lambda (_g3366133680_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3366133680_)))
              (_g3365933806_
               (lambda (_g3366133688_)
                 (if (gx#stx-pair? _g3366133688_)
                     (let ((_e3366433691_ (gx#syntax-e _g3366133688_)))
                       (let ((_hd3366533695_ (##car _e3366433691_))
                             (_tl3366633698_ (##cdr _e3366433691_)))
                         (if (gx#stx-pair? _tl3366633698_)
                             (let ((_e3366733701_
                                    (gx#syntax-e _tl3366633698_)))
                               (let ((_hd3366833705_ (##car _e3366733701_))
                                     (_tl3366933708_ (##cdr _e3366733701_)))
                                 (if (gx#stx-pair/null? _tl3366933708_)
                                     (if (fx>= (gx#stx-length _tl3366933708_)
                                               '0)
                                         (let ((_g34756_
                                                (gx#syntax-split-splice
                                                 _tl3366933708_
                                                 '0)))
                                           (begin
                                             (let ((_g34757_
                                                    (values-count _g34756_)))
                                               (if (not (fx= _g34757_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34757_)))
                                             (let ((_target3367033711_
                                                    (values-ref _g34756_ 0))
                                                   (_tl3367233714_
                                                    (values-ref _g34756_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3367233714_)
                                                   (letrec ((_loop3367333717_
                                                             (lambda (_hd3367133721_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3367733724_)
                       (if (gx#stx-pair? _hd3367133721_)
                           (let ((_e3367433727_ (gx#syntax-e _hd3367133721_)))
                             (let ((_lp-hd3367533731_ (##car _e3367433727_))
                                   (_lp-tl3367633734_ (##cdr _e3367433727_)))
                               (_loop3367333717_
                                _lp-tl3367633734_
                                (cons _lp-hd3367533731_ _id3367733724_))))
                           (let ((_id3367833737_ (reverse _id3367733724_)))
                             ((lambda (_L33741_ _L33743_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3376033763_
                                                       _g3376133766_)
                                                (cons _g3376033763_
                                                      _g3376133766_))
                                              '()
                                              _L33741_)))
                                    (let* ((_keys33777_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3376833771_
                                                               _g3376933774_)
                                                        (cons _g3376833771_
                                                              _g3376933774_))
                                                      '()
                                                      _L33741_))))
                                           (_keytab33788_
                                            (let ((_ht33780_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3378233784_)
                                                   (hash-put!
                                                    _ht33780_
                                                    _g3378233784_
                                                    '#t))
                                                 _keys33777_)
                                                _ht33780_)))
                                           (_exports33791_
                                            (gx#core-expand-export-source
                                             _L33743_))
                                           (_fold-e33801_
                                            (letrec ((_fold-e33794_
                                                      (lambda (_out33797_
                                                               _r33799_)
                                                        (if (gx#module-export?
                                                             _out33797_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33788_
                         (gx#module-export-name _out33797_))
                        _r33799_
                        (cons _out33797_ _r33799_))
                    (if (gx#export-set? _out33797_)
                        (foldl _fold-e33794_
                               _r33799_
                               (gx#export-set-exports _out33797_))
                        _r33799_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33794_)))
                                      (cons 'begin:
                                            (foldl _fold-e33801_
                                                   '()
                                                   _exports33791_)))
                                    (_g3366033684_ _g3366133688_)))
                              _id3367833737_
                              _hd3366833705_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3367333717_
                                                      _target3367033711_
                                                      '()))
                                                   (_g3366033684_
                                                    _g3366133688_)))))
                                         (_g3366033684_ _g3366133688_))
                                     (_g3366033684_ _g3366133688_))))
                             (_g3366033684_ _g3366133688_))))
                     (_g3366033684_ _g3366133688_)))))
         (_g3365933806_ _stx33657_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out33811_ _rename33813_)
      (gx#make-module-export
       (gx#module-export-context _out33811_)
       (gx#module-export-key _out33811_)
       (gx#module-export-phi _out33811_)
       _rename33813_
       (gx#module-export-weak? _out33811_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx33815_)
       (let* ((_g3381833851_
               (lambda (_g3381933847_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3381933847_)))
              (_g3381734037_
               (lambda (_g3381933855_)
                 (if (gx#stx-pair? _g3381933855_)
                     (let ((_e3382333858_ (gx#syntax-e _g3381933855_)))
                       (let ((_hd3382433862_ (##car _e3382333858_))
                             (_tl3382533865_ (##cdr _e3382333858_)))
                         (if (gx#stx-pair? _tl3382533865_)
                             (let ((_e3382633868_
                                    (gx#syntax-e _tl3382533865_)))
                               (let ((_hd3382733872_ (##car _e3382633868_))
                                     (_tl3382833875_ (##cdr _e3382633868_)))
                                 (if (gx#stx-pair/null? _tl3382833875_)
                                     (if (fx>= (gx#stx-length _tl3382833875_)
                                               '0)
                                         (let ((_g34758_
                                                (gx#syntax-split-splice
                                                 _tl3382833875_
                                                 '0)))
                                           (begin
                                             (let ((_g34759_
                                                    (values-count _g34758_)))
                                               (if (not (fx= _g34759_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34759_)))
                                             (let ((_target3382933878_
                                                    (values-ref _g34758_ 0))
                                                   (_tl3383133881_
                                                    (values-ref _g34758_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3383133881_)
                                                   (letrec ((_loop3383233884_
                                                             (lambda (_hd3383033888_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3383633891_
                              _id3383733893_)
                       (if (gx#stx-pair? _hd3383033888_)
                           (let ((_e3383333896_ (gx#syntax-e _hd3383033888_)))
                             (let ((_lp-hd3383433900_ (##car _e3383333896_))
                                   (_lp-tl3383533903_ (##cdr _e3383333896_)))
                               (if (gx#stx-pair? _lp-hd3383433900_)
                                   (let ((_e3384033906_
                                          (gx#syntax-e _lp-hd3383433900_)))
                                     (let ((_hd3384133910_
                                            (##car _e3384033906_))
                                           (_tl3384233913_
                                            (##cdr _e3384033906_)))
                                       (if (gx#stx-pair? _tl3384233913_)
                                           (let ((_e3384333916_
                                                  (gx#syntax-e
                                                   _tl3384233913_)))
                                             (let ((_hd3384433920_
                                                    (##car _e3384333916_))
                                                   (_tl3384533923_
                                                    (##cdr _e3384333916_)))
                                               (if (gx#stx-null?
                                                    _tl3384533923_)
                                                   (_loop3383233884_
                                                    _lp-tl3383533903_
                                                    (cons _hd3384433920_
                                                          _new-id3383633891_)
                                                    (cons _hd3384133910_
                                                          _id3383733893_))
                                                   (_g3381833851_
                                                    _g3381933855_))))
                                           (_g3381833851_ _g3381933855_))))
                                   (_g3381833851_ _g3381933855_))))
                           (let ((_new-id3383833926_
                                  (reverse _new-id3383633891_))
                                 (_id3383933929_ (reverse _id3383733893_)))
                             ((lambda (_L33932_ _L33934_ _L33935_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3395333956_
                                                           _g3395433959_)
                                                    (cons _g3395333956_
                                                          _g3395433959_))
                                                  '()
                                                  _L33934_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3396133964_
                                                           _g3396233967_)
                                                    (cons _g3396133964_
                                                          _g3396233967_))
                                                  '()
                                                  _L33932_)))
                                        '#f)
                                    (let* ((_keytab33970_ (make-hash-table))
                                           (_found33973_ (make-hash-table))
                                           (_g34760_
                                            (for-each
                                             (lambda (_id33976_ _new-id33978_)
                                               (hash-put!
                                                _keytab33970_
                                                (gx#core-identifier-key
                                                 _id33976_)
                                                (gx#core-identifier-key
                                                 _new-id33978_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3397933982_
                                                               _g3398033985_)
                                                        (cons _g3397933982_
                                                              _g3398033985_))
                                                      '()
                                                      _L33934_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3398733990_
                                                               _g3398833993_)
                                                        (cons _g3398733990_
                                                              _g3398833993_))
                                                      '()
                                                      _L33932_))))
                                           (_exports33998_
                                            (gx#core-expand-export-source
                                             _L33935_))
                                           (_fold-e34018_
                                            (letrec ((_fold-e34001_
                                                      (lambda (_out34004_
                                                               _r34006_)
                                                        (if (gx#module-export?
                                                             _out34004_)
                                                            (let* ((_name34008_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34004_))
                           (_$e34011_ (hash-get _keytab33970_ _name34008_)))
                      (if _$e34011_
                          ((lambda (_rename34015_)
                             (begin
                               (hash-put! _found33973_ _name34008_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34004_
                                      _rename34015_)
                                     _r34006_)))
                           _$e34011_)
                          (cons _out34004_ _r34006_)))
                    (if (gx#export-set? _out34004_)
                        (foldl _fold-e34001_
                               _r34006_
                               (gx#export-set-exports _out34004_))
                        (cons _out34004_ _r34006_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34001_))
                                           (_new-exports34021_
                                            (foldl _fold-e34018_
                                                   '()
                                                   _exports33998_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34026_)
                                           (if (hash-get
                                                _found33973_
                                                (gx#core-identifier-key
                                                 _id34026_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx33815_
                                                _id34026_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3402834031_
                                                           _g3402934034_)
                                                    (cons _g3402834031_
                                                          _g3402934034_))
                                                  '()
                                                  _L33934_)))
                                        (cons 'begin: _new-exports34021_)))
                                    (_g3381833851_ _g3381933855_)))
                              _new-id3383833926_
                              _id3383933929_
                              _hd3382733872_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3383233884_
                                                      _target3382933878_
                                                      '()
                                                      '()))
                                                   (_g3381833851_
                                                    _g3381933855_)))))
                                         (_g3381833851_ _g3381933855_))
                                     (_g3381833851_ _g3381933855_))))
                             (_g3381833851_ _g3381933855_))))
                     (_g3381833851_ _g3381933855_)))))
         (_g3381734037_ _stx33815_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34043_)
       (let* ((_g3404634064_
               (lambda (_g3404734060_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3404734060_)))
              (_g3404534143_
               (lambda (_g3404734068_)
                 (if (gx#stx-pair? _g3404734068_)
                     (let ((_e3405034071_ (gx#syntax-e _g3404734068_)))
                       (let ((_hd3405134075_ (##car _e3405034071_))
                             (_tl3405234078_ (##cdr _e3405034071_)))
                         (if (gx#stx-pair? _tl3405234078_)
                             (let ((_e3405334081_
                                    (gx#syntax-e _tl3405234078_)))
                               (let ((_hd3405434085_ (##car _e3405334081_))
                                     (_tl3405534088_ (##cdr _e3405334081_)))
                                 (if (gx#stx-pair? _tl3405534088_)
                                     (let ((_e3405634091_
                                            (gx#syntax-e _tl3405534088_)))
                                       (let ((_hd3405734095_
                                              (##car _e3405634091_))
                                             (_tl3405834098_
                                              (##cdr _e3405634091_)))
                                         (if (gx#stx-null? _tl3405834098_)
                                             ((lambda (_L34101_ _L34103_)
                                                (if (gx#identifier? _L34101_)
                                                    (let* ((_pre34119_
                                                            (gx#stx-e
                                                             _L34101_))
                                                           (_exports34122_
                                                            (gx#core-expand-export-source
                                                             _L34103_))
                                                           (_rename-e34128_
                                                            (lambda (_name34125_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34125_
                                                               _pre34119_)))
                                                           (_fold-e34138_
                                                            (letrec ((_fold-e34131_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34134_ _r34136_)
                                (if (gx#module-export? _out34134_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34134_
                                           (_rename-e34128_
                                            (gx#module-export-name
                                             _out34134_)))
                                          _r34136_)
                                    (if (gx#export-set? _out34134_)
                                        (foldl _fold-e34131_
                                               _r34136_
                                               (gx#export-set-exports
                                                _out34134_))
                                        (cons _out34134_ _r34136_))))))
                      _fold-e34131_)))
              (cons 'begin: (foldl _fold-e34138_ '() _exports34122_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3404634064_
                                                     _g3404734068_)))
                                              _hd3405734095_
                                              _hd3405434085_)
                                             (_g3404634064_ _g3404734068_))))
                                     (_g3404634064_ _g3404734068_))))
                             (_g3404634064_ _g3404734068_))))
                     (_g3404634064_ _g3404734068_)))))
         (_g3404534143_ _stx34043_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34147_)
       (let* ((_g3415034170_
               (lambda (_g3415134166_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3415134166_)))
              (_g3414934405_
               (lambda (_g3415134174_)
                 (if (gx#stx-pair? _g3415134174_)
                     (let ((_e3415334177_ (gx#syntax-e _g3415134174_)))
                       (let ((_hd3415434181_ (##car _e3415334177_))
                             (_tl3415534184_ (##cdr _e3415334177_)))
                         (if (gx#stx-pair/null? _tl3415534184_)
                             (if (fx>= (gx#stx-length _tl3415534184_) '0)
                                 (let ((_g34761_
                                        (gx#syntax-split-splice
                                         _tl3415534184_
                                         '0)))
                                   (begin
                                     (let ((_g34762_ (values-count _g34761_)))
                                       (if (not (fx= _g34762_ 2))
                                           (error "Context expects 2 values"
                                                  _g34762_)))
                                     (let ((_target3415634187_
                                            (values-ref _g34761_ 0))
                                           (_tl3415834190_
                                            (values-ref _g34761_ 1)))
                                       (if (gx#stx-null? _tl3415834190_)
                                           (letrec ((_loop3415934193_
                                                     (lambda (_hd3415734197_
                                                              _id3416334200_)
                                                       (if (gx#stx-pair?
                                                            _hd3415734197_)
                                                           (let ((_e3416034203_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3415734197_)))
                     (let ((_lp-hd3416134207_ (##car _e3416034203_))
                           (_lp-tl3416234210_ (##cdr _e3416034203_)))
                       (_loop3415934193_
                        _lp-tl3416234210_
                        (cons _lp-hd3416134207_ _id3416334200_))))
                   (let ((_id3416434213_ (reverse _id3416334200_)))
                     ((lambda (_L34217_)
                        (let _lp34233_ ((_rest34236_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3439634399_
                                                           _g3439734402_)
                                                    (cons _g3439634399_
                                                          _g3439734402_))
                                                  '()
                                                  _L34217_)))
                                        (_ids34238_ '()))
                          (let* ((_g3424134253_
                                  (lambda (_g3424234249_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3424234249_)))
                                 (_g3424034264_
                                  (lambda (_g3424234257_)
                                    ((lambda () (cons 'begin: _ids34238_)))))
                                 (_g3423934393_
                                  (lambda (_g3424234268_)
                                    (if (gx#stx-pair? _g3424234268_)
                                        (let ((_e3424534271_
                                               (gx#syntax-e _g3424234268_)))
                                          (let ((_hd3424634275_
                                                 (##car _e3424534271_))
                                                (_tl3424734278_
                                                 (##cdr _e3424534271_)))
                                            ((lambda (_L34281_ _L34283_)
                                               (let ((_info34298_
                                                      (gx#syntax-local-value
                                                       _L34283_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info34298_)
                                                     (let* ((_g3430034317_
                                                             (slot-ref
                                                              _info34298_
                                                              'expander-identifiers))
                                                            (_E3430234323_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3430034317_)))
                    (_K3430334335_
                     (lambda (_setf34327_
                              _getf34329_
                              _type?34330_
                              _make-type34331_
                              _type::t34332_
                              _super34333_)
                       (_lp34233_
                        _L34281_
                        (cons _L34283_
                              (cons _type::t34332_
                                    (cons _make-type34331_
                                          (cons _type?34330_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids34238_
                                                              _setf34327_)
                                                       _getf34329_)))))))))
               (if (##pair? _g3430034317_)
                   (let ((_hd3430434339_ (##car _g3430034317_))
                         (_tl3430534342_ (##cdr _g3430034317_)))
                     (let ((_super34345_ _hd3430434339_))
                       (if (##pair? _tl3430534342_)
                           (let ((_hd3430634348_ (##car _tl3430534342_))
                                 (_tl3430734351_ (##cdr _tl3430534342_)))
                             (let ((_type::t34354_ _hd3430634348_))
                               (if (##pair? _tl3430734351_)
                                   (let ((_hd3430834357_
                                          (##car _tl3430734351_))
                                         (_tl3430934360_
                                          (##cdr _tl3430734351_)))
                                     (let ((_make-type34363_ _hd3430834357_))
                                       (if (##pair? _tl3430934360_)
                                           (let ((_hd3431034366_
                                                  (##car _tl3430934360_))
                                                 (_tl3431134369_
                                                  (##cdr _tl3430934360_)))
                                             (let ((_type?34372_
                                                    _hd3431034366_))
                                               (if (##pair? _tl3431134369_)
                                                   (let ((_hd3431234375_
                                                          (##car _tl3431134369_))
                                                         (_tl3431334378_
                                                          (##cdr _tl3431134369_)))
                                                     (let ((_getf34381_
                                                            _hd3431234375_))
                                                       (if (##pair? _tl3431334378_)
                                                           (let ((_hd3431434384_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3431334378_))
                         (_tl3431534387_ (##cdr _tl3431334378_)))
                     (let ((_setf34390_ _hd3431434384_))
                       (if (##null? _tl3431534387_)
                           (_K3430334335_
                            _setf34390_
                            _getf34381_
                            _type?34372_
                            _make-type34363_
                            _type::t34354_
                            _super34345_)
                           (_E3430234323_))))
                   (_E3430234323_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3430234323_))))
                                           (_E3430234323_))))
                                   (_E3430234323_))))
                           (_E3430234323_))))
                   (_E3430234323_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34147_
                                                      _L34283_))))
                                             _tl3424734278_
                                             _hd3424634275_)))
                                        (_g3424034264_ _g3424234268_)))))
                            (_g3423934393_ _rest34236_))))
                      _id3416434213_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3415934193_
                                              _target3415634187_
                                              '()))
                                           (_g3415034170_ _g3415134174_)))))
                                 (_g3415034170_ _g3415134174_))
                             (_g3415034170_ _g3415134174_))))
                     (_g3415034170_ _g3415134174_)))))
         (_g3414934405_ _stx34147_))))))
