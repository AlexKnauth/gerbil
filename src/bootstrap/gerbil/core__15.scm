(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32253_)
      (let* ((_g3225832277_
              (lambda (_g3225932273_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3225932273_)))
             (_g3225732323_
              (lambda (_g3225932281_)
                (if (gx#stx-pair? _g3225932281_)
                    (let ((_e3226632284_ (gx#syntax-e _g3225932281_)))
                      (let ((_hd3226732288_ (##car _e3226632284_))
                            (_tl3226832291_ (##cdr _e3226632284_)))
                        (if (gx#stx-pair? _tl3226832291_)
                            (let ((_e3226932294_ (gx#syntax-e _tl3226832291_)))
                              (let ((_hd3227032298_ (##car _e3226932294_))
                                    (_tl3227132301_ (##cdr _e3226932294_)))
                                ((lambda (_L32304_ _L32306_ _L32307_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32306_
                                                     (cons (cons _L32307_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32304_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32306_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3227132301_
                                 _hd3227032298_
                                 _hd3226732288_)))
                            (_g3225832277_ _g3225932281_))))
                    (_g3225832277_ _g3225932281_))))
             (_g3225632344_
              (lambda (_g3225932327_)
                (if (gx#stx-pair? _g3225932327_)
                    (let ((_e3226032330_ (gx#syntax-e _g3225932327_)))
                      (let ((_hd3226132334_ (##car _e3226032330_))
                            (_tl3226232337_ (##cdr _e3226032330_)))
                        (if (gx#stx-null? _tl3226232337_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3225732323_ _g3225932327_))))
                    (_g3225732323_ _g3225932327_)))))
        (_g3225632344_ _$stx32253_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32348_)
      (let* ((_g3235332393_
              (lambda (_g3235432389_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3235432389_)))
             (_g3235232494_
              (lambda (_g3235432397_)
                (if (gx#stx-pair? _g3235432397_)
                    (let ((_e3237032400_ (gx#syntax-e _g3235432397_)))
                      (let ((_hd3237132404_ (##car _e3237032400_))
                            (_tl3237232407_ (##cdr _e3237032400_)))
                        (if (gx#stx-pair? _tl3237232407_)
                            (let ((_e3237332410_ (gx#syntax-e _tl3237232407_)))
                              (let ((_hd3237432414_ (##car _e3237332410_))
                                    (_tl3237532417_ (##cdr _e3237332410_)))
                                (if (gx#stx-pair? _hd3237432414_)
                                    (let ((_e3237632420_
                                           (gx#syntax-e _hd3237432414_)))
                                      (let ((_hd3237732424_
                                             (##car _e3237632420_))
                                            (_tl3237832427_
                                             (##cdr _e3237632420_)))
                                        (if (gx#stx-pair/null? _tl3237532417_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3237532417_)
                                                      '0)
                                                (let ((_g34934_
                                                       (gx#syntax-split-splice
                                                        _tl3237532417_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34935_
                                                           (values-count
                                                            _g34934_)))
                                                      (if (not (fx= _g34935_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34935_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3237932430_
                                                           (values-ref
                                                            _g34934_
                                                            0))
                                                          (_tl3238132433_
                                                           (values-ref
                                                            _g34934_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3238132433_)
                                                          (letrec ((_loop3238232436_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3238032440_ _body3238632443_)
                              (if (gx#stx-pair? _hd3238032440_)
                                  (let ((_e3238332446_
                                         (gx#syntax-e _hd3238032440_)))
                                    (let ((_lp-hd3238432450_
                                           (##car _e3238332446_))
                                          (_lp-tl3238532453_
                                           (##cdr _e3238332446_)))
                                      (_loop3238232436_
                                       _lp-tl3238532453_
                                       (cons _lp-hd3238432450_
                                             _body3238632443_))))
                                  (let ((_body3238732456_
                                         (reverse _body3238632443_)))
                                    ((lambda (_L32460_
                                              _L32462_
                                              _L32463_
                                              _L32464_)
                                       (if (gx#identifier? _L32463_)
                                           (cons _L32464_
                                                 (cons _L32463_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32462_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3248532488_ _g3248632491_)
                                            (cons _g3248532488_ _g3248632491_))
                                          '()
                                          _L32460_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3235332393_ _g3235432397_)))
                                     _body3238732456_
                                     _tl3237832427_
                                     _hd3237732424_
                                     _hd3237132404_))))))
                    (_loop3238232436_ _target3237932430_ '()))
                  (_g3235332393_ _g3235432397_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3235332393_ _g3235432397_))
                                            (_g3235332393_ _g3235432397_))))
                                    (_g3235332393_ _g3235432397_))))
                            (_g3235332393_ _g3235432397_))))
                    (_g3235332393_ _g3235432397_))))
             (_g3235132548_
              (lambda (_g3235432498_)
                (if (gx#stx-pair? _g3235432498_)
                    (let ((_e3235732501_ (gx#syntax-e _g3235432498_)))
                      (let ((_hd3235832505_ (##car _e3235732501_))
                            (_tl3235932508_ (##cdr _e3235732501_)))
                        (if (gx#stx-pair? _tl3235932508_)
                            (let ((_e3236032511_ (gx#syntax-e _tl3235932508_)))
                              (let ((_hd3236132515_ (##car _e3236032511_))
                                    (_tl3236232518_ (##cdr _e3236032511_)))
                                (if (gx#stx-pair? _tl3236232518_)
                                    (let ((_e3236332521_
                                           (gx#syntax-e _tl3236232518_)))
                                      (let ((_hd3236432525_
                                             (##car _e3236332521_))
                                            (_tl3236532528_
                                             (##cdr _e3236332521_)))
                                        (if (gx#stx-null? _tl3236532528_)
                                            ((lambda (_L32531_ _L32533_)
                                               (if (gx#identifier? _L32533_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32533_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L32531_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3235232494_
                                                    _g3235432498_)))
                                             _hd3236432525_
                                             _hd3236132515_)
                                            (_g3235232494_ _g3235432498_))))
                                    (_g3235232494_ _g3235432498_))))
                            (_g3235232494_ _g3235432498_))))
                    (_g3235232494_ _g3235432498_)))))
        (_g3235132548_ _$stx32348_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx32553_)
      (let* ((_g3255832598_
              (lambda (_g3255932594_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3255932594_)))
             (_g3255732699_
              (lambda (_g3255932602_)
                (if (gx#stx-pair? _g3255932602_)
                    (let ((_e3257532605_ (gx#syntax-e _g3255932602_)))
                      (let ((_hd3257632609_ (##car _e3257532605_))
                            (_tl3257732612_ (##cdr _e3257532605_)))
                        (if (gx#stx-pair? _tl3257732612_)
                            (let ((_e3257832615_ (gx#syntax-e _tl3257732612_)))
                              (let ((_hd3257932619_ (##car _e3257832615_))
                                    (_tl3258032622_ (##cdr _e3257832615_)))
                                (if (gx#stx-pair? _hd3257932619_)
                                    (let ((_e3258132625_
                                           (gx#syntax-e _hd3257932619_)))
                                      (let ((_hd3258232629_
                                             (##car _e3258132625_))
                                            (_tl3258332632_
                                             (##cdr _e3258132625_)))
                                        (if (gx#stx-pair/null? _tl3258032622_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3258032622_)
                                                      '0)
                                                (let ((_g34936_
                                                       (gx#syntax-split-splice
                                                        _tl3258032622_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34937_
                                                           (values-count
                                                            _g34936_)))
                                                      (if (not (fx= _g34937_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34937_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3258432635_
                                                           (values-ref
                                                            _g34936_
                                                            0))
                                                          (_tl3258632638_
                                                           (values-ref
                                                            _g34936_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3258632638_)
                                                          (letrec ((_loop3258732641_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3258532645_ _body3259132648_)
                              (if (gx#stx-pair? _hd3258532645_)
                                  (let ((_e3258832651_
                                         (gx#syntax-e _hd3258532645_)))
                                    (let ((_lp-hd3258932655_
                                           (##car _e3258832651_))
                                          (_lp-tl3259032658_
                                           (##cdr _e3258832651_)))
                                      (_loop3258732641_
                                       _lp-tl3259032658_
                                       (cons _lp-hd3258932655_
                                             _body3259132648_))))
                                  (let ((_body3259232661_
                                         (reverse _body3259132648_)))
                                    ((lambda (_L32665_
                                              _L32667_
                                              _L32668_
                                              _L32669_)
                                       (if (gx#identifier? _L32668_)
                                           (cons _L32669_
                                                 (cons _L32668_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32667_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3269032693_ _g3269132696_)
                                            (cons _g3269032693_ _g3269132696_))
                                          '()
                                          _L32665_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3255832598_ _g3255932602_)))
                                     _body3259232661_
                                     _tl3258332632_
                                     _hd3258232629_
                                     _hd3257632609_))))))
                    (_loop3258732641_ _target3258432635_ '()))
                  (_g3255832598_ _g3255932602_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3255832598_ _g3255932602_))
                                            (_g3255832598_ _g3255932602_))))
                                    (_g3255832598_ _g3255932602_))))
                            (_g3255832598_ _g3255932602_))))
                    (_g3255832598_ _g3255932602_))))
             (_g3255632753_
              (lambda (_g3255932703_)
                (if (gx#stx-pair? _g3255932703_)
                    (let ((_e3256232706_ (gx#syntax-e _g3255932703_)))
                      (let ((_hd3256332710_ (##car _e3256232706_))
                            (_tl3256432713_ (##cdr _e3256232706_)))
                        (if (gx#stx-pair? _tl3256432713_)
                            (let ((_e3256532716_ (gx#syntax-e _tl3256432713_)))
                              (let ((_hd3256632720_ (##car _e3256532716_))
                                    (_tl3256732723_ (##cdr _e3256532716_)))
                                (if (gx#stx-pair? _tl3256732723_)
                                    (let ((_e3256832726_
                                           (gx#syntax-e _tl3256732723_)))
                                      (let ((_hd3256932730_
                                             (##car _e3256832726_))
                                            (_tl3257032733_
                                             (##cdr _e3256832726_)))
                                        (if (gx#stx-null? _tl3257032733_)
                                            ((lambda (_L32736_ _L32738_)
                                               (if (gx#identifier? _L32738_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32738_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L32736_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3255732699_
                                                    _g3255932703_)))
                                             _hd3256932730_
                                             _hd3256632720_)
                                            (_g3255732699_ _g3255932703_))))
                                    (_g3255732699_ _g3255932703_))))
                            (_g3255732699_ _g3255932703_))))
                    (_g3255732699_ _g3255932703_)))))
        (_g3255632753_ _$stx32553_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx32758_)
      (let* ((_g3276332803_
              (lambda (_g3276432799_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3276432799_)))
             (_g3276232904_
              (lambda (_g3276432807_)
                (if (gx#stx-pair? _g3276432807_)
                    (let ((_e3278032810_ (gx#syntax-e _g3276432807_)))
                      (let ((_hd3278132814_ (##car _e3278032810_))
                            (_tl3278232817_ (##cdr _e3278032810_)))
                        (if (gx#stx-pair? _tl3278232817_)
                            (let ((_e3278332820_ (gx#syntax-e _tl3278232817_)))
                              (let ((_hd3278432824_ (##car _e3278332820_))
                                    (_tl3278532827_ (##cdr _e3278332820_)))
                                (if (gx#stx-pair? _hd3278432824_)
                                    (let ((_e3278632830_
                                           (gx#syntax-e _hd3278432824_)))
                                      (let ((_hd3278732834_
                                             (##car _e3278632830_))
                                            (_tl3278832837_
                                             (##cdr _e3278632830_)))
                                        (if (gx#stx-pair/null? _tl3278532827_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3278532827_)
                                                      '0)
                                                (let ((_g34938_
                                                       (gx#syntax-split-splice
                                                        _tl3278532827_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34939_
                                                           (values-count
                                                            _g34938_)))
                                                      (if (not (fx= _g34939_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34939_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3278932840_
                                                           (values-ref
                                                            _g34938_
                                                            0))
                                                          (_tl3279132843_
                                                           (values-ref
                                                            _g34938_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3279132843_)
                                                          (letrec ((_loop3279232846_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3279032850_ _body3279632853_)
                              (if (gx#stx-pair? _hd3279032850_)
                                  (let ((_e3279332856_
                                         (gx#syntax-e _hd3279032850_)))
                                    (let ((_lp-hd3279432860_
                                           (##car _e3279332856_))
                                          (_lp-tl3279532863_
                                           (##cdr _e3279332856_)))
                                      (_loop3279232846_
                                       _lp-tl3279532863_
                                       (cons _lp-hd3279432860_
                                             _body3279632853_))))
                                  (let ((_body3279732866_
                                         (reverse _body3279632853_)))
                                    ((lambda (_L32870_
                                              _L32872_
                                              _L32873_
                                              _L32874_)
                                       (if (gx#identifier? _L32873_)
                                           (cons _L32874_
                                                 (cons _L32873_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32872_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3289532898_ _g3289632901_)
                                            (cons _g3289532898_ _g3289632901_))
                                          '()
                                          _L32870_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3276332803_ _g3276432807_)))
                                     _body3279732866_
                                     _tl3278832837_
                                     _hd3278732834_
                                     _hd3278132814_))))))
                    (_loop3279232846_ _target3278932840_ '()))
                  (_g3276332803_ _g3276432807_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3276332803_ _g3276432807_))
                                            (_g3276332803_ _g3276432807_))))
                                    (_g3276332803_ _g3276432807_))))
                            (_g3276332803_ _g3276432807_))))
                    (_g3276332803_ _g3276432807_))))
             (_g3276132958_
              (lambda (_g3276432908_)
                (if (gx#stx-pair? _g3276432908_)
                    (let ((_e3276732911_ (gx#syntax-e _g3276432908_)))
                      (let ((_hd3276832915_ (##car _e3276732911_))
                            (_tl3276932918_ (##cdr _e3276732911_)))
                        (if (gx#stx-pair? _tl3276932918_)
                            (let ((_e3277032921_ (gx#syntax-e _tl3276932918_)))
                              (let ((_hd3277132925_ (##car _e3277032921_))
                                    (_tl3277232928_ (##cdr _e3277032921_)))
                                (if (gx#stx-pair? _tl3277232928_)
                                    (let ((_e3277332931_
                                           (gx#syntax-e _tl3277232928_)))
                                      (let ((_hd3277432935_
                                             (##car _e3277332931_))
                                            (_tl3277532938_
                                             (##cdr _e3277332931_)))
                                        (if (gx#stx-null? _tl3277532938_)
                                            ((lambda (_L32941_ _L32943_)
                                               (if (gx#identifier? _L32943_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32943_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L32941_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3276232904_
                                                    _g3276432908_)))
                                             _hd3277432935_
                                             _hd3277132925_)
                                            (_g3276232904_ _g3276432908_))))
                                    (_g3276232904_ _g3276432908_))))
                            (_g3276232904_ _g3276432908_))))
                    (_g3276232904_ _g3276432908_)))))
        (_g3276132958_ _$stx32758_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx32963_)
       (let* ((_g3296632986_
               (lambda (_g3296732982_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3296732982_)))
              (_g3296533057_
               (lambda (_g3296732990_)
                 (if (gx#stx-pair? _g3296732990_)
                     (let ((_e3296932993_ (gx#syntax-e _g3296732990_)))
                       (let ((_hd3297032997_ (##car _e3296932993_))
                             (_tl3297133000_ (##cdr _e3296932993_)))
                         (if (gx#stx-pair/null? _tl3297133000_)
                             (if (fx>= (gx#stx-length _tl3297133000_) '0)
                                 (let ((_g34940_
                                        (gx#syntax-split-splice
                                         _tl3297133000_
                                         '0)))
                                   (begin
                                     (let ((_g34941_ (values-count _g34940_)))
                                       (if (not (fx= _g34941_ 2))
                                           (error "Context expects 2 values"
                                                  _g34941_)))
                                     (let ((_target3297233003_
                                            (values-ref _g34940_ 0))
                                           (_tl3297433006_
                                            (values-ref _g34940_ 1)))
                                       (if (gx#stx-null? _tl3297433006_)
                                           (letrec ((_loop3297533009_
                                                     (lambda (_hd3297333013_
                                                              _body3297933016_)
                                                       (if (gx#stx-pair?
                                                            _hd3297333013_)
                                                           (let ((_e3297633019_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3297333013_)))
                     (let ((_lp-hd3297733023_ (##car _e3297633019_))
                           (_lp-tl3297833026_ (##cdr _e3297633019_)))
                       (_loop3297533009_
                        _lp-tl3297833026_
                        (cons _lp-hd3297733023_ _body3297933016_))))
                   (let ((_body3298033029_ (reverse _body3297933016_)))
                     ((lambda (_L33033_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3304833051_
                                                      _g3304933054_)
                                               (cons _g3304833051_
                                                     _g3304933054_))
                                             '()
                                             _L33033_)))))
                      _body3298033029_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3297533009_
                                              _target3297233003_
                                              '()))
                                           (_g3296632986_ _g3296732990_)))))
                                 (_g3296632986_ _g3296732990_))
                             (_g3296632986_ _g3296732990_))))
                     (_g3296632986_ _g3296732990_)))))
         (_g3296533057_ _stx32963_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33062_)
       (let* ((_g3306533085_
               (lambda (_g3306633081_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3306633081_)))
              (_g3306433156_
               (lambda (_g3306633089_)
                 (if (gx#stx-pair? _g3306633089_)
                     (let ((_e3306833092_ (gx#syntax-e _g3306633089_)))
                       (let ((_hd3306933096_ (##car _e3306833092_))
                             (_tl3307033099_ (##cdr _e3306833092_)))
                         (if (gx#stx-pair/null? _tl3307033099_)
                             (if (fx>= (gx#stx-length _tl3307033099_) '0)
                                 (let ((_g34942_
                                        (gx#syntax-split-splice
                                         _tl3307033099_
                                         '0)))
                                   (begin
                                     (let ((_g34943_ (values-count _g34942_)))
                                       (if (not (fx= _g34943_ 2))
                                           (error "Context expects 2 values"
                                                  _g34943_)))
                                     (let ((_target3307133102_
                                            (values-ref _g34942_ 0))
                                           (_tl3307333105_
                                            (values-ref _g34942_ 1)))
                                       (if (gx#stx-null? _tl3307333105_)
                                           (letrec ((_loop3307433108_
                                                     (lambda (_hd3307233112_
                                                              _body3307833115_)
                                                       (if (gx#stx-pair?
                                                            _hd3307233112_)
                                                           (let ((_e3307533118_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3307233112_)))
                     (let ((_lp-hd3307633122_ (##car _e3307533118_))
                           (_lp-tl3307733125_ (##cdr _e3307533118_)))
                       (_loop3307433108_
                        _lp-tl3307733125_
                        (cons _lp-hd3307633122_ _body3307833115_))))
                   (let ((_body3307933128_ (reverse _body3307833115_)))
                     ((lambda (_L33132_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3314733150_
                                                      _g3314833153_)
                                               (cons _g3314733150_
                                                     _g3314833153_))
                                             '()
                                             _L33132_)))))
                      _body3307933128_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3307433108_
                                              _target3307133102_
                                              '()))
                                           (_g3306533085_ _g3306633089_)))))
                                 (_g3306533085_ _g3306633089_))
                             (_g3306533085_ _g3306633089_))))
                     (_g3306533085_ _g3306633089_)))))
         (_g3306433156_ _stx33062_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33161_)
       (let* ((_g3316433188_
               (lambda (_g3316533184_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3316533184_)))
              (_g3316333310_
               (lambda (_g3316533192_)
                 (if (gx#stx-pair? _g3316533192_)
                     (let ((_e3316833195_ (gx#syntax-e _g3316533192_)))
                       (let ((_hd3316933199_ (##car _e3316833195_))
                             (_tl3317033202_ (##cdr _e3316833195_)))
                         (if (gx#stx-pair? _tl3317033202_)
                             (let ((_e3317133205_
                                    (gx#syntax-e _tl3317033202_)))
                               (let ((_hd3317233209_ (##car _e3317133205_))
                                     (_tl3317333212_ (##cdr _e3317133205_)))
                                 (if (gx#stx-pair/null? _tl3317333212_)
                                     (if (fx>= (gx#stx-length _tl3317333212_)
                                               '0)
                                         (let ((_g34944_
                                                (gx#syntax-split-splice
                                                 _tl3317333212_
                                                 '0)))
                                           (begin
                                             (let ((_g34945_
                                                    (values-count _g34944_)))
                                               (if (not (fx= _g34945_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34945_)))
                                             (let ((_target3317433215_
                                                    (values-ref _g34944_ 0))
                                                   (_tl3317633218_
                                                    (values-ref _g34944_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3317633218_)
                                                   (letrec ((_loop3317733221_
                                                             (lambda (_hd3317533225_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3318133228_)
                       (if (gx#stx-pair? _hd3317533225_)
                           (let ((_e3317833231_ (gx#syntax-e _hd3317533225_)))
                             (let ((_lp-hd3317933235_ (##car _e3317833231_))
                                   (_lp-tl3318033238_ (##cdr _e3317833231_)))
                               (_loop3317733221_
                                _lp-tl3318033238_
                                (cons _lp-hd3317933235_ _id3318133228_))))
                           (let ((_id3318233241_ (reverse _id3318133228_)))
                             ((lambda (_L33245_ _L33247_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3326433267_
                                                       _g3326533270_)
                                                (cons _g3326433267_
                                                      _g3326533270_))
                                              '()
                                              _L33245_)))
                                    (let* ((_keys33281_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3327233275_
                                                               _g3327333278_)
                                                        (cons _g3327233275_
                                                              _g3327333278_))
                                                      '()
                                                      _L33245_))))
                                           (_keytab33292_
                                            (let ((_ht33284_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3328633288_)
                                                   (hash-put!
                                                    _ht33284_
                                                    _g3328633288_
                                                    '#t))
                                                 _keys33281_)
                                                _ht33284_)))
                                           (_imports33295_
                                            (gx#core-expand-import-source
                                             _L33247_))
                                           (_fold-e33305_
                                            (letrec ((_fold-e33298_
                                                      (lambda (_in33301_
                                                               _r33303_)
                                                        (if (gx#module-import?
                                                             _in33301_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33292_
                         (gx#module-import-name _in33301_))
                        (cons _in33301_ _r33303_)
                        _r33303_)
                    (if (gx#import-set? _in33301_)
                        (foldl _fold-e33298_
                               _r33303_
                               (gx#import-set-imports _in33301_))
                        _r33303_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33298_)))
                                      (cons 'begin:
                                            (foldl _fold-e33305_
                                                   '()
                                                   _imports33295_)))
                                    (_g3316433188_ _g3316533192_)))
                              _id3318233241_
                              _hd3317233209_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3317733221_
                                                      _target3317433215_
                                                      '()))
                                                   (_g3316433188_
                                                    _g3316533192_)))))
                                         (_g3316433188_ _g3316533192_))
                                     (_g3316433188_ _g3316533192_))))
                             (_g3316433188_ _g3316533192_))))
                     (_g3316433188_ _g3316533192_)))))
         (_g3316333310_ _stx33161_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33315_)
       (let* ((_g3331833342_
               (lambda (_g3331933338_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3331933338_)))
              (_g3331733464_
               (lambda (_g3331933346_)
                 (if (gx#stx-pair? _g3331933346_)
                     (let ((_e3332233349_ (gx#syntax-e _g3331933346_)))
                       (let ((_hd3332333353_ (##car _e3332233349_))
                             (_tl3332433356_ (##cdr _e3332233349_)))
                         (if (gx#stx-pair? _tl3332433356_)
                             (let ((_e3332533359_
                                    (gx#syntax-e _tl3332433356_)))
                               (let ((_hd3332633363_ (##car _e3332533359_))
                                     (_tl3332733366_ (##cdr _e3332533359_)))
                                 (if (gx#stx-pair/null? _tl3332733366_)
                                     (if (fx>= (gx#stx-length _tl3332733366_)
                                               '0)
                                         (let ((_g34946_
                                                (gx#syntax-split-splice
                                                 _tl3332733366_
                                                 '0)))
                                           (begin
                                             (let ((_g34947_
                                                    (values-count _g34946_)))
                                               (if (not (fx= _g34947_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34947_)))
                                             (let ((_target3332833369_
                                                    (values-ref _g34946_ 0))
                                                   (_tl3333033372_
                                                    (values-ref _g34946_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3333033372_)
                                                   (letrec ((_loop3333133375_
                                                             (lambda (_hd3332933379_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3333533382_)
                       (if (gx#stx-pair? _hd3332933379_)
                           (let ((_e3333233385_ (gx#syntax-e _hd3332933379_)))
                             (let ((_lp-hd3333333389_ (##car _e3333233385_))
                                   (_lp-tl3333433392_ (##cdr _e3333233385_)))
                               (_loop3333133375_
                                _lp-tl3333433392_
                                (cons _lp-hd3333333389_ _id3333533382_))))
                           (let ((_id3333633395_ (reverse _id3333533382_)))
                             ((lambda (_L33399_ _L33401_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3341833421_
                                                       _g3341933424_)
                                                (cons _g3341833421_
                                                      _g3341933424_))
                                              '()
                                              _L33399_)))
                                    (let* ((_keys33435_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3342633429_
                                                               _g3342733432_)
                                                        (cons _g3342633429_
                                                              _g3342733432_))
                                                      '()
                                                      _L33399_))))
                                           (_keytab33446_
                                            (let ((_ht33438_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3344033442_)
                                                   (hash-put!
                                                    _ht33438_
                                                    _g3344033442_
                                                    '#t))
                                                 _keys33435_)
                                                _ht33438_)))
                                           (_imports33449_
                                            (gx#core-expand-import-source
                                             _L33401_))
                                           (_fold-e33459_
                                            (letrec ((_fold-e33452_
                                                      (lambda (_in33455_
                                                               _r33457_)
                                                        (if (gx#module-import?
                                                             _in33455_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33446_
                         (gx#module-import-name _in33455_))
                        _r33457_
                        (cons _in33455_ _r33457_))
                    (if (gx#import-set? _in33455_)
                        (foldl _fold-e33452_
                               _r33457_
                               (gx#import-set-imports _in33455_))
                        (cons _in33455_ _r33457_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33452_)))
                                      (cons 'begin:
                                            (foldl _fold-e33459_
                                                   '()
                                                   _imports33449_)))
                                    (_g3331833342_ _g3331933346_)))
                              _id3333633395_
                              _hd3332633363_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3333133375_
                                                      _target3332833369_
                                                      '()))
                                                   (_g3331833342_
                                                    _g3331933346_)))))
                                         (_g3331833342_ _g3331933346_))
                                     (_g3331833342_ _g3331933346_))))
                             (_g3331833342_ _g3331933346_))))
                     (_g3331833342_ _g3331933346_)))))
         (_g3331733464_ _stx33315_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in33516_ _rename33518_)
      (gx#make-module-import
       (gx#module-import-source _in33516_)
       _rename33518_
       (gx#module-import-phi _in33516_)
       (gx#module-import-weak? _in33516_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name33469_ _pre33471_)
      (let* ((_name3347233480_ _name33469_)
             (_E3347533486_
              (lambda () (error '"No clause matching" _name3347233480_)))
             (_else3347433492_
              (lambda () (make-symbol _pre33471_ _name33469_)))
             (_K3347633500_
              (lambda (_mark33496_ _id33498_)
                (cons (make-symbol _pre33471_ _id33498_) _mark33496_))))
        (if (##pair? _name3347233480_)
            (let ((_hd3347733504_ (##car _name3347233480_))
                  (_tl3347833507_ (##cdr _name3347233480_)))
              (let* ((_id33510_ _hd3347733504_) (_mark33513_ _tl3347833507_))
                (_K3347633500_ _mark33513_ _id33510_)))
            (_else3347433492_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx33520_)
       (let* ((_g3352333556_
               (lambda (_g3352433552_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3352433552_)))
              (_g3352233742_
               (lambda (_g3352433560_)
                 (if (gx#stx-pair? _g3352433560_)
                     (let ((_e3352833563_ (gx#syntax-e _g3352433560_)))
                       (let ((_hd3352933567_ (##car _e3352833563_))
                             (_tl3353033570_ (##cdr _e3352833563_)))
                         (if (gx#stx-pair? _tl3353033570_)
                             (let ((_e3353133573_
                                    (gx#syntax-e _tl3353033570_)))
                               (let ((_hd3353233577_ (##car _e3353133573_))
                                     (_tl3353333580_ (##cdr _e3353133573_)))
                                 (if (gx#stx-pair/null? _tl3353333580_)
                                     (if (fx>= (gx#stx-length _tl3353333580_)
                                               '0)
                                         (let ((_g34948_
                                                (gx#syntax-split-splice
                                                 _tl3353333580_
                                                 '0)))
                                           (begin
                                             (let ((_g34949_
                                                    (values-count _g34948_)))
                                               (if (not (fx= _g34949_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34949_)))
                                             (let ((_target3353433583_
                                                    (values-ref _g34948_ 0))
                                                   (_tl3353633586_
                                                    (values-ref _g34948_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3353633586_)
                                                   (letrec ((_loop3353733589_
                                                             (lambda (_hd3353533593_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3354133596_
                              _id3354233598_)
                       (if (gx#stx-pair? _hd3353533593_)
                           (let ((_e3353833601_ (gx#syntax-e _hd3353533593_)))
                             (let ((_lp-hd3353933605_ (##car _e3353833601_))
                                   (_lp-tl3354033608_ (##cdr _e3353833601_)))
                               (if (gx#stx-pair? _lp-hd3353933605_)
                                   (let ((_e3354533611_
                                          (gx#syntax-e _lp-hd3353933605_)))
                                     (let ((_hd3354633615_
                                            (##car _e3354533611_))
                                           (_tl3354733618_
                                            (##cdr _e3354533611_)))
                                       (if (gx#stx-pair? _tl3354733618_)
                                           (let ((_e3354833621_
                                                  (gx#syntax-e
                                                   _tl3354733618_)))
                                             (let ((_hd3354933625_
                                                    (##car _e3354833621_))
                                                   (_tl3355033628_
                                                    (##cdr _e3354833621_)))
                                               (if (gx#stx-null?
                                                    _tl3355033628_)
                                                   (_loop3353733589_
                                                    _lp-tl3354033608_
                                                    (cons _hd3354933625_
                                                          _new-id3354133596_)
                                                    (cons _hd3354633615_
                                                          _id3354233598_))
                                                   (_g3352333556_
                                                    _g3352433560_))))
                                           (_g3352333556_ _g3352433560_))))
                                   (_g3352333556_ _g3352433560_))))
                           (let ((_new-id3354333631_
                                  (reverse _new-id3354133596_))
                                 (_id3354433634_ (reverse _id3354233598_)))
                             ((lambda (_L33637_ _L33639_ _L33640_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3365833661_
                                                           _g3365933664_)
                                                    (cons _g3365833661_
                                                          _g3365933664_))
                                                  '()
                                                  _L33639_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3366633669_
                                                           _g3366733672_)
                                                    (cons _g3366633669_
                                                          _g3366733672_))
                                                  '()
                                                  _L33637_)))
                                        '#f)
                                    (let* ((_keytab33675_ (make-hash-table))
                                           (_found33678_ (make-hash-table))
                                           (_g34950_
                                            (for-each
                                             (lambda (_id33681_ _new-id33683_)
                                               (hash-put!
                                                _keytab33675_
                                                (gx#core-identifier-key
                                                 _id33681_)
                                                (gx#core-identifier-key
                                                 _new-id33683_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3368433687_
                                                               _g3368533690_)
                                                        (cons _g3368433687_
                                                              _g3368533690_))
                                                      '()
                                                      _L33639_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3369233695_
                                                               _g3369333698_)
                                                        (cons _g3369233695_
                                                              _g3369333698_))
                                                      '()
                                                      _L33637_))))
                                           (_imports33703_
                                            (gx#core-expand-import-source
                                             _L33640_))
                                           (_fold-e33723_
                                            (letrec ((_fold-e33706_
                                                      (lambda (_in33709_
                                                               _r33711_)
                                                        (if (gx#module-import?
                                                             _in33709_)
                                                            (let* ((_name33713_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in33709_))
                           (_$e33716_ (hash-get _keytab33675_ _name33713_)))
                      (if _$e33716_
                          ((lambda (_rename33720_)
                             (begin
                               (hash-put! _found33678_ _name33713_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in33709_
                                      _rename33720_)
                                     _r33711_)))
                           _$e33716_)
                          (cons _in33709_ _r33711_)))
                    (if (gx#import-set? _in33709_)
                        (foldl _fold-e33706_
                               _r33711_
                               (gx#import-set-imports _in33709_))
                        (cons _in33709_ _r33711_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33706_))
                                           (_new-imports33726_
                                            (foldl _fold-e33723_
                                                   '()
                                                   _imports33703_)))
                                      (begin
                                        (for-each
                                         (lambda (_id33731_)
                                           (if (hash-get
                                                _found33678_
                                                (gx#core-identifier-key
                                                 _id33731_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx33520_
                                                _id33731_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3373333736_
                                                           _g3373433739_)
                                                    (cons _g3373333736_
                                                          _g3373433739_))
                                                  '()
                                                  _L33639_)))
                                        (cons 'begin: _new-imports33726_)))
                                    (_g3352333556_ _g3352433560_)))
                              _new-id3354333631_
                              _id3354433634_
                              _hd3353233577_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3353733589_
                                                      _target3353433583_
                                                      '()
                                                      '()))
                                                   (_g3352333556_
                                                    _g3352433560_)))))
                                         (_g3352333556_ _g3352433560_))
                                     (_g3352333556_ _g3352433560_))))
                             (_g3352333556_ _g3352433560_))))
                     (_g3352333556_ _g3352433560_)))))
         (_g3352233742_ _stx33520_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx33748_)
       (let* ((_g3375133769_
               (lambda (_g3375233765_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3375233765_)))
              (_g3375033848_
               (lambda (_g3375233773_)
                 (if (gx#stx-pair? _g3375233773_)
                     (let ((_e3375533776_ (gx#syntax-e _g3375233773_)))
                       (let ((_hd3375633780_ (##car _e3375533776_))
                             (_tl3375733783_ (##cdr _e3375533776_)))
                         (if (gx#stx-pair? _tl3375733783_)
                             (let ((_e3375833786_
                                    (gx#syntax-e _tl3375733783_)))
                               (let ((_hd3375933790_ (##car _e3375833786_))
                                     (_tl3376033793_ (##cdr _e3375833786_)))
                                 (if (gx#stx-pair? _tl3376033793_)
                                     (let ((_e3376133796_
                                            (gx#syntax-e _tl3376033793_)))
                                       (let ((_hd3376233800_
                                              (##car _e3376133796_))
                                             (_tl3376333803_
                                              (##cdr _e3376133796_)))
                                         (if (gx#stx-null? _tl3376333803_)
                                             ((lambda (_L33806_ _L33808_)
                                                (if (gx#identifier? _L33806_)
                                                    (let* ((_pre33824_
                                                            (gx#stx-e
                                                             _L33806_))
                                                           (_imports33827_
                                                            (gx#core-expand-import-source
                                                             _L33808_))
                                                           (_rename-e33833_
                                                            (lambda (_name33830_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name33830_
                                                               _pre33824_)))
                                                           (_fold-e33843_
                                                            (letrec ((_fold-e33836_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in33839_ _r33841_)
                                (if (gx#module-import? _in33839_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in33839_
                                           (_rename-e33833_
                                            (gx#module-import-name _in33839_)))
                                          _r33841_)
                                    (if (gx#import-set? _in33839_)
                                        (foldl _fold-e33836_
                                               _r33841_
                                               (gx#import-set-imports
                                                _in33839_))
                                        (cons _in33839_ _r33841_))))))
                      _fold-e33836_)))
              (cons 'begin: (foldl _fold-e33843_ '() _imports33827_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3375133769_
                                                     _g3375233773_)))
                                              _hd3376233800_
                                              _hd3375933790_)
                                             (_g3375133769_ _g3375233773_))))
                                     (_g3375133769_ _g3375233773_))))
                             (_g3375133769_ _g3375233773_))))
                     (_g3375133769_ _g3375233773_)))))
         (_g3375033848_ _stx33748_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx33852_)
       (let* ((_g3385533879_
               (lambda (_g3385633875_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3385633875_)))
              (_g3385434001_
               (lambda (_g3385633883_)
                 (if (gx#stx-pair? _g3385633883_)
                     (let ((_e3385933886_ (gx#syntax-e _g3385633883_)))
                       (let ((_hd3386033890_ (##car _e3385933886_))
                             (_tl3386133893_ (##cdr _e3385933886_)))
                         (if (gx#stx-pair? _tl3386133893_)
                             (let ((_e3386233896_
                                    (gx#syntax-e _tl3386133893_)))
                               (let ((_hd3386333900_ (##car _e3386233896_))
                                     (_tl3386433903_ (##cdr _e3386233896_)))
                                 (if (gx#stx-pair/null? _tl3386433903_)
                                     (if (fx>= (gx#stx-length _tl3386433903_)
                                               '0)
                                         (let ((_g34951_
                                                (gx#syntax-split-splice
                                                 _tl3386433903_
                                                 '0)))
                                           (begin
                                             (let ((_g34952_
                                                    (values-count _g34951_)))
                                               (if (not (fx= _g34952_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34952_)))
                                             (let ((_target3386533906_
                                                    (values-ref _g34951_ 0))
                                                   (_tl3386733909_
                                                    (values-ref _g34951_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3386733909_)
                                                   (letrec ((_loop3386833912_
                                                             (lambda (_hd3386633916_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3387233919_)
                       (if (gx#stx-pair? _hd3386633916_)
                           (let ((_e3386933922_ (gx#syntax-e _hd3386633916_)))
                             (let ((_lp-hd3387033926_ (##car _e3386933922_))
                                   (_lp-tl3387133929_ (##cdr _e3386933922_)))
                               (_loop3386833912_
                                _lp-tl3387133929_
                                (cons _lp-hd3387033926_ _id3387233919_))))
                           (let ((_id3387333932_ (reverse _id3387233919_)))
                             ((lambda (_L33936_ _L33938_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3395533958_
                                                       _g3395633961_)
                                                (cons _g3395533958_
                                                      _g3395633961_))
                                              '()
                                              _L33936_)))
                                    (let* ((_keys33972_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3396333966_
                                                               _g3396433969_)
                                                        (cons _g3396333966_
                                                              _g3396433969_))
                                                      '()
                                                      _L33936_))))
                                           (_keytab33983_
                                            (let ((_ht33975_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3397733979_)
                                                   (hash-put!
                                                    _ht33975_
                                                    _g3397733979_
                                                    '#t))
                                                 _keys33972_)
                                                _ht33975_)))
                                           (_exports33986_
                                            (gx#core-expand-export-source
                                             _L33938_))
                                           (_fold-e33996_
                                            (letrec ((_fold-e33989_
                                                      (lambda (_out33992_
                                                               _r33994_)
                                                        (if (gx#module-export?
                                                             _out33992_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33983_
                         (gx#module-export-name _out33992_))
                        _r33994_
                        (cons _out33992_ _r33994_))
                    (if (gx#export-set? _out33992_)
                        (foldl _fold-e33989_
                               _r33994_
                               (gx#export-set-exports _out33992_))
                        _r33994_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33989_)))
                                      (cons 'begin:
                                            (foldl _fold-e33996_
                                                   '()
                                                   _exports33986_)))
                                    (_g3385533879_ _g3385633883_)))
                              _id3387333932_
                              _hd3386333900_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3386833912_
                                                      _target3386533906_
                                                      '()))
                                                   (_g3385533879_
                                                    _g3385633883_)))))
                                         (_g3385533879_ _g3385633883_))
                                     (_g3385533879_ _g3385633883_))))
                             (_g3385533879_ _g3385633883_))))
                     (_g3385533879_ _g3385633883_)))))
         (_g3385434001_ _stx33852_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34006_ _rename34008_)
      (gx#make-module-export
       (gx#module-export-context _out34006_)
       (gx#module-export-key _out34006_)
       (gx#module-export-phi _out34006_)
       _rename34008_
       (gx#module-export-weak? _out34006_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34010_)
       (let* ((_g3401334046_
               (lambda (_g3401434042_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3401434042_)))
              (_g3401234232_
               (lambda (_g3401434050_)
                 (if (gx#stx-pair? _g3401434050_)
                     (let ((_e3401834053_ (gx#syntax-e _g3401434050_)))
                       (let ((_hd3401934057_ (##car _e3401834053_))
                             (_tl3402034060_ (##cdr _e3401834053_)))
                         (if (gx#stx-pair? _tl3402034060_)
                             (let ((_e3402134063_
                                    (gx#syntax-e _tl3402034060_)))
                               (let ((_hd3402234067_ (##car _e3402134063_))
                                     (_tl3402334070_ (##cdr _e3402134063_)))
                                 (if (gx#stx-pair/null? _tl3402334070_)
                                     (if (fx>= (gx#stx-length _tl3402334070_)
                                               '0)
                                         (let ((_g34953_
                                                (gx#syntax-split-splice
                                                 _tl3402334070_
                                                 '0)))
                                           (begin
                                             (let ((_g34954_
                                                    (values-count _g34953_)))
                                               (if (not (fx= _g34954_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34954_)))
                                             (let ((_target3402434073_
                                                    (values-ref _g34953_ 0))
                                                   (_tl3402634076_
                                                    (values-ref _g34953_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3402634076_)
                                                   (letrec ((_loop3402734079_
                                                             (lambda (_hd3402534083_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3403134086_
                              _id3403234088_)
                       (if (gx#stx-pair? _hd3402534083_)
                           (let ((_e3402834091_ (gx#syntax-e _hd3402534083_)))
                             (let ((_lp-hd3402934095_ (##car _e3402834091_))
                                   (_lp-tl3403034098_ (##cdr _e3402834091_)))
                               (if (gx#stx-pair? _lp-hd3402934095_)
                                   (let ((_e3403534101_
                                          (gx#syntax-e _lp-hd3402934095_)))
                                     (let ((_hd3403634105_
                                            (##car _e3403534101_))
                                           (_tl3403734108_
                                            (##cdr _e3403534101_)))
                                       (if (gx#stx-pair? _tl3403734108_)
                                           (let ((_e3403834111_
                                                  (gx#syntax-e
                                                   _tl3403734108_)))
                                             (let ((_hd3403934115_
                                                    (##car _e3403834111_))
                                                   (_tl3404034118_
                                                    (##cdr _e3403834111_)))
                                               (if (gx#stx-null?
                                                    _tl3404034118_)
                                                   (_loop3402734079_
                                                    _lp-tl3403034098_
                                                    (cons _hd3403934115_
                                                          _new-id3403134086_)
                                                    (cons _hd3403634105_
                                                          _id3403234088_))
                                                   (_g3401334046_
                                                    _g3401434050_))))
                                           (_g3401334046_ _g3401434050_))))
                                   (_g3401334046_ _g3401434050_))))
                           (let ((_new-id3403334121_
                                  (reverse _new-id3403134086_))
                                 (_id3403434124_ (reverse _id3403234088_)))
                             ((lambda (_L34127_ _L34129_ _L34130_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3414834151_
                                                           _g3414934154_)
                                                    (cons _g3414834151_
                                                          _g3414934154_))
                                                  '()
                                                  _L34129_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3415634159_
                                                           _g3415734162_)
                                                    (cons _g3415634159_
                                                          _g3415734162_))
                                                  '()
                                                  _L34127_)))
                                        '#f)
                                    (let* ((_keytab34165_ (make-hash-table))
                                           (_found34168_ (make-hash-table))
                                           (_g34955_
                                            (for-each
                                             (lambda (_id34171_ _new-id34173_)
                                               (hash-put!
                                                _keytab34165_
                                                (gx#core-identifier-key
                                                 _id34171_)
                                                (gx#core-identifier-key
                                                 _new-id34173_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3417434177_
                                                               _g3417534180_)
                                                        (cons _g3417434177_
                                                              _g3417534180_))
                                                      '()
                                                      _L34129_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3418234185_
                                                               _g3418334188_)
                                                        (cons _g3418234185_
                                                              _g3418334188_))
                                                      '()
                                                      _L34127_))))
                                           (_exports34193_
                                            (gx#core-expand-export-source
                                             _L34130_))
                                           (_fold-e34213_
                                            (letrec ((_fold-e34196_
                                                      (lambda (_out34199_
                                                               _r34201_)
                                                        (if (gx#module-export?
                                                             _out34199_)
                                                            (let* ((_name34203_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34199_))
                           (_$e34206_ (hash-get _keytab34165_ _name34203_)))
                      (if _$e34206_
                          ((lambda (_rename34210_)
                             (begin
                               (hash-put! _found34168_ _name34203_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34199_
                                      _rename34210_)
                                     _r34201_)))
                           _$e34206_)
                          (cons _out34199_ _r34201_)))
                    (if (gx#export-set? _out34199_)
                        (foldl _fold-e34196_
                               _r34201_
                               (gx#export-set-exports _out34199_))
                        (cons _out34199_ _r34201_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34196_))
                                           (_new-exports34216_
                                            (foldl _fold-e34213_
                                                   '()
                                                   _exports34193_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34221_)
                                           (if (hash-get
                                                _found34168_
                                                (gx#core-identifier-key
                                                 _id34221_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34010_
                                                _id34221_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3422334226_
                                                           _g3422434229_)
                                                    (cons _g3422334226_
                                                          _g3422434229_))
                                                  '()
                                                  _L34129_)))
                                        (cons 'begin: _new-exports34216_)))
                                    (_g3401334046_ _g3401434050_)))
                              _new-id3403334121_
                              _id3403434124_
                              _hd3402234067_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3402734079_
                                                      _target3402434073_
                                                      '()
                                                      '()))
                                                   (_g3401334046_
                                                    _g3401434050_)))))
                                         (_g3401334046_ _g3401434050_))
                                     (_g3401334046_ _g3401434050_))))
                             (_g3401334046_ _g3401434050_))))
                     (_g3401334046_ _g3401434050_)))))
         (_g3401234232_ _stx34010_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34238_)
       (let* ((_g3424134259_
               (lambda (_g3424234255_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3424234255_)))
              (_g3424034338_
               (lambda (_g3424234263_)
                 (if (gx#stx-pair? _g3424234263_)
                     (let ((_e3424534266_ (gx#syntax-e _g3424234263_)))
                       (let ((_hd3424634270_ (##car _e3424534266_))
                             (_tl3424734273_ (##cdr _e3424534266_)))
                         (if (gx#stx-pair? _tl3424734273_)
                             (let ((_e3424834276_
                                    (gx#syntax-e _tl3424734273_)))
                               (let ((_hd3424934280_ (##car _e3424834276_))
                                     (_tl3425034283_ (##cdr _e3424834276_)))
                                 (if (gx#stx-pair? _tl3425034283_)
                                     (let ((_e3425134286_
                                            (gx#syntax-e _tl3425034283_)))
                                       (let ((_hd3425234290_
                                              (##car _e3425134286_))
                                             (_tl3425334293_
                                              (##cdr _e3425134286_)))
                                         (if (gx#stx-null? _tl3425334293_)
                                             ((lambda (_L34296_ _L34298_)
                                                (if (gx#identifier? _L34296_)
                                                    (let* ((_pre34314_
                                                            (gx#stx-e
                                                             _L34296_))
                                                           (_exports34317_
                                                            (gx#core-expand-export-source
                                                             _L34298_))
                                                           (_rename-e34323_
                                                            (lambda (_name34320_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34320_
                                                               _pre34314_)))
                                                           (_fold-e34333_
                                                            (letrec ((_fold-e34326_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34329_ _r34331_)
                                (if (gx#module-export? _out34329_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34329_
                                           (_rename-e34323_
                                            (gx#module-export-name
                                             _out34329_)))
                                          _r34331_)
                                    (if (gx#export-set? _out34329_)
                                        (foldl _fold-e34326_
                                               _r34331_
                                               (gx#export-set-exports
                                                _out34329_))
                                        (cons _out34329_ _r34331_))))))
                      _fold-e34326_)))
              (cons 'begin: (foldl _fold-e34333_ '() _exports34317_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3424134259_
                                                     _g3424234263_)))
                                              _hd3425234290_
                                              _hd3424934280_)
                                             (_g3424134259_ _g3424234263_))))
                                     (_g3424134259_ _g3424234263_))))
                             (_g3424134259_ _g3424234263_))))
                     (_g3424134259_ _g3424234263_)))))
         (_g3424034338_ _stx34238_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34342_)
       (let* ((_g3434534365_
               (lambda (_g3434634361_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3434634361_)))
              (_g3434434600_
               (lambda (_g3434634369_)
                 (if (gx#stx-pair? _g3434634369_)
                     (let ((_e3434834372_ (gx#syntax-e _g3434634369_)))
                       (let ((_hd3434934376_ (##car _e3434834372_))
                             (_tl3435034379_ (##cdr _e3434834372_)))
                         (if (gx#stx-pair/null? _tl3435034379_)
                             (if (fx>= (gx#stx-length _tl3435034379_) '0)
                                 (let ((_g34956_
                                        (gx#syntax-split-splice
                                         _tl3435034379_
                                         '0)))
                                   (begin
                                     (let ((_g34957_ (values-count _g34956_)))
                                       (if (not (fx= _g34957_ 2))
                                           (error "Context expects 2 values"
                                                  _g34957_)))
                                     (let ((_target3435134382_
                                            (values-ref _g34956_ 0))
                                           (_tl3435334385_
                                            (values-ref _g34956_ 1)))
                                       (if (gx#stx-null? _tl3435334385_)
                                           (letrec ((_loop3435434388_
                                                     (lambda (_hd3435234392_
                                                              _id3435834395_)
                                                       (if (gx#stx-pair?
                                                            _hd3435234392_)
                                                           (let ((_e3435534398_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3435234392_)))
                     (let ((_lp-hd3435634402_ (##car _e3435534398_))
                           (_lp-tl3435734405_ (##cdr _e3435534398_)))
                       (_loop3435434388_
                        _lp-tl3435734405_
                        (cons _lp-hd3435634402_ _id3435834395_))))
                   (let ((_id3435934408_ (reverse _id3435834395_)))
                     ((lambda (_L34412_)
                        (let _lp34428_ ((_rest34431_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3459134594_
                                                           _g3459234597_)
                                                    (cons _g3459134594_
                                                          _g3459234597_))
                                                  '()
                                                  _L34412_)))
                                        (_ids34433_ '()))
                          (let* ((_g3443634448_
                                  (lambda (_g3443734444_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3443734444_)))
                                 (_g3443534459_
                                  (lambda (_g3443734452_)
                                    ((lambda () (cons 'begin: _ids34433_)))))
                                 (_g3443434588_
                                  (lambda (_g3443734463_)
                                    (if (gx#stx-pair? _g3443734463_)
                                        (let ((_e3444034466_
                                               (gx#syntax-e _g3443734463_)))
                                          (let ((_hd3444134470_
                                                 (##car _e3444034466_))
                                                (_tl3444234473_
                                                 (##cdr _e3444034466_)))
                                            ((lambda (_L34476_ _L34478_)
                                               (let ((_info34493_
                                                      (gx#syntax-local-value
                                                       _L34478_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info34493_)
                                                     (let* ((_g3449534512_
                                                             (slot-ref
                                                              _info34493_
                                                              'expander-identifiers))
                                                            (_E3449734518_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3449534512_)))
                    (_K3449834530_
                     (lambda (_setf34522_
                              _getf34524_
                              _type?34525_
                              _make-type34526_
                              _type::t34527_
                              _super34528_)
                       (_lp34428_
                        _L34476_
                        (cons _L34478_
                              (cons _type::t34527_
                                    (cons _make-type34526_
                                          (cons _type?34525_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids34433_
                                                              _setf34522_)
                                                       _getf34524_)))))))))
               (if (##pair? _g3449534512_)
                   (let ((_hd3449934534_ (##car _g3449534512_))
                         (_tl3450034537_ (##cdr _g3449534512_)))
                     (let ((_super34540_ _hd3449934534_))
                       (if (##pair? _tl3450034537_)
                           (let ((_hd3450134543_ (##car _tl3450034537_))
                                 (_tl3450234546_ (##cdr _tl3450034537_)))
                             (let ((_type::t34549_ _hd3450134543_))
                               (if (##pair? _tl3450234546_)
                                   (let ((_hd3450334552_
                                          (##car _tl3450234546_))
                                         (_tl3450434555_
                                          (##cdr _tl3450234546_)))
                                     (let ((_make-type34558_ _hd3450334552_))
                                       (if (##pair? _tl3450434555_)
                                           (let ((_hd3450534561_
                                                  (##car _tl3450434555_))
                                                 (_tl3450634564_
                                                  (##cdr _tl3450434555_)))
                                             (let ((_type?34567_
                                                    _hd3450534561_))
                                               (if (##pair? _tl3450634564_)
                                                   (let ((_hd3450734570_
                                                          (##car _tl3450634564_))
                                                         (_tl3450834573_
                                                          (##cdr _tl3450634564_)))
                                                     (let ((_getf34576_
                                                            _hd3450734570_))
                                                       (if (##pair? _tl3450834573_)
                                                           (let ((_hd3450934579_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3450834573_))
                         (_tl3451034582_ (##cdr _tl3450834573_)))
                     (let ((_setf34585_ _hd3450934579_))
                       (if (##null? _tl3451034582_)
                           (_K3449834530_
                            _setf34585_
                            _getf34576_
                            _type?34567_
                            _make-type34558_
                            _type::t34549_
                            _super34540_)
                           (_E3449734518_))))
                   (_E3449734518_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3449734518_))))
                                           (_E3449734518_))))
                                   (_E3449734518_))))
                           (_E3449734518_))))
                   (_E3449734518_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34342_
                                                      _L34478_))))
                                             _tl3444234473_
                                             _hd3444134470_)))
                                        (_g3443534459_ _g3443734463_)))))
                            (_g3443434588_ _rest34431_))))
                      _id3435934408_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3435434388_
                                              _target3435134382_
                                              '()))
                                           (_g3434534365_ _g3434634369_)))))
                                 (_g3434534365_ _g3434634369_))
                             (_g3434534365_ _g3434634369_))))
                     (_g3434534365_ _g3434634369_)))))
         (_g3434434600_ _stx34342_))))))
