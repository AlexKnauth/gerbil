(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx29152_)
      (let* ((_g2915729176_
              (lambda (_g2915829172_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2915829172_)))
             (_g2915629222_
              (lambda (_g2915829180_)
                (if (gx#stx-pair? _g2915829180_)
                    (let ((_e2916529183_ (gx#syntax-e _g2915829180_)))
                      (let ((_hd2916629187_ (##car _e2916529183_))
                            (_tl2916729190_ (##cdr _e2916529183_)))
                        (if (gx#stx-pair? _tl2916729190_)
                            (let ((_e2916829193_ (gx#syntax-e _tl2916729190_)))
                              (let ((_hd2916929197_ (##car _e2916829193_))
                                    (_tl2917029200_ (##cdr _e2916829193_)))
                                ((lambda (_L29203_ _L29205_ _L29206_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L29205_
                                                     (cons (cons _L29206_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L29203_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L29205_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl2917029200_
                                 _hd2916929197_
                                 _hd2916629187_)))
                            (_g2915729176_ _g2915829180_))))
                    (_g2915729176_ _g2915829180_))))
             (_g2915529243_
              (lambda (_g2915829226_)
                (if (gx#stx-pair? _g2915829226_)
                    (let ((_e2915929229_ (gx#syntax-e _g2915829226_)))
                      (let ((_hd2916029233_ (##car _e2915929229_))
                            (_tl2916129236_ (##cdr _e2915929229_)))
                        (if (gx#stx-null? _tl2916129236_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g2915629222_ _g2915829226_))))
                    (_g2915629222_ _g2915829226_)))))
        (_g2915529243_ _$stx29152_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx29247_)
      (let* ((_g2925229292_
              (lambda (_g2925329288_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2925329288_)))
             (_g2925129393_
              (lambda (_g2925329296_)
                (if (gx#stx-pair? _g2925329296_)
                    (let ((_e2926929299_ (gx#syntax-e _g2925329296_)))
                      (let ((_hd2927029303_ (##car _e2926929299_))
                            (_tl2927129306_ (##cdr _e2926929299_)))
                        (if (gx#stx-pair? _tl2927129306_)
                            (let ((_e2927229309_ (gx#syntax-e _tl2927129306_)))
                              (let ((_hd2927329313_ (##car _e2927229309_))
                                    (_tl2927429316_ (##cdr _e2927229309_)))
                                (if (gx#stx-pair? _hd2927329313_)
                                    (let ((_e2927529319_
                                           (gx#syntax-e _hd2927329313_)))
                                      (let ((_hd2927629323_
                                             (##car _e2927529319_))
                                            (_tl2927729326_
                                             (##cdr _e2927529319_)))
                                        (if (gx#stx-pair/null? _tl2927429316_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2927429316_)
                                                      '0)
                                                (let ((_g31798_
                                                       (gx#syntax-split-splice
                                                        _tl2927429316_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31799_
                                                           (values-count
                                                            _g31798_)))
                                                      (if (not (fx= _g31799_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31799_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2927829329_
                                                           (values-ref
                                                            _g31798_
                                                            0))
                                                          (_tl2928029332_
                                                           (values-ref
                                                            _g31798_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2928029332_)
                                                          (letrec ((_loop2928129335_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2927929339_ _body2928529342_)
                              (if (gx#stx-pair? _hd2927929339_)
                                  (let ((_e2928229345_
                                         (gx#syntax-e _hd2927929339_)))
                                    (let ((_lp-hd2928329349_
                                           (##car _e2928229345_))
                                          (_lp-tl2928429352_
                                           (##cdr _e2928229345_)))
                                      (_loop2928129335_
                                       _lp-tl2928429352_
                                       (cons _lp-hd2928329349_
                                             _body2928529342_))))
                                  (let ((_body2928629355_
                                         (reverse _body2928529342_)))
                                    ((lambda (_L29359_
                                              _L29361_
                                              _L29362_
                                              _L29363_)
                                       (if (gx#identifier? _L29362_)
                                           (cons _L29363_
                                                 (cons _L29362_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29361_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2938429387_ _g2938529390_)
                                            (cons _g2938429387_ _g2938529390_))
                                          '()
                                          _L29359_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2925229292_ _g2925329296_)))
                                     _body2928629355_
                                     _tl2927729326_
                                     _hd2927629323_
                                     _hd2927029303_))))))
                    (_loop2928129335_ _target2927829329_ '()))
                  (_g2925229292_ _g2925329296_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2925229292_ _g2925329296_))
                                            (_g2925229292_ _g2925329296_))))
                                    (_g2925229292_ _g2925329296_))))
                            (_g2925229292_ _g2925329296_))))
                    (_g2925229292_ _g2925329296_))))
             (_g2925029447_
              (lambda (_g2925329397_)
                (if (gx#stx-pair? _g2925329397_)
                    (let ((_e2925629400_ (gx#syntax-e _g2925329397_)))
                      (let ((_hd2925729404_ (##car _e2925629400_))
                            (_tl2925829407_ (##cdr _e2925629400_)))
                        (if (gx#stx-pair? _tl2925829407_)
                            (let ((_e2925929410_ (gx#syntax-e _tl2925829407_)))
                              (let ((_hd2926029414_ (##car _e2925929410_))
                                    (_tl2926129417_ (##cdr _e2925929410_)))
                                (if (gx#stx-pair? _tl2926129417_)
                                    (let ((_e2926229420_
                                           (gx#syntax-e _tl2926129417_)))
                                      (let ((_hd2926329424_
                                             (##car _e2926229420_))
                                            (_tl2926429427_
                                             (##cdr _e2926229420_)))
                                        (if (gx#stx-null? _tl2926429427_)
                                            ((lambda (_L29430_ _L29432_)
                                               (if (gx#identifier? _L29432_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29432_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L29430_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2925129393_
                                                    _g2925329397_)))
                                             _hd2926329424_
                                             _hd2926029414_)
                                            (_g2925129393_ _g2925329397_))))
                                    (_g2925129393_ _g2925329397_))))
                            (_g2925129393_ _g2925329397_))))
                    (_g2925129393_ _g2925329397_)))))
        (_g2925029447_ _$stx29247_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx29452_)
      (let* ((_g2945729497_
              (lambda (_g2945829493_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2945829493_)))
             (_g2945629598_
              (lambda (_g2945829501_)
                (if (gx#stx-pair? _g2945829501_)
                    (let ((_e2947429504_ (gx#syntax-e _g2945829501_)))
                      (let ((_hd2947529508_ (##car _e2947429504_))
                            (_tl2947629511_ (##cdr _e2947429504_)))
                        (if (gx#stx-pair? _tl2947629511_)
                            (let ((_e2947729514_ (gx#syntax-e _tl2947629511_)))
                              (let ((_hd2947829518_ (##car _e2947729514_))
                                    (_tl2947929521_ (##cdr _e2947729514_)))
                                (if (gx#stx-pair? _hd2947829518_)
                                    (let ((_e2948029524_
                                           (gx#syntax-e _hd2947829518_)))
                                      (let ((_hd2948129528_
                                             (##car _e2948029524_))
                                            (_tl2948229531_
                                             (##cdr _e2948029524_)))
                                        (if (gx#stx-pair/null? _tl2947929521_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2947929521_)
                                                      '0)
                                                (let ((_g31800_
                                                       (gx#syntax-split-splice
                                                        _tl2947929521_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31801_
                                                           (values-count
                                                            _g31800_)))
                                                      (if (not (fx= _g31801_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31801_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2948329534_
                                                           (values-ref
                                                            _g31800_
                                                            0))
                                                          (_tl2948529537_
                                                           (values-ref
                                                            _g31800_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2948529537_)
                                                          (letrec ((_loop2948629540_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2948429544_ _body2949029547_)
                              (if (gx#stx-pair? _hd2948429544_)
                                  (let ((_e2948729550_
                                         (gx#syntax-e _hd2948429544_)))
                                    (let ((_lp-hd2948829554_
                                           (##car _e2948729550_))
                                          (_lp-tl2948929557_
                                           (##cdr _e2948729550_)))
                                      (_loop2948629540_
                                       _lp-tl2948929557_
                                       (cons _lp-hd2948829554_
                                             _body2949029547_))))
                                  (let ((_body2949129560_
                                         (reverse _body2949029547_)))
                                    ((lambda (_L29564_
                                              _L29566_
                                              _L29567_
                                              _L29568_)
                                       (if (gx#identifier? _L29567_)
                                           (cons _L29568_
                                                 (cons _L29567_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29566_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2958929592_ _g2959029595_)
                                            (cons _g2958929592_ _g2959029595_))
                                          '()
                                          _L29564_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2945729497_ _g2945829501_)))
                                     _body2949129560_
                                     _tl2948229531_
                                     _hd2948129528_
                                     _hd2947529508_))))))
                    (_loop2948629540_ _target2948329534_ '()))
                  (_g2945729497_ _g2945829501_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2945729497_ _g2945829501_))
                                            (_g2945729497_ _g2945829501_))))
                                    (_g2945729497_ _g2945829501_))))
                            (_g2945729497_ _g2945829501_))))
                    (_g2945729497_ _g2945829501_))))
             (_g2945529652_
              (lambda (_g2945829602_)
                (if (gx#stx-pair? _g2945829602_)
                    (let ((_e2946129605_ (gx#syntax-e _g2945829602_)))
                      (let ((_hd2946229609_ (##car _e2946129605_))
                            (_tl2946329612_ (##cdr _e2946129605_)))
                        (if (gx#stx-pair? _tl2946329612_)
                            (let ((_e2946429615_ (gx#syntax-e _tl2946329612_)))
                              (let ((_hd2946529619_ (##car _e2946429615_))
                                    (_tl2946629622_ (##cdr _e2946429615_)))
                                (if (gx#stx-pair? _tl2946629622_)
                                    (let ((_e2946729625_
                                           (gx#syntax-e _tl2946629622_)))
                                      (let ((_hd2946829629_
                                             (##car _e2946729625_))
                                            (_tl2946929632_
                                             (##cdr _e2946729625_)))
                                        (if (gx#stx-null? _tl2946929632_)
                                            ((lambda (_L29635_ _L29637_)
                                               (if (gx#identifier? _L29637_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29637_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L29635_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2945629598_
                                                    _g2945829602_)))
                                             _hd2946829629_
                                             _hd2946529619_)
                                            (_g2945629598_ _g2945829602_))))
                                    (_g2945629598_ _g2945829602_))))
                            (_g2945629598_ _g2945829602_))))
                    (_g2945629598_ _g2945829602_)))))
        (_g2945529652_ _$stx29452_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx29657_)
      (let* ((_g2966229702_
              (lambda (_g2966329698_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g2966329698_)))
             (_g2966129803_
              (lambda (_g2966329706_)
                (if (gx#stx-pair? _g2966329706_)
                    (let ((_e2967929709_ (gx#syntax-e _g2966329706_)))
                      (let ((_hd2968029713_ (##car _e2967929709_))
                            (_tl2968129716_ (##cdr _e2967929709_)))
                        (if (gx#stx-pair? _tl2968129716_)
                            (let ((_e2968229719_ (gx#syntax-e _tl2968129716_)))
                              (let ((_hd2968329723_ (##car _e2968229719_))
                                    (_tl2968429726_ (##cdr _e2968229719_)))
                                (if (gx#stx-pair? _hd2968329723_)
                                    (let ((_e2968529729_
                                           (gx#syntax-e _hd2968329723_)))
                                      (let ((_hd2968629733_
                                             (##car _e2968529729_))
                                            (_tl2968729736_
                                             (##cdr _e2968529729_)))
                                        (if (gx#stx-pair/null? _tl2968429726_)
                                            (if (fx>= (gx#stx-length
                                                       _tl2968429726_)
                                                      '0)
                                                (let ((_g31802_
                                                       (gx#syntax-split-splice
                                                        _tl2968429726_
                                                        '0)))
                                                  (begin
                                                    (let ((_g31803_
                                                           (values-count
                                                            _g31802_)))
                                                      (if (not (fx= _g31803_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g31803_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target2968829739_
                                                           (values-ref
                                                            _g31802_
                                                            0))
                                                          (_tl2969029742_
                                                           (values-ref
                                                            _g31802_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl2969029742_)
                                                          (letrec ((_loop2969129745_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd2968929749_ _body2969529752_)
                              (if (gx#stx-pair? _hd2968929749_)
                                  (let ((_e2969229755_
                                         (gx#syntax-e _hd2968929749_)))
                                    (let ((_lp-hd2969329759_
                                           (##car _e2969229755_))
                                          (_lp-tl2969429762_
                                           (##cdr _e2969229755_)))
                                      (_loop2969129745_
                                       _lp-tl2969429762_
                                       (cons _lp-hd2969329759_
                                             _body2969529752_))))
                                  (let ((_body2969629765_
                                         (reverse _body2969529752_)))
                                    ((lambda (_L29769_
                                              _L29771_
                                              _L29772_
                                              _L29773_)
                                       (if (gx#identifier? _L29772_)
                                           (cons _L29773_
                                                 (cons _L29772_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L29771_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g2979429797_ _g2979529800_)
                                            (cons _g2979429797_ _g2979529800_))
                                          '()
                                          _L29769_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g2966229702_ _g2966329706_)))
                                     _body2969629765_
                                     _tl2968729736_
                                     _hd2968629733_
                                     _hd2968029713_))))))
                    (_loop2969129745_ _target2968829739_ '()))
                  (_g2966229702_ _g2966329706_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g2966229702_ _g2966329706_))
                                            (_g2966229702_ _g2966329706_))))
                                    (_g2966229702_ _g2966329706_))))
                            (_g2966229702_ _g2966329706_))))
                    (_g2966229702_ _g2966329706_))))
             (_g2966029857_
              (lambda (_g2966329807_)
                (if (gx#stx-pair? _g2966329807_)
                    (let ((_e2966629810_ (gx#syntax-e _g2966329807_)))
                      (let ((_hd2966729814_ (##car _e2966629810_))
                            (_tl2966829817_ (##cdr _e2966629810_)))
                        (if (gx#stx-pair? _tl2966829817_)
                            (let ((_e2966929820_ (gx#syntax-e _tl2966829817_)))
                              (let ((_hd2967029824_ (##car _e2966929820_))
                                    (_tl2967129827_ (##cdr _e2966929820_)))
                                (if (gx#stx-pair? _tl2967129827_)
                                    (let ((_e2967229830_
                                           (gx#syntax-e _tl2967129827_)))
                                      (let ((_hd2967329834_
                                             (##car _e2967229830_))
                                            (_tl2967429837_
                                             (##cdr _e2967229830_)))
                                        (if (gx#stx-null? _tl2967429837_)
                                            ((lambda (_L29840_ _L29842_)
                                               (if (gx#identifier? _L29842_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L29842_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L29840_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g2966129803_
                                                    _g2966329807_)))
                                             _hd2967329834_
                                             _hd2967029824_)
                                            (_g2966129803_ _g2966329807_))))
                                    (_g2966129803_ _g2966329807_))))
                            (_g2966129803_ _g2966329807_))))
                    (_g2966129803_ _g2966329807_)))))
        (_g2966029857_ _$stx29657_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx29862_)
       (let* ((_g2986529885_
               (lambda (_g2986629881_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g2986629881_)))
              (_g2986429956_
               (lambda (_g2986629889_)
                 (if (gx#stx-pair? _g2986629889_)
                     (let ((_e2986829892_ (gx#syntax-e _g2986629889_)))
                       (let ((_hd2986929896_ (##car _e2986829892_))
                             (_tl2987029899_ (##cdr _e2986829892_)))
                         (if (gx#stx-pair/null? _tl2987029899_)
                             (if (fx>= (gx#stx-length _tl2987029899_) '0)
                                 (let ((_g31804_
                                        (gx#syntax-split-splice
                                         _tl2987029899_
                                         '0)))
                                   (begin
                                     (let ((_g31805_ (values-count _g31804_)))
                                       (if (not (fx= _g31805_ 2))
                                           (error "Context expects 2 values"
                                                  _g31805_)))
                                     (let ((_target2987129902_
                                            (values-ref _g31804_ 0))
                                           (_tl2987329905_
                                            (values-ref _g31804_ 1)))
                                       (if (gx#stx-null? _tl2987329905_)
                                           (letrec ((_loop2987429908_
                                                     (lambda (_hd2987229912_
                                                              _body2987829915_)
                                                       (if (gx#stx-pair?
                                                            _hd2987229912_)
                                                           (let ((_e2987529918_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd2987229912_)))
                     (let ((_lp-hd2987629922_ (##car _e2987529918_))
                           (_lp-tl2987729925_ (##cdr _e2987529918_)))
                       (_loop2987429908_
                        _lp-tl2987729925_
                        (cons _lp-hd2987629922_ _body2987829915_))))
                   (let ((_body2987929928_ (reverse _body2987829915_)))
                     ((lambda (_L29932_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g2994729950_
                                                      _g2994829953_)
                                               (cons _g2994729950_
                                                     _g2994829953_))
                                             '()
                                             _L29932_)))))
                      _body2987929928_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop2987429908_
                                              _target2987129902_
                                              '()))
                                           (_g2986529885_ _g2986629889_)))))
                                 (_g2986529885_ _g2986629889_))
                             (_g2986529885_ _g2986629889_))))
                     (_g2986529885_ _g2986629889_)))))
         (_g2986429956_ _stx29862_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx29961_)
       (let* ((_g2996429984_
               (lambda (_g2996529980_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g2996529980_)))
              (_g2996330055_
               (lambda (_g2996529988_)
                 (if (gx#stx-pair? _g2996529988_)
                     (let ((_e2996729991_ (gx#syntax-e _g2996529988_)))
                       (let ((_hd2996829995_ (##car _e2996729991_))
                             (_tl2996929998_ (##cdr _e2996729991_)))
                         (if (gx#stx-pair/null? _tl2996929998_)
                             (if (fx>= (gx#stx-length _tl2996929998_) '0)
                                 (let ((_g31806_
                                        (gx#syntax-split-splice
                                         _tl2996929998_
                                         '0)))
                                   (begin
                                     (let ((_g31807_ (values-count _g31806_)))
                                       (if (not (fx= _g31807_ 2))
                                           (error "Context expects 2 values"
                                                  _g31807_)))
                                     (let ((_target2997030001_
                                            (values-ref _g31806_ 0))
                                           (_tl2997230004_
                                            (values-ref _g31806_ 1)))
                                       (if (gx#stx-null? _tl2997230004_)
                                           (letrec ((_loop2997330007_
                                                     (lambda (_hd2997130011_
                                                              _body2997730014_)
                                                       (if (gx#stx-pair?
                                                            _hd2997130011_)
                                                           (let ((_e2997430017_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd2997130011_)))
                     (let ((_lp-hd2997530021_ (##car _e2997430017_))
                           (_lp-tl2997630024_ (##cdr _e2997430017_)))
                       (_loop2997330007_
                        _lp-tl2997630024_
                        (cons _lp-hd2997530021_ _body2997730014_))))
                   (let ((_body2997830027_ (reverse _body2997730014_)))
                     ((lambda (_L30031_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3004630049_
                                                      _g3004730052_)
                                               (cons _g3004630049_
                                                     _g3004730052_))
                                             '()
                                             _L30031_)))))
                      _body2997830027_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop2997330007_
                                              _target2997030001_
                                              '()))
                                           (_g2996429984_ _g2996529988_)))))
                                 (_g2996429984_ _g2996529988_))
                             (_g2996429984_ _g2996529988_))))
                     (_g2996429984_ _g2996529988_)))))
         (_g2996330055_ _stx29961_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx30060_)
       (let* ((_g3006330087_
               (lambda (_g3006430083_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3006430083_)))
              (_g3006230209_
               (lambda (_g3006430091_)
                 (if (gx#stx-pair? _g3006430091_)
                     (let ((_e3006730094_ (gx#syntax-e _g3006430091_)))
                       (let ((_hd3006830098_ (##car _e3006730094_))
                             (_tl3006930101_ (##cdr _e3006730094_)))
                         (if (gx#stx-pair? _tl3006930101_)
                             (let ((_e3007030104_
                                    (gx#syntax-e _tl3006930101_)))
                               (let ((_hd3007130108_ (##car _e3007030104_))
                                     (_tl3007230111_ (##cdr _e3007030104_)))
                                 (if (gx#stx-pair/null? _tl3007230111_)
                                     (if (fx>= (gx#stx-length _tl3007230111_)
                                               '0)
                                         (let ((_g31808_
                                                (gx#syntax-split-splice
                                                 _tl3007230111_
                                                 '0)))
                                           (begin
                                             (let ((_g31809_
                                                    (values-count _g31808_)))
                                               (if (not (fx= _g31809_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31809_)))
                                             (let ((_target3007330114_
                                                    (values-ref _g31808_ 0))
                                                   (_tl3007530117_
                                                    (values-ref _g31808_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3007530117_)
                                                   (letrec ((_loop3007630120_
                                                             (lambda (_hd3007430124_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3008030127_)
                       (if (gx#stx-pair? _hd3007430124_)
                           (let ((_e3007730130_ (gx#syntax-e _hd3007430124_)))
                             (let ((_lp-hd3007830134_ (##car _e3007730130_))
                                   (_lp-tl3007930137_ (##cdr _e3007730130_)))
                               (_loop3007630120_
                                _lp-tl3007930137_
                                (cons _lp-hd3007830134_ _id3008030127_))))
                           (let ((_id3008130140_ (reverse _id3008030127_)))
                             ((lambda (_L30144_ _L30146_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3016330166_
                                                       _g3016430169_)
                                                (cons _g3016330166_
                                                      _g3016430169_))
                                              '()
                                              _L30144_)))
                                    (let* ((_keys30180_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3017130174_
                                                               _g3017230177_)
                                                        (cons _g3017130174_
                                                              _g3017230177_))
                                                      '()
                                                      _L30144_))))
                                           (_keytab30191_
                                            (let ((_ht30183_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3018530187_)
                                                   (hash-put!
                                                    _ht30183_
                                                    _g3018530187_
                                                    '#t))
                                                 _keys30180_)
                                                _ht30183_)))
                                           (_imports30194_
                                            (gx#core-expand-import-source
                                             _L30146_))
                                           (_fold-e30204_
                                            (letrec ((_fold-e30197_
                                                      (lambda (_in30200_
                                                               _r30202_)
                                                        (if (gx#module-import?
                                                             _in30200_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30191_
                         (gx#module-import-name _in30200_))
                        (cons _in30200_ _r30202_)
                        _r30202_)
                    (if (gx#import-set? _in30200_)
                        (foldl _fold-e30197_
                               _r30202_
                               (gx#import-set-imports _in30200_))
                        _r30202_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30197_)))
                                      (cons 'begin:
                                            (foldl _fold-e30204_
                                                   '()
                                                   _imports30194_)))
                                    (_g3006330087_ _g3006430091_)))
                              _id3008130140_
                              _hd3007130108_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3007630120_
                                                      _target3007330114_
                                                      '()))
                                                   (_g3006330087_
                                                    _g3006430091_)))))
                                         (_g3006330087_ _g3006430091_))
                                     (_g3006330087_ _g3006430091_))))
                             (_g3006330087_ _g3006430091_))))
                     (_g3006330087_ _g3006430091_)))))
         (_g3006230209_ _stx30060_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx30214_)
       (let* ((_g3021730241_
               (lambda (_g3021830237_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3021830237_)))
              (_g3021630363_
               (lambda (_g3021830245_)
                 (if (gx#stx-pair? _g3021830245_)
                     (let ((_e3022130248_ (gx#syntax-e _g3021830245_)))
                       (let ((_hd3022230252_ (##car _e3022130248_))
                             (_tl3022330255_ (##cdr _e3022130248_)))
                         (if (gx#stx-pair? _tl3022330255_)
                             (let ((_e3022430258_
                                    (gx#syntax-e _tl3022330255_)))
                               (let ((_hd3022530262_ (##car _e3022430258_))
                                     (_tl3022630265_ (##cdr _e3022430258_)))
                                 (if (gx#stx-pair/null? _tl3022630265_)
                                     (if (fx>= (gx#stx-length _tl3022630265_)
                                               '0)
                                         (let ((_g31810_
                                                (gx#syntax-split-splice
                                                 _tl3022630265_
                                                 '0)))
                                           (begin
                                             (let ((_g31811_
                                                    (values-count _g31810_)))
                                               (if (not (fx= _g31811_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31811_)))
                                             (let ((_target3022730268_
                                                    (values-ref _g31810_ 0))
                                                   (_tl3022930271_
                                                    (values-ref _g31810_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3022930271_)
                                                   (letrec ((_loop3023030274_
                                                             (lambda (_hd3022830278_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3023430281_)
                       (if (gx#stx-pair? _hd3022830278_)
                           (let ((_e3023130284_ (gx#syntax-e _hd3022830278_)))
                             (let ((_lp-hd3023230288_ (##car _e3023130284_))
                                   (_lp-tl3023330291_ (##cdr _e3023130284_)))
                               (_loop3023030274_
                                _lp-tl3023330291_
                                (cons _lp-hd3023230288_ _id3023430281_))))
                           (let ((_id3023530294_ (reverse _id3023430281_)))
                             ((lambda (_L30298_ _L30300_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3031730320_
                                                       _g3031830323_)
                                                (cons _g3031730320_
                                                      _g3031830323_))
                                              '()
                                              _L30298_)))
                                    (let* ((_keys30334_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3032530328_
                                                               _g3032630331_)
                                                        (cons _g3032530328_
                                                              _g3032630331_))
                                                      '()
                                                      _L30298_))))
                                           (_keytab30345_
                                            (let ((_ht30337_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3033930341_)
                                                   (hash-put!
                                                    _ht30337_
                                                    _g3033930341_
                                                    '#t))
                                                 _keys30334_)
                                                _ht30337_)))
                                           (_imports30348_
                                            (gx#core-expand-import-source
                                             _L30300_))
                                           (_fold-e30358_
                                            (letrec ((_fold-e30351_
                                                      (lambda (_in30354_
                                                               _r30356_)
                                                        (if (gx#module-import?
                                                             _in30354_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30345_
                         (gx#module-import-name _in30354_))
                        _r30356_
                        (cons _in30354_ _r30356_))
                    (if (gx#import-set? _in30354_)
                        (foldl _fold-e30351_
                               _r30356_
                               (gx#import-set-imports _in30354_))
                        (cons _in30354_ _r30356_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30351_)))
                                      (cons 'begin:
                                            (foldl _fold-e30358_
                                                   '()
                                                   _imports30348_)))
                                    (_g3021730241_ _g3021830245_)))
                              _id3023530294_
                              _hd3022530262_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3023030274_
                                                      _target3022730268_
                                                      '()))
                                                   (_g3021730241_
                                                    _g3021830245_)))))
                                         (_g3021730241_ _g3021830245_))
                                     (_g3021730241_ _g3021830245_))))
                             (_g3021730241_ _g3021830245_))))
                     (_g3021730241_ _g3021830245_)))))
         (_g3021630363_ _stx30214_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in30415_ _rename30417_)
      (gx#make-module-import
       (gx#module-import-source _in30415_)
       _rename30417_
       (gx#module-import-phi _in30415_)
       (gx#module-import-weak? _in30415_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name30368_ _pre30370_)
      (let* ((_name3037130379_ _name30368_)
             (_E3037430385_
              (lambda () (error '"No clause matching" _name3037130379_)))
             (_else3037330391_
              (lambda () (make-symbol _pre30370_ _name30368_)))
             (_K3037530399_
              (lambda (_mark30395_ _id30397_)
                (cons (make-symbol _pre30370_ _id30397_) _mark30395_))))
        (if (##pair? _name3037130379_)
            (let ((_hd3037630403_ (##car _name3037130379_))
                  (_tl3037730406_ (##cdr _name3037130379_)))
              (let* ((_id30409_ _hd3037630403_) (_mark30412_ _tl3037730406_))
                (_K3037530399_ _mark30412_ _id30409_)))
            (_else3037330391_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx30419_)
       (let* ((_g3042230455_
               (lambda (_g3042330451_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3042330451_)))
              (_g3042130641_
               (lambda (_g3042330459_)
                 (if (gx#stx-pair? _g3042330459_)
                     (let ((_e3042730462_ (gx#syntax-e _g3042330459_)))
                       (let ((_hd3042830466_ (##car _e3042730462_))
                             (_tl3042930469_ (##cdr _e3042730462_)))
                         (if (gx#stx-pair? _tl3042930469_)
                             (let ((_e3043030472_
                                    (gx#syntax-e _tl3042930469_)))
                               (let ((_hd3043130476_ (##car _e3043030472_))
                                     (_tl3043230479_ (##cdr _e3043030472_)))
                                 (if (gx#stx-pair/null? _tl3043230479_)
                                     (if (fx>= (gx#stx-length _tl3043230479_)
                                               '0)
                                         (let ((_g31812_
                                                (gx#syntax-split-splice
                                                 _tl3043230479_
                                                 '0)))
                                           (begin
                                             (let ((_g31813_
                                                    (values-count _g31812_)))
                                               (if (not (fx= _g31813_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31813_)))
                                             (let ((_target3043330482_
                                                    (values-ref _g31812_ 0))
                                                   (_tl3043530485_
                                                    (values-ref _g31812_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3043530485_)
                                                   (letrec ((_loop3043630488_
                                                             (lambda (_hd3043430492_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3044030495_
                              _id3044130497_)
                       (if (gx#stx-pair? _hd3043430492_)
                           (let ((_e3043730500_ (gx#syntax-e _hd3043430492_)))
                             (let ((_lp-hd3043830504_ (##car _e3043730500_))
                                   (_lp-tl3043930507_ (##cdr _e3043730500_)))
                               (if (gx#stx-pair? _lp-hd3043830504_)
                                   (let ((_e3044430510_
                                          (gx#syntax-e _lp-hd3043830504_)))
                                     (let ((_hd3044530514_
                                            (##car _e3044430510_))
                                           (_tl3044630517_
                                            (##cdr _e3044430510_)))
                                       (if (gx#stx-pair? _tl3044630517_)
                                           (let ((_e3044730520_
                                                  (gx#syntax-e
                                                   _tl3044630517_)))
                                             (let ((_hd3044830524_
                                                    (##car _e3044730520_))
                                                   (_tl3044930527_
                                                    (##cdr _e3044730520_)))
                                               (if (gx#stx-null?
                                                    _tl3044930527_)
                                                   (_loop3043630488_
                                                    _lp-tl3043930507_
                                                    (cons _hd3044830524_
                                                          _new-id3044030495_)
                                                    (cons _hd3044530514_
                                                          _id3044130497_))
                                                   (_g3042230455_
                                                    _g3042330459_))))
                                           (_g3042230455_ _g3042330459_))))
                                   (_g3042230455_ _g3042330459_))))
                           (let ((_new-id3044230530_
                                  (reverse _new-id3044030495_))
                                 (_id3044330533_ (reverse _id3044130497_)))
                             ((lambda (_L30536_ _L30538_ _L30539_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3055730560_
                                                           _g3055830563_)
                                                    (cons _g3055730560_
                                                          _g3055830563_))
                                                  '()
                                                  _L30538_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3056530568_
                                                           _g3056630571_)
                                                    (cons _g3056530568_
                                                          _g3056630571_))
                                                  '()
                                                  _L30536_)))
                                        '#f)
                                    (let* ((_keytab30574_ (make-hash-table))
                                           (_found30577_ (make-hash-table))
                                           (_g31814_
                                            (for-each
                                             (lambda (_id30580_ _new-id30582_)
                                               (hash-put!
                                                _keytab30574_
                                                (gx#core-identifier-key
                                                 _id30580_)
                                                (gx#core-identifier-key
                                                 _new-id30582_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3058330586_
                                                               _g3058430589_)
                                                        (cons _g3058330586_
                                                              _g3058430589_))
                                                      '()
                                                      _L30538_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3059130594_
                                                               _g3059230597_)
                                                        (cons _g3059130594_
                                                              _g3059230597_))
                                                      '()
                                                      _L30536_))))
                                           (_imports30602_
                                            (gx#core-expand-import-source
                                             _L30539_))
                                           (_fold-e30622_
                                            (letrec ((_fold-e30605_
                                                      (lambda (_in30608_
                                                               _r30610_)
                                                        (if (gx#module-import?
                                                             _in30608_)
                                                            (let* ((_name30612_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in30608_))
                           (_$e30615_ (hash-get _keytab30574_ _name30612_)))
                      (if _$e30615_
                          ((lambda (_rename30619_)
                             (begin
                               (hash-put! _found30577_ _name30612_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in30608_
                                      _rename30619_)
                                     _r30610_)))
                           _$e30615_)
                          (cons _in30608_ _r30610_)))
                    (if (gx#import-set? _in30608_)
                        (foldl _fold-e30605_
                               _r30610_
                               (gx#import-set-imports _in30608_))
                        (cons _in30608_ _r30610_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30605_))
                                           (_new-imports30625_
                                            (foldl _fold-e30622_
                                                   '()
                                                   _imports30602_)))
                                      (begin
                                        (for-each
                                         (lambda (_id30630_)
                                           (if (hash-get
                                                _found30577_
                                                (gx#core-identifier-key
                                                 _id30630_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx30419_
                                                _id30630_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3063230635_
                                                           _g3063330638_)
                                                    (cons _g3063230635_
                                                          _g3063330638_))
                                                  '()
                                                  _L30538_)))
                                        (cons 'begin: _new-imports30625_)))
                                    (_g3042230455_ _g3042330459_)))
                              _new-id3044230530_
                              _id3044330533_
                              _hd3043130476_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3043630488_
                                                      _target3043330482_
                                                      '()
                                                      '()))
                                                   (_g3042230455_
                                                    _g3042330459_)))))
                                         (_g3042230455_ _g3042330459_))
                                     (_g3042230455_ _g3042330459_))))
                             (_g3042230455_ _g3042330459_))))
                     (_g3042230455_ _g3042330459_)))))
         (_g3042130641_ _stx30419_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx30647_)
       (let* ((_g3065030668_
               (lambda (_g3065130664_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3065130664_)))
              (_g3064930747_
               (lambda (_g3065130672_)
                 (if (gx#stx-pair? _g3065130672_)
                     (let ((_e3065430675_ (gx#syntax-e _g3065130672_)))
                       (let ((_hd3065530679_ (##car _e3065430675_))
                             (_tl3065630682_ (##cdr _e3065430675_)))
                         (if (gx#stx-pair? _tl3065630682_)
                             (let ((_e3065730685_
                                    (gx#syntax-e _tl3065630682_)))
                               (let ((_hd3065830689_ (##car _e3065730685_))
                                     (_tl3065930692_ (##cdr _e3065730685_)))
                                 (if (gx#stx-pair? _tl3065930692_)
                                     (let ((_e3066030695_
                                            (gx#syntax-e _tl3065930692_)))
                                       (let ((_hd3066130699_
                                              (##car _e3066030695_))
                                             (_tl3066230702_
                                              (##cdr _e3066030695_)))
                                         (if (gx#stx-null? _tl3066230702_)
                                             ((lambda (_L30705_ _L30707_)
                                                (if (gx#identifier? _L30705_)
                                                    (let* ((_pre30723_
                                                            (gx#stx-e
                                                             _L30705_))
                                                           (_imports30726_
                                                            (gx#core-expand-import-source
                                                             _L30707_))
                                                           (_rename-e30732_
                                                            (lambda (_name30729_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name30729_
                                                               _pre30723_)))
                                                           (_fold-e30742_
                                                            (letrec ((_fold-e30735_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in30738_ _r30740_)
                                (if (gx#module-import? _in30738_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in30738_
                                           (_rename-e30732_
                                            (gx#module-import-name _in30738_)))
                                          _r30740_)
                                    (if (gx#import-set? _in30738_)
                                        (foldl _fold-e30735_
                                               _r30740_
                                               (gx#import-set-imports
                                                _in30738_))
                                        (cons _in30738_ _r30740_))))))
                      _fold-e30735_)))
              (cons 'begin: (foldl _fold-e30742_ '() _imports30726_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3065030668_
                                                     _g3065130672_)))
                                              _hd3066130699_
                                              _hd3065830689_)
                                             (_g3065030668_ _g3065130672_))))
                                     (_g3065030668_ _g3065130672_))))
                             (_g3065030668_ _g3065130672_))))
                     (_g3065030668_ _g3065130672_)))))
         (_g3064930747_ _stx30647_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx30751_)
       (let* ((_g3075430778_
               (lambda (_g3075530774_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3075530774_)))
              (_g3075330900_
               (lambda (_g3075530782_)
                 (if (gx#stx-pair? _g3075530782_)
                     (let ((_e3075830785_ (gx#syntax-e _g3075530782_)))
                       (let ((_hd3075930789_ (##car _e3075830785_))
                             (_tl3076030792_ (##cdr _e3075830785_)))
                         (if (gx#stx-pair? _tl3076030792_)
                             (let ((_e3076130795_
                                    (gx#syntax-e _tl3076030792_)))
                               (let ((_hd3076230799_ (##car _e3076130795_))
                                     (_tl3076330802_ (##cdr _e3076130795_)))
                                 (if (gx#stx-pair/null? _tl3076330802_)
                                     (if (fx>= (gx#stx-length _tl3076330802_)
                                               '0)
                                         (let ((_g31815_
                                                (gx#syntax-split-splice
                                                 _tl3076330802_
                                                 '0)))
                                           (begin
                                             (let ((_g31816_
                                                    (values-count _g31815_)))
                                               (if (not (fx= _g31816_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31816_)))
                                             (let ((_target3076430805_
                                                    (values-ref _g31815_ 0))
                                                   (_tl3076630808_
                                                    (values-ref _g31815_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3076630808_)
                                                   (letrec ((_loop3076730811_
                                                             (lambda (_hd3076530815_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3077130818_)
                       (if (gx#stx-pair? _hd3076530815_)
                           (let ((_e3076830821_ (gx#syntax-e _hd3076530815_)))
                             (let ((_lp-hd3076930825_ (##car _e3076830821_))
                                   (_lp-tl3077030828_ (##cdr _e3076830821_)))
                               (_loop3076730811_
                                _lp-tl3077030828_
                                (cons _lp-hd3076930825_ _id3077130818_))))
                           (let ((_id3077230831_ (reverse _id3077130818_)))
                             ((lambda (_L30835_ _L30837_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3085430857_
                                                       _g3085530860_)
                                                (cons _g3085430857_
                                                      _g3085530860_))
                                              '()
                                              _L30835_)))
                                    (let* ((_keys30871_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3086230865_
                                                               _g3086330868_)
                                                        (cons _g3086230865_
                                                              _g3086330868_))
                                                      '()
                                                      _L30835_))))
                                           (_keytab30882_
                                            (let ((_ht30874_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3087630878_)
                                                   (hash-put!
                                                    _ht30874_
                                                    _g3087630878_
                                                    '#t))
                                                 _keys30871_)
                                                _ht30874_)))
                                           (_exports30885_
                                            (gx#core-expand-export-source
                                             _L30837_))
                                           (_fold-e30895_
                                            (letrec ((_fold-e30888_
                                                      (lambda (_out30891_
                                                               _r30893_)
                                                        (if (gx#module-export?
                                                             _out30891_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab30882_
                         (gx#module-export-name _out30891_))
                        _r30893_
                        (cons _out30891_ _r30893_))
                    (if (gx#export-set? _out30891_)
                        (foldl _fold-e30888_
                               _r30893_
                               (gx#export-set-exports _out30891_))
                        _r30893_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e30888_)))
                                      (cons 'begin:
                                            (foldl _fold-e30895_
                                                   '()
                                                   _exports30885_)))
                                    (_g3075430778_ _g3075530782_)))
                              _id3077230831_
                              _hd3076230799_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3076730811_
                                                      _target3076430805_
                                                      '()))
                                                   (_g3075430778_
                                                    _g3075530782_)))))
                                         (_g3075430778_ _g3075530782_))
                                     (_g3075430778_ _g3075530782_))))
                             (_g3075430778_ _g3075530782_))))
                     (_g3075430778_ _g3075530782_)))))
         (_g3075330900_ _stx30751_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out30905_ _rename30907_)
      (gx#make-module-export
       (gx#module-export-context _out30905_)
       (gx#module-export-key _out30905_)
       (gx#module-export-phi _out30905_)
       _rename30907_
       (gx#module-export-weak? _out30905_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx30909_)
       (let* ((_g3091230945_
               (lambda (_g3091330941_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3091330941_)))
              (_g3091131131_
               (lambda (_g3091330949_)
                 (if (gx#stx-pair? _g3091330949_)
                     (let ((_e3091730952_ (gx#syntax-e _g3091330949_)))
                       (let ((_hd3091830956_ (##car _e3091730952_))
                             (_tl3091930959_ (##cdr _e3091730952_)))
                         (if (gx#stx-pair? _tl3091930959_)
                             (let ((_e3092030962_
                                    (gx#syntax-e _tl3091930959_)))
                               (let ((_hd3092130966_ (##car _e3092030962_))
                                     (_tl3092230969_ (##cdr _e3092030962_)))
                                 (if (gx#stx-pair/null? _tl3092230969_)
                                     (if (fx>= (gx#stx-length _tl3092230969_)
                                               '0)
                                         (let ((_g31817_
                                                (gx#syntax-split-splice
                                                 _tl3092230969_
                                                 '0)))
                                           (begin
                                             (let ((_g31818_
                                                    (values-count _g31817_)))
                                               (if (not (fx= _g31818_ 2))
                                                   (error "Context expects 2 values"
                                                          _g31818_)))
                                             (let ((_target3092330972_
                                                    (values-ref _g31817_ 0))
                                                   (_tl3092530975_
                                                    (values-ref _g31817_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3092530975_)
                                                   (letrec ((_loop3092630978_
                                                             (lambda (_hd3092430982_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3093030985_
                              _id3093130987_)
                       (if (gx#stx-pair? _hd3092430982_)
                           (let ((_e3092730990_ (gx#syntax-e _hd3092430982_)))
                             (let ((_lp-hd3092830994_ (##car _e3092730990_))
                                   (_lp-tl3092930997_ (##cdr _e3092730990_)))
                               (if (gx#stx-pair? _lp-hd3092830994_)
                                   (let ((_e3093431000_
                                          (gx#syntax-e _lp-hd3092830994_)))
                                     (let ((_hd3093531004_
                                            (##car _e3093431000_))
                                           (_tl3093631007_
                                            (##cdr _e3093431000_)))
                                       (if (gx#stx-pair? _tl3093631007_)
                                           (let ((_e3093731010_
                                                  (gx#syntax-e
                                                   _tl3093631007_)))
                                             (let ((_hd3093831014_
                                                    (##car _e3093731010_))
                                                   (_tl3093931017_
                                                    (##cdr _e3093731010_)))
                                               (if (gx#stx-null?
                                                    _tl3093931017_)
                                                   (_loop3092630978_
                                                    _lp-tl3092930997_
                                                    (cons _hd3093831014_
                                                          _new-id3093030985_)
                                                    (cons _hd3093531004_
                                                          _id3093130987_))
                                                   (_g3091230945_
                                                    _g3091330949_))))
                                           (_g3091230945_ _g3091330949_))))
                                   (_g3091230945_ _g3091330949_))))
                           (let ((_new-id3093231020_
                                  (reverse _new-id3093030985_))
                                 (_id3093331023_ (reverse _id3093130987_)))
                             ((lambda (_L31026_ _L31028_ _L31029_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3104731050_
                                                           _g3104831053_)
                                                    (cons _g3104731050_
                                                          _g3104831053_))
                                                  '()
                                                  _L31028_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3105531058_
                                                           _g3105631061_)
                                                    (cons _g3105531058_
                                                          _g3105631061_))
                                                  '()
                                                  _L31026_)))
                                        '#f)
                                    (let* ((_keytab31064_ (make-hash-table))
                                           (_found31067_ (make-hash-table))
                                           (_g31819_
                                            (for-each
                                             (lambda (_id31070_ _new-id31072_)
                                               (hash-put!
                                                _keytab31064_
                                                (gx#core-identifier-key
                                                 _id31070_)
                                                (gx#core-identifier-key
                                                 _new-id31072_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3107331076_
                                                               _g3107431079_)
                                                        (cons _g3107331076_
                                                              _g3107431079_))
                                                      '()
                                                      _L31028_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3108131084_
                                                               _g3108231087_)
                                                        (cons _g3108131084_
                                                              _g3108231087_))
                                                      '()
                                                      _L31026_))))
                                           (_exports31092_
                                            (gx#core-expand-export-source
                                             _L31029_))
                                           (_fold-e31112_
                                            (letrec ((_fold-e31095_
                                                      (lambda (_out31098_
                                                               _r31100_)
                                                        (if (gx#module-export?
                                                             _out31098_)
                                                            (let* ((_name31102_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out31098_))
                           (_$e31105_ (hash-get _keytab31064_ _name31102_)))
                      (if _$e31105_
                          ((lambda (_rename31109_)
                             (begin
                               (hash-put! _found31067_ _name31102_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out31098_
                                      _rename31109_)
                                     _r31100_)))
                           _$e31105_)
                          (cons _out31098_ _r31100_)))
                    (if (gx#export-set? _out31098_)
                        (foldl _fold-e31095_
                               _r31100_
                               (gx#export-set-exports _out31098_))
                        (cons _out31098_ _r31100_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e31095_))
                                           (_new-exports31115_
                                            (foldl _fold-e31112_
                                                   '()
                                                   _exports31092_)))
                                      (begin
                                        (for-each
                                         (lambda (_id31120_)
                                           (if (hash-get
                                                _found31067_
                                                (gx#core-identifier-key
                                                 _id31120_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx30909_
                                                _id31120_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3112231125_
                                                           _g3112331128_)
                                                    (cons _g3112231125_
                                                          _g3112331128_))
                                                  '()
                                                  _L31028_)))
                                        (cons 'begin: _new-exports31115_)))
                                    (_g3091230945_ _g3091330949_)))
                              _new-id3093231020_
                              _id3093331023_
                              _hd3092130966_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3092630978_
                                                      _target3092330972_
                                                      '()
                                                      '()))
                                                   (_g3091230945_
                                                    _g3091330949_)))))
                                         (_g3091230945_ _g3091330949_))
                                     (_g3091230945_ _g3091330949_))))
                             (_g3091230945_ _g3091330949_))))
                     (_g3091230945_ _g3091330949_)))))
         (_g3091131131_ _stx30909_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx31137_)
       (let* ((_g3114031158_
               (lambda (_g3114131154_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3114131154_)))
              (_g3113931237_
               (lambda (_g3114131162_)
                 (if (gx#stx-pair? _g3114131162_)
                     (let ((_e3114431165_ (gx#syntax-e _g3114131162_)))
                       (let ((_hd3114531169_ (##car _e3114431165_))
                             (_tl3114631172_ (##cdr _e3114431165_)))
                         (if (gx#stx-pair? _tl3114631172_)
                             (let ((_e3114731175_
                                    (gx#syntax-e _tl3114631172_)))
                               (let ((_hd3114831179_ (##car _e3114731175_))
                                     (_tl3114931182_ (##cdr _e3114731175_)))
                                 (if (gx#stx-pair? _tl3114931182_)
                                     (let ((_e3115031185_
                                            (gx#syntax-e _tl3114931182_)))
                                       (let ((_hd3115131189_
                                              (##car _e3115031185_))
                                             (_tl3115231192_
                                              (##cdr _e3115031185_)))
                                         (if (gx#stx-null? _tl3115231192_)
                                             ((lambda (_L31195_ _L31197_)
                                                (if (gx#identifier? _L31195_)
                                                    (let* ((_pre31213_
                                                            (gx#stx-e
                                                             _L31195_))
                                                           (_exports31216_
                                                            (gx#core-expand-export-source
                                                             _L31197_))
                                                           (_rename-e31222_
                                                            (lambda (_name31219_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name31219_
                                                               _pre31213_)))
                                                           (_fold-e31232_
                                                            (letrec ((_fold-e31225_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out31228_ _r31230_)
                                (if (gx#module-export? _out31228_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out31228_
                                           (_rename-e31222_
                                            (gx#module-export-name
                                             _out31228_)))
                                          _r31230_)
                                    (if (gx#export-set? _out31228_)
                                        (foldl _fold-e31225_
                                               _r31230_
                                               (gx#export-set-exports
                                                _out31228_))
                                        (cons _out31228_ _r31230_))))))
                      _fold-e31225_)))
              (cons 'begin: (foldl _fold-e31232_ '() _exports31216_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3114031158_
                                                     _g3114131162_)))
                                              _hd3115131189_
                                              _hd3114831179_)
                                             (_g3114031158_ _g3114131162_))))
                                     (_g3114031158_ _g3114131162_))))
                             (_g3114031158_ _g3114131162_))))
                     (_g3114031158_ _g3114131162_)))))
         (_g3113931237_ _stx31137_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx31241_)
       (let* ((_g3124431264_
               (lambda (_g3124531260_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3124531260_)))
              (_g3124331499_
               (lambda (_g3124531268_)
                 (if (gx#stx-pair? _g3124531268_)
                     (let ((_e3124731271_ (gx#syntax-e _g3124531268_)))
                       (let ((_hd3124831275_ (##car _e3124731271_))
                             (_tl3124931278_ (##cdr _e3124731271_)))
                         (if (gx#stx-pair/null? _tl3124931278_)
                             (if (fx>= (gx#stx-length _tl3124931278_) '0)
                                 (let ((_g31820_
                                        (gx#syntax-split-splice
                                         _tl3124931278_
                                         '0)))
                                   (begin
                                     (let ((_g31821_ (values-count _g31820_)))
                                       (if (not (fx= _g31821_ 2))
                                           (error "Context expects 2 values"
                                                  _g31821_)))
                                     (let ((_target3125031281_
                                            (values-ref _g31820_ 0))
                                           (_tl3125231284_
                                            (values-ref _g31820_ 1)))
                                       (if (gx#stx-null? _tl3125231284_)
                                           (letrec ((_loop3125331287_
                                                     (lambda (_hd3125131291_
                                                              _id3125731294_)
                                                       (if (gx#stx-pair?
                                                            _hd3125131291_)
                                                           (let ((_e3125431297_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3125131291_)))
                     (let ((_lp-hd3125531301_ (##car _e3125431297_))
                           (_lp-tl3125631304_ (##cdr _e3125431297_)))
                       (_loop3125331287_
                        _lp-tl3125631304_
                        (cons _lp-hd3125531301_ _id3125731294_))))
                   (let ((_id3125831307_ (reverse _id3125731294_)))
                     ((lambda (_L31311_)
                        (let _lp31327_ ((_rest31330_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3149031493_
                                                           _g3149131496_)
                                                    (cons _g3149031493_
                                                          _g3149131496_))
                                                  '()
                                                  _L31311_)))
                                        (_ids31332_ '()))
                          (let* ((_g3133531347_
                                  (lambda (_g3133631343_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3133631343_)))
                                 (_g3133431358_
                                  (lambda (_g3133631351_)
                                    ((lambda () (cons 'begin: _ids31332_)))))
                                 (_g3133331487_
                                  (lambda (_g3133631362_)
                                    (if (gx#stx-pair? _g3133631362_)
                                        (let ((_e3133931365_
                                               (gx#syntax-e _g3133631362_)))
                                          (let ((_hd3134031369_
                                                 (##car _e3133931365_))
                                                (_tl3134131372_
                                                 (##cdr _e3133931365_)))
                                            ((lambda (_L31375_ _L31377_)
                                               (let ((_info31392_
                                                      (gx#syntax-local-value
                                                       _L31377_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info31392_)
                                                     (let* ((_g3139431411_
                                                             (slot-ref
                                                              _info31392_
                                                              'expander-identifiers))
                                                            (_E3139631417_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3139431411_)))
                    (_K3139731429_
                     (lambda (_setf31421_
                              _getf31423_
                              _type?31424_
                              _make-type31425_
                              _type::t31426_
                              _super31427_)
                       (_lp31327_
                        _L31375_
                        (cons _L31377_
                              (cons _type::t31426_
                                    (cons _make-type31425_
                                          (cons _type?31424_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids31332_
                                                              _setf31421_)
                                                       _getf31423_)))))))))
               (if (##pair? _g3139431411_)
                   (let ((_hd3139831433_ (##car _g3139431411_))
                         (_tl3139931436_ (##cdr _g3139431411_)))
                     (let ((_super31439_ _hd3139831433_))
                       (if (##pair? _tl3139931436_)
                           (let ((_hd3140031442_ (##car _tl3139931436_))
                                 (_tl3140131445_ (##cdr _tl3139931436_)))
                             (let ((_type::t31448_ _hd3140031442_))
                               (if (##pair? _tl3140131445_)
                                   (let ((_hd3140231451_
                                          (##car _tl3140131445_))
                                         (_tl3140331454_
                                          (##cdr _tl3140131445_)))
                                     (let ((_make-type31457_ _hd3140231451_))
                                       (if (##pair? _tl3140331454_)
                                           (let ((_hd3140431460_
                                                  (##car _tl3140331454_))
                                                 (_tl3140531463_
                                                  (##cdr _tl3140331454_)))
                                             (let ((_type?31466_
                                                    _hd3140431460_))
                                               (if (##pair? _tl3140531463_)
                                                   (let ((_hd3140631469_
                                                          (##car _tl3140531463_))
                                                         (_tl3140731472_
                                                          (##cdr _tl3140531463_)))
                                                     (let ((_getf31475_
                                                            _hd3140631469_))
                                                       (if (##pair? _tl3140731472_)
                                                           (let ((_hd3140831478_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3140731472_))
                         (_tl3140931481_ (##cdr _tl3140731472_)))
                     (let ((_setf31484_ _hd3140831478_))
                       (if (##null? _tl3140931481_)
                           (_K3139731429_
                            _setf31484_
                            _getf31475_
                            _type?31466_
                            _make-type31457_
                            _type::t31448_
                            _super31439_)
                           (_E3139631417_))))
                   (_E3139631417_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3139631417_))))
                                           (_E3139631417_))))
                                   (_E3139631417_))))
                           (_E3139631417_))))
                   (_E3139631417_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx31241_
                                                      _L31377_))))
                                             _tl3134131372_
                                             _hd3134031369_)))
                                        (_g3133431358_ _g3133631362_)))))
                            (_g3133331487_ _rest31330_))))
                      _id3125831307_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3125331287_
                                              _target3125031281_
                                              '()))
                                           (_g3124431264_ _g3124531268_)))))
                                 (_g3124431264_ _g3124531268_))
                             (_g3124431264_ _g3124531268_))))
                     (_g3124431264_ _g3124531268_)))))
         (_g3124331499_ _stx31241_))))))
