(declare (block) (standard-bindings) (extended-bindings))
(begin
  (define |gerbil/core$<module-sugar>[:0:]#require|
    (lambda (_$stx32248_)
      (let* ((_g3225332272_
              (lambda (_g3225432268_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3225432268_)))
             (_g3225232318_
              (lambda (_g3225432276_)
                (if (gx#stx-pair? _g3225432276_)
                    (let ((_e3226132279_ (gx#syntax-e _g3225432276_)))
                      (let ((_hd3226232283_ (##car _e3226132279_))
                            (_tl3226332286_ (##cdr _e3226132279_)))
                        (if (gx#stx-pair? _tl3226332286_)
                            (let ((_e3226432289_ (gx#syntax-e _tl3226332286_)))
                              (let ((_hd3226532293_ (##car _e3226432289_))
                                    (_tl3226632296_ (##cdr _e3226432289_)))
                                ((lambda (_L32299_ _L32301_ _L32302_)
                                   (cons (gx#datum->syntax '#f 'cond-expand)
                                         (cons (cons _L32301_
                                                     (cons (cons _L32302_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _L32299_)
                   '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                               (cons (cons (gx#datum->syntax
                                                            '#f
                                                            'else)
                                                           (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                '#f
                                'syntax-error)
                               (cons '"Missing required feature"
                                     (cons _L32301_ '())))
                         '()))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     '()))))
                                 _tl3226632296_
                                 _hd3226532293_
                                 _hd3226232283_)))
                            (_g3225332272_ _g3225432276_))))
                    (_g3225332272_ _g3225432276_))))
             (_g3225132339_
              (lambda (_g3225432322_)
                (if (gx#stx-pair? _g3225432322_)
                    (let ((_e3225532325_ (gx#syntax-e _g3225432322_)))
                      (let ((_hd3225632329_ (##car _e3225532325_))
                            (_tl3225732332_ (##cdr _e3225532325_)))
                        (if (gx#stx-null? _tl3225732332_)
                            ((lambda ()
                               (cons (gx#datum->syntax '#f 'begin) '())))
                            (_g3225232318_ _g3225432322_))))
                    (_g3225232318_ _g3225432322_)))))
        (_g3225132339_ _$stx32248_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import|
    (lambda (_$stx32343_)
      (let* ((_g3234832388_
              (lambda (_g3234932384_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3234932384_)))
             (_g3234732489_
              (lambda (_g3234932392_)
                (if (gx#stx-pair? _g3234932392_)
                    (let ((_e3236532395_ (gx#syntax-e _g3234932392_)))
                      (let ((_hd3236632399_ (##car _e3236532395_))
                            (_tl3236732402_ (##cdr _e3236532395_)))
                        (if (gx#stx-pair? _tl3236732402_)
                            (let ((_e3236832405_ (gx#syntax-e _tl3236732402_)))
                              (let ((_hd3236932409_ (##car _e3236832405_))
                                    (_tl3237032412_ (##cdr _e3236832405_)))
                                (if (gx#stx-pair? _hd3236932409_)
                                    (let ((_e3237132415_
                                           (gx#syntax-e _hd3236932409_)))
                                      (let ((_hd3237232419_
                                             (##car _e3237132415_))
                                            (_tl3237332422_
                                             (##cdr _e3237132415_)))
                                        (if (gx#stx-pair/null? _tl3237032412_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3237032412_)
                                                      '0)
                                                (let ((_g34929_
                                                       (gx#syntax-split-splice
                                                        _tl3237032412_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34930_
                                                           (values-count
                                                            _g34929_)))
                                                      (if (not (fx= _g34930_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34930_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3237432425_
                                                           (values-ref
                                                            _g34929_
                                                            0))
                                                          (_tl3237632428_
                                                           (values-ref
                                                            _g34929_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3237632428_)
                                                          (letrec ((_loop3237732431_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3237532435_ _body3238132438_)
                              (if (gx#stx-pair? _hd3237532435_)
                                  (let ((_e3237832441_
                                         (gx#syntax-e _hd3237532435_)))
                                    (let ((_lp-hd3237932445_
                                           (##car _e3237832441_))
                                          (_lp-tl3238032448_
                                           (##cdr _e3237832441_)))
                                      (_loop3237732431_
                                       _lp-tl3238032448_
                                       (cons _lp-hd3237932445_
                                             _body3238132438_))))
                                  (let ((_body3238232451_
                                         (reverse _body3238132438_)))
                                    ((lambda (_L32455_
                                              _L32457_
                                              _L32458_
                                              _L32459_)
                                       (if (gx#identifier? _L32458_)
                                           (cons _L32459_
                                                 (cons _L32458_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32457_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3248032483_ _g3248132486_)
                                            (cons _g3248032483_ _g3248132486_))
                                          '()
                                          _L32455_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3234832388_ _g3234932392_)))
                                     _body3238232451_
                                     _tl3237332422_
                                     _hd3237232419_
                                     _hd3236632399_))))))
                    (_loop3237732431_ _target3237432425_ '()))
                  (_g3234832388_ _g3234932392_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3234832388_ _g3234932392_))
                                            (_g3234832388_ _g3234932392_))))
                                    (_g3234832388_ _g3234932392_))))
                            (_g3234832388_ _g3234932392_))))
                    (_g3234832388_ _g3234932392_))))
             (_g3234632543_
              (lambda (_g3234932493_)
                (if (gx#stx-pair? _g3234932493_)
                    (let ((_e3235232496_ (gx#syntax-e _g3234932493_)))
                      (let ((_hd3235332500_ (##car _e3235232496_))
                            (_tl3235432503_ (##cdr _e3235232496_)))
                        (if (gx#stx-pair? _tl3235432503_)
                            (let ((_e3235532506_ (gx#syntax-e _tl3235432503_)))
                              (let ((_hd3235632510_ (##car _e3235532506_))
                                    (_tl3235732513_ (##cdr _e3235532506_)))
                                (if (gx#stx-pair? _tl3235732513_)
                                    (let ((_e3235832516_
                                           (gx#syntax-e _tl3235732513_)))
                                      (let ((_hd3235932520_
                                             (##car _e3235832516_))
                                            (_tl3236032523_
                                             (##cdr _e3235832516_)))
                                        (if (gx#stx-null? _tl3236032523_)
                                            ((lambda (_L32526_ _L32528_)
                                               (if (gx#identifier? _L32528_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32528_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-expander)
                                   (cons _L32526_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3234732489_
                                                    _g3234932493_)))
                                             _hd3235932520_
                                             _hd3235632510_)
                                            (_g3234732489_ _g3234932493_))))
                                    (_g3234732489_ _g3234932493_))))
                            (_g3234732489_ _g3234932493_))))
                    (_g3234732489_ _g3234932493_)))))
        (_g3234632543_ _$stx32343_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-export|
    (lambda (_$stx32548_)
      (let* ((_g3255332593_
              (lambda (_g3255432589_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3255432589_)))
             (_g3255232694_
              (lambda (_g3255432597_)
                (if (gx#stx-pair? _g3255432597_)
                    (let ((_e3257032600_ (gx#syntax-e _g3255432597_)))
                      (let ((_hd3257132604_ (##car _e3257032600_))
                            (_tl3257232607_ (##cdr _e3257032600_)))
                        (if (gx#stx-pair? _tl3257232607_)
                            (let ((_e3257332610_ (gx#syntax-e _tl3257232607_)))
                              (let ((_hd3257432614_ (##car _e3257332610_))
                                    (_tl3257532617_ (##cdr _e3257332610_)))
                                (if (gx#stx-pair? _hd3257432614_)
                                    (let ((_e3257632620_
                                           (gx#syntax-e _hd3257432614_)))
                                      (let ((_hd3257732624_
                                             (##car _e3257632620_))
                                            (_tl3257832627_
                                             (##cdr _e3257632620_)))
                                        (if (gx#stx-pair/null? _tl3257532617_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3257532617_)
                                                      '0)
                                                (let ((_g34931_
                                                       (gx#syntax-split-splice
                                                        _tl3257532617_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34932_
                                                           (values-count
                                                            _g34931_)))
                                                      (if (not (fx= _g34932_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34932_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3257932630_
                                                           (values-ref
                                                            _g34931_
                                                            0))
                                                          (_tl3258132633_
                                                           (values-ref
                                                            _g34931_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3258132633_)
                                                          (letrec ((_loop3258232636_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3258032640_ _body3258632643_)
                              (if (gx#stx-pair? _hd3258032640_)
                                  (let ((_e3258332646_
                                         (gx#syntax-e _hd3258032640_)))
                                    (let ((_lp-hd3258432650_
                                           (##car _e3258332646_))
                                          (_lp-tl3258532653_
                                           (##cdr _e3258332646_)))
                                      (_loop3258232636_
                                       _lp-tl3258532653_
                                       (cons _lp-hd3258432650_
                                             _body3258632643_))))
                                  (let ((_body3258732656_
                                         (reverse _body3258632643_)))
                                    ((lambda (_L32660_
                                              _L32662_
                                              _L32663_
                                              _L32664_)
                                       (if (gx#identifier? _L32663_)
                                           (cons _L32664_
                                                 (cons _L32663_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32662_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3268532688_ _g3268632691_)
                                            (cons _g3268532688_ _g3268632691_))
                                          '()
                                          _L32660_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3255332593_ _g3255432597_)))
                                     _body3258732656_
                                     _tl3257832627_
                                     _hd3257732624_
                                     _hd3257132604_))))))
                    (_loop3258232636_ _target3257932630_ '()))
                  (_g3255332593_ _g3255432597_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3255332593_ _g3255432597_))
                                            (_g3255332593_ _g3255432597_))))
                                    (_g3255332593_ _g3255432597_))))
                            (_g3255332593_ _g3255432597_))))
                    (_g3255332593_ _g3255432597_))))
             (_g3255132748_
              (lambda (_g3255432698_)
                (if (gx#stx-pair? _g3255432698_)
                    (let ((_e3255732701_ (gx#syntax-e _g3255432698_)))
                      (let ((_hd3255832705_ (##car _e3255732701_))
                            (_tl3255932708_ (##cdr _e3255732701_)))
                        (if (gx#stx-pair? _tl3255932708_)
                            (let ((_e3256032711_ (gx#syntax-e _tl3255932708_)))
                              (let ((_hd3256132715_ (##car _e3256032711_))
                                    (_tl3256232718_ (##cdr _e3256032711_)))
                                (if (gx#stx-pair? _tl3256232718_)
                                    (let ((_e3256332721_
                                           (gx#syntax-e _tl3256232718_)))
                                      (let ((_hd3256432725_
                                             (##car _e3256332721_))
                                            (_tl3256532728_
                                             (##cdr _e3256332721_)))
                                        (if (gx#stx-null? _tl3256532728_)
                                            ((lambda (_L32731_ _L32733_)
                                               (if (gx#identifier? _L32733_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32733_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-export-expander)
                                   (cons _L32731_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3255232694_
                                                    _g3255432698_)))
                                             _hd3256432725_
                                             _hd3256132715_)
                                            (_g3255232694_ _g3255432698_))))
                                    (_g3255232694_ _g3255432698_))))
                            (_g3255232694_ _g3255432698_))))
                    (_g3255232694_ _g3255432698_)))))
        (_g3255132748_ _$stx32548_))))
  (define |gerbil/core$<module-sugar>[:0:]#defsyntax-for-import-export|
    (lambda (_$stx32753_)
      (let* ((_g3275832798_
              (lambda (_g3275932794_)
                (gx#raise-syntax-error '#f '"Bad syntax" _g3275932794_)))
             (_g3275732899_
              (lambda (_g3275932802_)
                (if (gx#stx-pair? _g3275932802_)
                    (let ((_e3277532805_ (gx#syntax-e _g3275932802_)))
                      (let ((_hd3277632809_ (##car _e3277532805_))
                            (_tl3277732812_ (##cdr _e3277532805_)))
                        (if (gx#stx-pair? _tl3277732812_)
                            (let ((_e3277832815_ (gx#syntax-e _tl3277732812_)))
                              (let ((_hd3277932819_ (##car _e3277832815_))
                                    (_tl3278032822_ (##cdr _e3277832815_)))
                                (if (gx#stx-pair? _hd3277932819_)
                                    (let ((_e3278132825_
                                           (gx#syntax-e _hd3277932819_)))
                                      (let ((_hd3278232829_
                                             (##car _e3278132825_))
                                            (_tl3278332832_
                                             (##cdr _e3278132825_)))
                                        (if (gx#stx-pair/null? _tl3278032822_)
                                            (if (fx>= (gx#stx-length
                                                       _tl3278032822_)
                                                      '0)
                                                (let ((_g34933_
                                                       (gx#syntax-split-splice
                                                        _tl3278032822_
                                                        '0)))
                                                  (begin
                                                    (let ((_g34934_
                                                           (values-count
                                                            _g34933_)))
                                                      (if (not (fx= _g34934_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            2))
                  (error "Context expects 2 values" _g34934_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (let ((_target3278432835_
                                                           (values-ref
                                                            _g34933_
                                                            0))
                                                          (_tl3278632838_
                                                           (values-ref
                                                            _g34933_
                                                            1)))
                                                      (if (gx#stx-null?
                                                           _tl3278632838_)
                                                          (letrec ((_loop3278732841_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (lambda (_hd3278532845_ _body3279132848_)
                              (if (gx#stx-pair? _hd3278532845_)
                                  (let ((_e3278832851_
                                         (gx#syntax-e _hd3278532845_)))
                                    (let ((_lp-hd3278932855_
                                           (##car _e3278832851_))
                                          (_lp-tl3279032858_
                                           (##cdr _e3278832851_)))
                                      (_loop3278732841_
                                       _lp-tl3279032858_
                                       (cons _lp-hd3278932855_
                                             _body3279132848_))))
                                  (let ((_body3279232861_
                                         (reverse _body3279132848_)))
                                    ((lambda (_L32865_
                                              _L32867_
                                              _L32868_
                                              _L32869_)
                                       (if (gx#identifier? _L32868_)
                                           (cons _L32869_
                                                 (cons _L32868_
                                                       (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            '#f
                            'lambda)
                           (cons _L32867_
                                 (begin
                                   '#!void
                                   (foldr (lambda (_g3289032893_ _g3289132896_)
                                            (cons _g3289032893_ _g3289132896_))
                                          '()
                                          _L32865_))))
                     '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                           (_g3275832798_ _g3275932802_)))
                                     _body3279232861_
                                     _tl3278332832_
                                     _hd3278232829_
                                     _hd3277632809_))))))
                    (_loop3278732841_ _target3278432835_ '()))
                  (_g3275832798_ _g3275932802_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                (_g3275832798_ _g3275932802_))
                                            (_g3275832798_ _g3275932802_))))
                                    (_g3275832798_ _g3275932802_))))
                            (_g3275832798_ _g3275932802_))))
                    (_g3275832798_ _g3275932802_))))
             (_g3275632953_
              (lambda (_g3275932903_)
                (if (gx#stx-pair? _g3275932903_)
                    (let ((_e3276232906_ (gx#syntax-e _g3275932903_)))
                      (let ((_hd3276332910_ (##car _e3276232906_))
                            (_tl3276432913_ (##cdr _e3276232906_)))
                        (if (gx#stx-pair? _tl3276432913_)
                            (let ((_e3276532916_ (gx#syntax-e _tl3276432913_)))
                              (let ((_hd3276632920_ (##car _e3276532916_))
                                    (_tl3276732923_ (##cdr _e3276532916_)))
                                (if (gx#stx-pair? _tl3276732923_)
                                    (let ((_e3276832926_
                                           (gx#syntax-e _tl3276732923_)))
                                      (let ((_hd3276932930_
                                             (##car _e3276832926_))
                                            (_tl3277032933_
                                             (##cdr _e3276832926_)))
                                        (if (gx#stx-null? _tl3277032933_)
                                            ((lambda (_L32936_ _L32938_)
                                               (if (gx#identifier? _L32938_)
                                                   (cons (gx#datum->syntax
                                                          '#f
                                                          'defsyntax)
                                                         (cons _L32938_
                                                               (cons (cons (gx#datum->syntax
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                                    '#f
                                    'make-import-export-expander)
                                   (cons _L32936_ '()))
                             '())))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_g3275732899_
                                                    _g3275932903_)))
                                             _hd3276932930_
                                             _hd3276632920_)
                                            (_g3275732899_ _g3275932903_))))
                                    (_g3275732899_ _g3275932903_))))
                            (_g3275732899_ _g3275932903_))))
                    (_g3275732899_ _g3275932903_)))))
        (_g3275632953_ _$stx32753_))))
  (define |gerbil/core$<module-sugar>[:0:]#for-syntax|
    (gx#make-import-export-expander
     (lambda (_stx32958_)
       (let* ((_g3296132981_
               (lambda (_g3296232977_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3296232977_)))
              (_g3296033052_
               (lambda (_g3296232985_)
                 (if (gx#stx-pair? _g3296232985_)
                     (let ((_e3296432988_ (gx#syntax-e _g3296232985_)))
                       (let ((_hd3296532992_ (##car _e3296432988_))
                             (_tl3296632995_ (##cdr _e3296432988_)))
                         (if (gx#stx-pair/null? _tl3296632995_)
                             (if (fx>= (gx#stx-length _tl3296632995_) '0)
                                 (let ((_g34935_
                                        (gx#syntax-split-splice
                                         _tl3296632995_
                                         '0)))
                                   (begin
                                     (let ((_g34936_ (values-count _g34935_)))
                                       (if (not (fx= _g34936_ 2))
                                           (error "Context expects 2 values"
                                                  _g34936_)))
                                     (let ((_target3296732998_
                                            (values-ref _g34935_ 0))
                                           (_tl3296933001_
                                            (values-ref _g34935_ 1)))
                                       (if (gx#stx-null? _tl3296933001_)
                                           (letrec ((_loop3297033004_
                                                     (lambda (_hd3296833008_
                                                              _body3297433011_)
                                                       (if (gx#stx-pair?
                                                            _hd3296833008_)
                                                           (let ((_e3297133014_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3296833008_)))
                     (let ((_lp-hd3297233018_ (##car _e3297133014_))
                           (_lp-tl3297333021_ (##cdr _e3297133014_)))
                       (_loop3297033004_
                        _lp-tl3297333021_
                        (cons _lp-hd3297233018_ _body3297433011_))))
                   (let ((_body3297533024_ (reverse _body3297433011_)))
                     ((lambda (_L33028_)
                        (cons 'phi:
                              (cons '1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3304333046_
                                                      _g3304433049_)
                                               (cons _g3304333046_
                                                     _g3304433049_))
                                             '()
                                             _L33028_)))))
                      _body3297533024_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3297033004_
                                              _target3296732998_
                                              '()))
                                           (_g3296132981_ _g3296232985_)))))
                                 (_g3296132981_ _g3296232985_))
                             (_g3296132981_ _g3296232985_))))
                     (_g3296132981_ _g3296232985_)))))
         (_g3296033052_ _stx32958_)))))
  (define |gerbil/core$<module-sugar>[:0:]#for-template|
    (gx#make-import-export-expander
     (lambda (_stx33057_)
       (let* ((_g3306033080_
               (lambda (_g3306133076_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3306133076_)))
              (_g3305933151_
               (lambda (_g3306133084_)
                 (if (gx#stx-pair? _g3306133084_)
                     (let ((_e3306333087_ (gx#syntax-e _g3306133084_)))
                       (let ((_hd3306433091_ (##car _e3306333087_))
                             (_tl3306533094_ (##cdr _e3306333087_)))
                         (if (gx#stx-pair/null? _tl3306533094_)
                             (if (fx>= (gx#stx-length _tl3306533094_) '0)
                                 (let ((_g34937_
                                        (gx#syntax-split-splice
                                         _tl3306533094_
                                         '0)))
                                   (begin
                                     (let ((_g34938_ (values-count _g34937_)))
                                       (if (not (fx= _g34938_ 2))
                                           (error "Context expects 2 values"
                                                  _g34938_)))
                                     (let ((_target3306633097_
                                            (values-ref _g34937_ 0))
                                           (_tl3306833100_
                                            (values-ref _g34937_ 1)))
                                       (if (gx#stx-null? _tl3306833100_)
                                           (letrec ((_loop3306933103_
                                                     (lambda (_hd3306733107_
                                                              _body3307333110_)
                                                       (if (gx#stx-pair?
                                                            _hd3306733107_)
                                                           (let ((_e3307033113_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3306733107_)))
                     (let ((_lp-hd3307133117_ (##car _e3307033113_))
                           (_lp-tl3307233120_ (##cdr _e3307033113_)))
                       (_loop3306933103_
                        _lp-tl3307233120_
                        (cons _lp-hd3307133117_ _body3307333110_))))
                   (let ((_body3307433123_ (reverse _body3307333110_)))
                     ((lambda (_L33127_)
                        (cons 'phi:
                              (cons '-1
                                    (begin
                                      '#!void
                                      (foldr (lambda (_g3314233145_
                                                      _g3314333148_)
                                               (cons _g3314233145_
                                                     _g3314333148_))
                                             '()
                                             _L33127_)))))
                      _body3307433123_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3306933103_
                                              _target3306633097_
                                              '()))
                                           (_g3306033080_ _g3306133084_)))))
                                 (_g3306033080_ _g3306133084_))
                             (_g3306033080_ _g3306133084_))))
                     (_g3306033080_ _g3306133084_)))))
         (_g3305933151_ _stx33057_)))))
  (define |gerbil/core$<module-sugar>[:0:]#only-in|
    (gx#make-import-expander
     (lambda (_stx33156_)
       (let* ((_g3315933183_
               (lambda (_g3316033179_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3316033179_)))
              (_g3315833305_
               (lambda (_g3316033187_)
                 (if (gx#stx-pair? _g3316033187_)
                     (let ((_e3316333190_ (gx#syntax-e _g3316033187_)))
                       (let ((_hd3316433194_ (##car _e3316333190_))
                             (_tl3316533197_ (##cdr _e3316333190_)))
                         (if (gx#stx-pair? _tl3316533197_)
                             (let ((_e3316633200_
                                    (gx#syntax-e _tl3316533197_)))
                               (let ((_hd3316733204_ (##car _e3316633200_))
                                     (_tl3316833207_ (##cdr _e3316633200_)))
                                 (if (gx#stx-pair/null? _tl3316833207_)
                                     (if (fx>= (gx#stx-length _tl3316833207_)
                                               '0)
                                         (let ((_g34939_
                                                (gx#syntax-split-splice
                                                 _tl3316833207_
                                                 '0)))
                                           (begin
                                             (let ((_g34940_
                                                    (values-count _g34939_)))
                                               (if (not (fx= _g34940_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34940_)))
                                             (let ((_target3316933210_
                                                    (values-ref _g34939_ 0))
                                                   (_tl3317133213_
                                                    (values-ref _g34939_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3317133213_)
                                                   (letrec ((_loop3317233216_
                                                             (lambda (_hd3317033220_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3317633223_)
                       (if (gx#stx-pair? _hd3317033220_)
                           (let ((_e3317333226_ (gx#syntax-e _hd3317033220_)))
                             (let ((_lp-hd3317433230_ (##car _e3317333226_))
                                   (_lp-tl3317533233_ (##cdr _e3317333226_)))
                               (_loop3317233216_
                                _lp-tl3317533233_
                                (cons _lp-hd3317433230_ _id3317633223_))))
                           (let ((_id3317733236_ (reverse _id3317633223_)))
                             ((lambda (_L33240_ _L33242_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3325933262_
                                                       _g3326033265_)
                                                (cons _g3325933262_
                                                      _g3326033265_))
                                              '()
                                              _L33240_)))
                                    (let* ((_keys33276_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3326733270_
                                                               _g3326833273_)
                                                        (cons _g3326733270_
                                                              _g3326833273_))
                                                      '()
                                                      _L33240_))))
                                           (_keytab33287_
                                            (let ((_ht33279_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3328133283_)
                                                   (hash-put!
                                                    _ht33279_
                                                    _g3328133283_
                                                    '#t))
                                                 _keys33276_)
                                                _ht33279_)))
                                           (_imports33290_
                                            (gx#core-expand-import-source
                                             _L33242_))
                                           (_fold-e33300_
                                            (letrec ((_fold-e33293_
                                                      (lambda (_in33296_
                                                               _r33298_)
                                                        (if (gx#module-import?
                                                             _in33296_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33287_
                         (gx#module-import-name _in33296_))
                        (cons _in33296_ _r33298_)
                        _r33298_)
                    (if (gx#import-set? _in33296_)
                        (foldl _fold-e33293_
                               _r33298_
                               (gx#import-set-imports _in33296_))
                        _r33298_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33293_)))
                                      (cons 'begin:
                                            (foldl _fold-e33300_
                                                   '()
                                                   _imports33290_)))
                                    (_g3315933183_ _g3316033187_)))
                              _id3317733236_
                              _hd3316733204_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3317233216_
                                                      _target3316933210_
                                                      '()))
                                                   (_g3315933183_
                                                    _g3316033187_)))))
                                         (_g3315933183_ _g3316033187_))
                                     (_g3315933183_ _g3316033187_))))
                             (_g3315933183_ _g3316033187_))))
                     (_g3315933183_ _g3316033187_)))))
         (_g3315833305_ _stx33156_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-in|
    (gx#make-import-expander
     (lambda (_stx33310_)
       (let* ((_g3331333337_
               (lambda (_g3331433333_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3331433333_)))
              (_g3331233459_
               (lambda (_g3331433341_)
                 (if (gx#stx-pair? _g3331433341_)
                     (let ((_e3331733344_ (gx#syntax-e _g3331433341_)))
                       (let ((_hd3331833348_ (##car _e3331733344_))
                             (_tl3331933351_ (##cdr _e3331733344_)))
                         (if (gx#stx-pair? _tl3331933351_)
                             (let ((_e3332033354_
                                    (gx#syntax-e _tl3331933351_)))
                               (let ((_hd3332133358_ (##car _e3332033354_))
                                     (_tl3332233361_ (##cdr _e3332033354_)))
                                 (if (gx#stx-pair/null? _tl3332233361_)
                                     (if (fx>= (gx#stx-length _tl3332233361_)
                                               '0)
                                         (let ((_g34941_
                                                (gx#syntax-split-splice
                                                 _tl3332233361_
                                                 '0)))
                                           (begin
                                             (let ((_g34942_
                                                    (values-count _g34941_)))
                                               (if (not (fx= _g34942_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34942_)))
                                             (let ((_target3332333364_
                                                    (values-ref _g34941_ 0))
                                                   (_tl3332533367_
                                                    (values-ref _g34941_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3332533367_)
                                                   (letrec ((_loop3332633370_
                                                             (lambda (_hd3332433374_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3333033377_)
                       (if (gx#stx-pair? _hd3332433374_)
                           (let ((_e3332733380_ (gx#syntax-e _hd3332433374_)))
                             (let ((_lp-hd3332833384_ (##car _e3332733380_))
                                   (_lp-tl3332933387_ (##cdr _e3332733380_)))
                               (_loop3332633370_
                                _lp-tl3332933387_
                                (cons _lp-hd3332833384_ _id3333033377_))))
                           (let ((_id3333133390_ (reverse _id3333033377_)))
                             ((lambda (_L33394_ _L33396_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3341333416_
                                                       _g3341433419_)
                                                (cons _g3341333416_
                                                      _g3341433419_))
                                              '()
                                              _L33394_)))
                                    (let* ((_keys33430_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3342133424_
                                                               _g3342233427_)
                                                        (cons _g3342133424_
                                                              _g3342233427_))
                                                      '()
                                                      _L33394_))))
                                           (_keytab33441_
                                            (let ((_ht33433_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3343533437_)
                                                   (hash-put!
                                                    _ht33433_
                                                    _g3343533437_
                                                    '#t))
                                                 _keys33430_)
                                                _ht33433_)))
                                           (_imports33444_
                                            (gx#core-expand-import-source
                                             _L33396_))
                                           (_fold-e33454_
                                            (letrec ((_fold-e33447_
                                                      (lambda (_in33450_
                                                               _r33452_)
                                                        (if (gx#module-import?
                                                             _in33450_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33441_
                         (gx#module-import-name _in33450_))
                        _r33452_
                        (cons _in33450_ _r33452_))
                    (if (gx#import-set? _in33450_)
                        (foldl _fold-e33447_
                               _r33452_
                               (gx#import-set-imports _in33450_))
                        (cons _in33450_ _r33452_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33447_)))
                                      (cons 'begin:
                                            (foldl _fold-e33454_
                                                   '()
                                                   _imports33444_)))
                                    (_g3331333337_ _g3331433341_)))
                              _id3333133390_
                              _hd3332133358_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3332633370_
                                                      _target3332333364_
                                                      '()))
                                                   (_g3331333337_
                                                    _g3331433341_)))))
                                         (_g3331333337_ _g3331433341_))
                                     (_g3331333337_ _g3331433341_))))
                             (_g3331333337_ _g3331433341_))))
                     (_g3331333337_ _g3331433341_)))))
         (_g3331233459_ _stx33310_)))))
  (define |gerbil/core$<module-sugar>[1]#module-import-rename|
    (lambda (_in33511_ _rename33513_)
      (gx#make-module-import
       (gx#module-import-source _in33511_)
       _rename33513_
       (gx#module-import-phi _in33511_)
       (gx#module-import-weak? _in33511_))))
  (define |gerbil/core$<module-sugar>[1]#prefix-identifier-key|
    (lambda (_name33464_ _pre33466_)
      (let* ((_name3346733475_ _name33464_)
             (_E3347033481_
              (lambda () (error '"No clause matching" _name3346733475_)))
             (_else3346933487_
              (lambda () (make-symbol _pre33466_ _name33464_)))
             (_K3347133495_
              (lambda (_mark33491_ _id33493_)
                (cons (make-symbol _pre33466_ _id33493_) _mark33491_))))
        (if (##pair? _name3346733475_)
            (let ((_hd3347233499_ (##car _name3346733475_))
                  (_tl3347333502_ (##cdr _name3346733475_)))
              (let* ((_id33505_ _hd3347233499_) (_mark33508_ _tl3347333502_))
                (_K3347133495_ _mark33508_ _id33505_)))
            (_else3346933487_)))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-in|
    (gx#make-import-expander
     (lambda (_stx33515_)
       (let* ((_g3351833551_
               (lambda (_g3351933547_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3351933547_)))
              (_g3351733737_
               (lambda (_g3351933555_)
                 (if (gx#stx-pair? _g3351933555_)
                     (let ((_e3352333558_ (gx#syntax-e _g3351933555_)))
                       (let ((_hd3352433562_ (##car _e3352333558_))
                             (_tl3352533565_ (##cdr _e3352333558_)))
                         (if (gx#stx-pair? _tl3352533565_)
                             (let ((_e3352633568_
                                    (gx#syntax-e _tl3352533565_)))
                               (let ((_hd3352733572_ (##car _e3352633568_))
                                     (_tl3352833575_ (##cdr _e3352633568_)))
                                 (if (gx#stx-pair/null? _tl3352833575_)
                                     (if (fx>= (gx#stx-length _tl3352833575_)
                                               '0)
                                         (let ((_g34943_
                                                (gx#syntax-split-splice
                                                 _tl3352833575_
                                                 '0)))
                                           (begin
                                             (let ((_g34944_
                                                    (values-count _g34943_)))
                                               (if (not (fx= _g34944_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34944_)))
                                             (let ((_target3352933578_
                                                    (values-ref _g34943_ 0))
                                                   (_tl3353133581_
                                                    (values-ref _g34943_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3353133581_)
                                                   (letrec ((_loop3353233584_
                                                             (lambda (_hd3353033588_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3353633591_
                              _id3353733593_)
                       (if (gx#stx-pair? _hd3353033588_)
                           (let ((_e3353333596_ (gx#syntax-e _hd3353033588_)))
                             (let ((_lp-hd3353433600_ (##car _e3353333596_))
                                   (_lp-tl3353533603_ (##cdr _e3353333596_)))
                               (if (gx#stx-pair? _lp-hd3353433600_)
                                   (let ((_e3354033606_
                                          (gx#syntax-e _lp-hd3353433600_)))
                                     (let ((_hd3354133610_
                                            (##car _e3354033606_))
                                           (_tl3354233613_
                                            (##cdr _e3354033606_)))
                                       (if (gx#stx-pair? _tl3354233613_)
                                           (let ((_e3354333616_
                                                  (gx#syntax-e
                                                   _tl3354233613_)))
                                             (let ((_hd3354433620_
                                                    (##car _e3354333616_))
                                                   (_tl3354533623_
                                                    (##cdr _e3354333616_)))
                                               (if (gx#stx-null?
                                                    _tl3354533623_)
                                                   (_loop3353233584_
                                                    _lp-tl3353533603_
                                                    (cons _hd3354433620_
                                                          _new-id3353633591_)
                                                    (cons _hd3354133610_
                                                          _id3353733593_))
                                                   (_g3351833551_
                                                    _g3351933555_))))
                                           (_g3351833551_ _g3351933555_))))
                                   (_g3351833551_ _g3351933555_))))
                           (let ((_new-id3353833626_
                                  (reverse _new-id3353633591_))
                                 (_id3353933629_ (reverse _id3353733593_)))
                             ((lambda (_L33632_ _L33634_ _L33635_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3365333656_
                                                           _g3365433659_)
                                                    (cons _g3365333656_
                                                          _g3365433659_))
                                                  '()
                                                  _L33634_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3366133664_
                                                           _g3366233667_)
                                                    (cons _g3366133664_
                                                          _g3366233667_))
                                                  '()
                                                  _L33632_)))
                                        '#f)
                                    (let* ((_keytab33670_ (make-hash-table))
                                           (_found33673_ (make-hash-table))
                                           (_g34945_
                                            (for-each
                                             (lambda (_id33676_ _new-id33678_)
                                               (hash-put!
                                                _keytab33670_
                                                (gx#core-identifier-key
                                                 _id33676_)
                                                (gx#core-identifier-key
                                                 _new-id33678_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3367933682_
                                                               _g3368033685_)
                                                        (cons _g3367933682_
                                                              _g3368033685_))
                                                      '()
                                                      _L33634_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3368733690_
                                                               _g3368833693_)
                                                        (cons _g3368733690_
                                                              _g3368833693_))
                                                      '()
                                                      _L33632_))))
                                           (_imports33698_
                                            (gx#core-expand-import-source
                                             _L33635_))
                                           (_fold-e33718_
                                            (letrec ((_fold-e33701_
                                                      (lambda (_in33704_
                                                               _r33706_)
                                                        (if (gx#module-import?
                                                             _in33704_)
                                                            (let* ((_name33708_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-import-name _in33704_))
                           (_$e33711_ (hash-get _keytab33670_ _name33708_)))
                      (if _$e33711_
                          ((lambda (_rename33715_)
                             (begin
                               (hash-put! _found33673_ _name33708_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                      _in33704_
                                      _rename33715_)
                                     _r33706_)))
                           _$e33711_)
                          (cons _in33704_ _r33706_)))
                    (if (gx#import-set? _in33704_)
                        (foldl _fold-e33701_
                               _r33706_
                               (gx#import-set-imports _in33704_))
                        (cons _in33704_ _r33706_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33701_))
                                           (_new-imports33721_
                                            (foldl _fold-e33718_
                                                   '()
                                                   _imports33698_)))
                                      (begin
                                        (for-each
                                         (lambda (_id33726_)
                                           (if (hash-get
                                                _found33673_
                                                (gx#core-identifier-key
                                                 _id33726_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the import set"
                                                _stx33515_
                                                _id33726_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3372833731_
                                                           _g3372933734_)
                                                    (cons _g3372833731_
                                                          _g3372933734_))
                                                  '()
                                                  _L33634_)))
                                        (cons 'begin: _new-imports33721_)))
                                    (_g3351833551_ _g3351933555_)))
                              _new-id3353833626_
                              _id3353933629_
                              _hd3352733572_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3353233584_
                                                      _target3352933578_
                                                      '()
                                                      '()))
                                                   (_g3351833551_
                                                    _g3351933555_)))))
                                         (_g3351833551_ _g3351933555_))
                                     (_g3351833551_ _g3351933555_))))
                             (_g3351833551_ _g3351933555_))))
                     (_g3351833551_ _g3351933555_)))))
         (_g3351733737_ _stx33515_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-in|
    (gx#make-import-expander
     (lambda (_stx33743_)
       (let* ((_g3374633764_
               (lambda (_g3374733760_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3374733760_)))
              (_g3374533843_
               (lambda (_g3374733768_)
                 (if (gx#stx-pair? _g3374733768_)
                     (let ((_e3375033771_ (gx#syntax-e _g3374733768_)))
                       (let ((_hd3375133775_ (##car _e3375033771_))
                             (_tl3375233778_ (##cdr _e3375033771_)))
                         (if (gx#stx-pair? _tl3375233778_)
                             (let ((_e3375333781_
                                    (gx#syntax-e _tl3375233778_)))
                               (let ((_hd3375433785_ (##car _e3375333781_))
                                     (_tl3375533788_ (##cdr _e3375333781_)))
                                 (if (gx#stx-pair? _tl3375533788_)
                                     (let ((_e3375633791_
                                            (gx#syntax-e _tl3375533788_)))
                                       (let ((_hd3375733795_
                                              (##car _e3375633791_))
                                             (_tl3375833798_
                                              (##cdr _e3375633791_)))
                                         (if (gx#stx-null? _tl3375833798_)
                                             ((lambda (_L33801_ _L33803_)
                                                (if (gx#identifier? _L33801_)
                                                    (let* ((_pre33819_
                                                            (gx#stx-e
                                                             _L33801_))
                                                           (_imports33822_
                                                            (gx#core-expand-import-source
                                                             _L33803_))
                                                           (_rename-e33828_
                                                            (lambda (_name33825_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name33825_
                                                               _pre33819_)))
                                                           (_fold-e33838_
                                                            (letrec ((_fold-e33831_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_in33834_ _r33836_)
                                (if (gx#module-import? _in33834_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-import-rename|
                                           _in33834_
                                           (_rename-e33828_
                                            (gx#module-import-name _in33834_)))
                                          _r33836_)
                                    (if (gx#import-set? _in33834_)
                                        (foldl _fold-e33831_
                                               _r33836_
                                               (gx#import-set-imports
                                                _in33834_))
                                        (cons _in33834_ _r33836_))))))
                      _fold-e33831_)))
              (cons 'begin: (foldl _fold-e33838_ '() _imports33822_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3374633764_
                                                     _g3374733768_)))
                                              _hd3375733795_
                                              _hd3375433785_)
                                             (_g3374633764_ _g3374733768_))))
                                     (_g3374633764_ _g3374733768_))))
                             (_g3374633764_ _g3374733768_))))
                     (_g3374633764_ _g3374733768_)))))
         (_g3374533843_ _stx33743_)))))
  (define |gerbil/core$<module-sugar>[:0:]#except-out|
    (gx#make-export-expander
     (lambda (_stx33847_)
       (let* ((_g3385033874_
               (lambda (_g3385133870_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3385133870_)))
              (_g3384933996_
               (lambda (_g3385133878_)
                 (if (gx#stx-pair? _g3385133878_)
                     (let ((_e3385433881_ (gx#syntax-e _g3385133878_)))
                       (let ((_hd3385533885_ (##car _e3385433881_))
                             (_tl3385633888_ (##cdr _e3385433881_)))
                         (if (gx#stx-pair? _tl3385633888_)
                             (let ((_e3385733891_
                                    (gx#syntax-e _tl3385633888_)))
                               (let ((_hd3385833895_ (##car _e3385733891_))
                                     (_tl3385933898_ (##cdr _e3385733891_)))
                                 (if (gx#stx-pair/null? _tl3385933898_)
                                     (if (fx>= (gx#stx-length _tl3385933898_)
                                               '0)
                                         (let ((_g34946_
                                                (gx#syntax-split-splice
                                                 _tl3385933898_
                                                 '0)))
                                           (begin
                                             (let ((_g34947_
                                                    (values-count _g34946_)))
                                               (if (not (fx= _g34947_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34947_)))
                                             (let ((_target3386033901_
                                                    (values-ref _g34946_ 0))
                                                   (_tl3386233904_
                                                    (values-ref _g34946_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3386233904_)
                                                   (letrec ((_loop3386333907_
                                                             (lambda (_hd3386133911_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _id3386733914_)
                       (if (gx#stx-pair? _hd3386133911_)
                           (let ((_e3386433917_ (gx#syntax-e _hd3386133911_)))
                             (let ((_lp-hd3386533921_ (##car _e3386433917_))
                                   (_lp-tl3386633924_ (##cdr _e3386433917_)))
                               (_loop3386333907_
                                _lp-tl3386633924_
                                (cons _lp-hd3386533921_ _id3386733914_))))
                           (let ((_id3386833927_ (reverse _id3386733914_)))
                             ((lambda (_L33931_ _L33933_)
                                (if (gx#identifier-list?
                                     (begin
                                       '#!void
                                       (foldr (lambda (_g3395033953_
                                                       _g3395133956_)
                                                (cons _g3395033953_
                                                      _g3395133956_))
                                              '()
                                              _L33931_)))
                                    (let* ((_keys33967_
                                            (gx#stx-map
                                             gx#core-identifier-key
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3395833961_
                                                               _g3395933964_)
                                                        (cons _g3395833961_
                                                              _g3395933964_))
                                                      '()
                                                      _L33931_))))
                                           (_keytab33978_
                                            (let ((_ht33970_
                                                   (make-hash-table)))
                                              (begin
                                                (for-each
                                                 (lambda (_g3397233974_)
                                                   (hash-put!
                                                    _ht33970_
                                                    _g3397233974_
                                                    '#t))
                                                 _keys33967_)
                                                _ht33970_)))
                                           (_exports33981_
                                            (gx#core-expand-export-source
                                             _L33933_))
                                           (_fold-e33991_
                                            (letrec ((_fold-e33984_
                                                      (lambda (_out33987_
                                                               _r33989_)
                                                        (if (gx#module-export?
                                                             _out33987_)
                                                            (if (hash-get
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                         _keytab33978_
                         (gx#module-export-name _out33987_))
                        _r33989_
                        (cons _out33987_ _r33989_))
                    (if (gx#export-set? _out33987_)
                        (foldl _fold-e33984_
                               _r33989_
                               (gx#export-set-exports _out33987_))
                        _r33989_)))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e33984_)))
                                      (cons 'begin:
                                            (foldl _fold-e33991_
                                                   '()
                                                   _exports33981_)))
                                    (_g3385033874_ _g3385133878_)))
                              _id3386833927_
                              _hd3385833895_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3386333907_
                                                      _target3386033901_
                                                      '()))
                                                   (_g3385033874_
                                                    _g3385133878_)))))
                                         (_g3385033874_ _g3385133878_))
                                     (_g3385033874_ _g3385133878_))))
                             (_g3385033874_ _g3385133878_))))
                     (_g3385033874_ _g3385133878_)))))
         (_g3384933996_ _stx33847_)))))
  (define |gerbil/core$<module-sugar>[1]#module-export-rename|
    (lambda (_out34001_ _rename34003_)
      (gx#make-module-export
       (gx#module-export-context _out34001_)
       (gx#module-export-key _out34001_)
       (gx#module-export-phi _out34001_)
       _rename34003_
       (gx#module-export-weak? _out34001_))))
  (define |gerbil/core$<module-sugar>[:0:]#rename-out|
    (gx#make-export-expander
     (lambda (_stx34005_)
       (let* ((_g3400834041_
               (lambda (_g3400934037_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3400934037_)))
              (_g3400734227_
               (lambda (_g3400934045_)
                 (if (gx#stx-pair? _g3400934045_)
                     (let ((_e3401334048_ (gx#syntax-e _g3400934045_)))
                       (let ((_hd3401434052_ (##car _e3401334048_))
                             (_tl3401534055_ (##cdr _e3401334048_)))
                         (if (gx#stx-pair? _tl3401534055_)
                             (let ((_e3401634058_
                                    (gx#syntax-e _tl3401534055_)))
                               (let ((_hd3401734062_ (##car _e3401634058_))
                                     (_tl3401834065_ (##cdr _e3401634058_)))
                                 (if (gx#stx-pair/null? _tl3401834065_)
                                     (if (fx>= (gx#stx-length _tl3401834065_)
                                               '0)
                                         (let ((_g34948_
                                                (gx#syntax-split-splice
                                                 _tl3401834065_
                                                 '0)))
                                           (begin
                                             (let ((_g34949_
                                                    (values-count _g34948_)))
                                               (if (not (fx= _g34949_ 2))
                                                   (error "Context expects 2 values"
                                                          _g34949_)))
                                             (let ((_target3401934068_
                                                    (values-ref _g34948_ 0))
                                                   (_tl3402134071_
                                                    (values-ref _g34948_ 1)))
                                               (if (gx#stx-null?
                                                    _tl3402134071_)
                                                   (letrec ((_loop3402234074_
                                                             (lambda (_hd3402034078_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _new-id3402634081_
                              _id3402734083_)
                       (if (gx#stx-pair? _hd3402034078_)
                           (let ((_e3402334086_ (gx#syntax-e _hd3402034078_)))
                             (let ((_lp-hd3402434090_ (##car _e3402334086_))
                                   (_lp-tl3402534093_ (##cdr _e3402334086_)))
                               (if (gx#stx-pair? _lp-hd3402434090_)
                                   (let ((_e3403034096_
                                          (gx#syntax-e _lp-hd3402434090_)))
                                     (let ((_hd3403134100_
                                            (##car _e3403034096_))
                                           (_tl3403234103_
                                            (##cdr _e3403034096_)))
                                       (if (gx#stx-pair? _tl3403234103_)
                                           (let ((_e3403334106_
                                                  (gx#syntax-e
                                                   _tl3403234103_)))
                                             (let ((_hd3403434110_
                                                    (##car _e3403334106_))
                                                   (_tl3403534113_
                                                    (##cdr _e3403334106_)))
                                               (if (gx#stx-null?
                                                    _tl3403534113_)
                                                   (_loop3402234074_
                                                    _lp-tl3402534093_
                                                    (cons _hd3403434110_
                                                          _new-id3402634081_)
                                                    (cons _hd3403134100_
                                                          _id3402734083_))
                                                   (_g3400834041_
                                                    _g3400934045_))))
                                           (_g3400834041_ _g3400934045_))))
                                   (_g3400834041_ _g3400934045_))))
                           (let ((_new-id3402834116_
                                  (reverse _new-id3402634081_))
                                 (_id3402934119_ (reverse _id3402734083_)))
                             ((lambda (_L34122_ _L34124_ _L34125_)
                                (if (if (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3414334146_
                                                           _g3414434149_)
                                                    (cons _g3414334146_
                                                          _g3414434149_))
                                                  '()
                                                  _L34124_)))
                                        (gx#identifier-list?
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3415134154_
                                                           _g3415234157_)
                                                    (cons _g3415134154_
                                                          _g3415234157_))
                                                  '()
                                                  _L34122_)))
                                        '#f)
                                    (let* ((_keytab34160_ (make-hash-table))
                                           (_found34163_ (make-hash-table))
                                           (_g34950_
                                            (for-each
                                             (lambda (_id34166_ _new-id34168_)
                                               (hash-put!
                                                _keytab34160_
                                                (gx#core-identifier-key
                                                 _id34166_)
                                                (gx#core-identifier-key
                                                 _new-id34168_)))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3416934172_
                                                               _g3417034175_)
                                                        (cons _g3416934172_
                                                              _g3417034175_))
                                                      '()
                                                      _L34124_))
                                             (begin
                                               '#!void
                                               (foldr (lambda (_g3417734180_
                                                               _g3417834183_)
                                                        (cons _g3417734180_
                                                              _g3417834183_))
                                                      '()
                                                      _L34122_))))
                                           (_exports34188_
                                            (gx#core-expand-export-source
                                             _L34125_))
                                           (_fold-e34208_
                                            (letrec ((_fold-e34191_
                                                      (lambda (_out34194_
                                                               _r34196_)
                                                        (if (gx#module-export?
                                                             _out34194_)
                                                            (let* ((_name34198_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                            (gx#module-export-name _out34194_))
                           (_$e34201_ (hash-get _keytab34160_ _name34198_)))
                      (if _$e34201_
                          ((lambda (_rename34205_)
                             (begin
                               (hash-put! _found34163_ _name34198_ '#t)
                               (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                      _out34194_
                                      _rename34205_)
                                     _r34196_)))
                           _$e34201_)
                          (cons _out34194_ _r34196_)))
                    (if (gx#export-set? _out34194_)
                        (foldl _fold-e34191_
                               _r34196_
                               (gx#export-set-exports _out34194_))
                        (cons _out34194_ _r34196_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                              _fold-e34191_))
                                           (_new-exports34211_
                                            (foldl _fold-e34208_
                                                   '()
                                                   _exports34188_)))
                                      (begin
                                        (for-each
                                         (lambda (_id34216_)
                                           (if (hash-get
                                                _found34163_
                                                (gx#core-identifier-key
                                                 _id34216_))
                                               '#!void
                                               (gx#raise-syntax-error
                                                '#f
                                                '"Bad syntax; identifier is not in the export set"
                                                _stx34005_
                                                _id34216_)))
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3421834221_
                                                           _g3421934224_)
                                                    (cons _g3421834221_
                                                          _g3421934224_))
                                                  '()
                                                  _L34124_)))
                                        (cons 'begin: _new-exports34211_)))
                                    (_g3400834041_ _g3400934045_)))
                              _new-id3402834116_
                              _id3402934119_
                              _hd3401734062_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (_loop3402234074_
                                                      _target3401934068_
                                                      '()
                                                      '()))
                                                   (_g3400834041_
                                                    _g3400934045_)))))
                                         (_g3400834041_ _g3400934045_))
                                     (_g3400834041_ _g3400934045_))))
                             (_g3400834041_ _g3400934045_))))
                     (_g3400834041_ _g3400934045_)))))
         (_g3400734227_ _stx34005_)))))
  (define |gerbil/core$<module-sugar>[:0:]#prefix-out|
    (gx#make-export-expander
     (lambda (_stx34233_)
       (let* ((_g3423634254_
               (lambda (_g3423734250_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3423734250_)))
              (_g3423534333_
               (lambda (_g3423734258_)
                 (if (gx#stx-pair? _g3423734258_)
                     (let ((_e3424034261_ (gx#syntax-e _g3423734258_)))
                       (let ((_hd3424134265_ (##car _e3424034261_))
                             (_tl3424234268_ (##cdr _e3424034261_)))
                         (if (gx#stx-pair? _tl3424234268_)
                             (let ((_e3424334271_
                                    (gx#syntax-e _tl3424234268_)))
                               (let ((_hd3424434275_ (##car _e3424334271_))
                                     (_tl3424534278_ (##cdr _e3424334271_)))
                                 (if (gx#stx-pair? _tl3424534278_)
                                     (let ((_e3424634281_
                                            (gx#syntax-e _tl3424534278_)))
                                       (let ((_hd3424734285_
                                              (##car _e3424634281_))
                                             (_tl3424834288_
                                              (##cdr _e3424634281_)))
                                         (if (gx#stx-null? _tl3424834288_)
                                             ((lambda (_L34291_ _L34293_)
                                                (if (gx#identifier? _L34291_)
                                                    (let* ((_pre34309_
                                                            (gx#stx-e
                                                             _L34291_))
                                                           (_exports34312_
                                                            (gx#core-expand-export-source
                                                             _L34293_))
                                                           (_rename-e34318_
                                                            (lambda (_name34315_)
                                                              (|gerbil/core$<module-sugar>[1]#prefix-identifier-key|
                                                               _name34315_
                                                               _pre34309_)))
                                                           (_fold-e34328_
                                                            (letrec ((_fold-e34321_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              (lambda (_out34324_ _r34326_)
                                (if (gx#module-export? _out34324_)
                                    (cons (|gerbil/core$<module-sugar>[1]#module-export-rename|
                                           _out34324_
                                           (_rename-e34318_
                                            (gx#module-export-name
                                             _out34324_)))
                                          _r34326_)
                                    (if (gx#export-set? _out34324_)
                                        (foldl _fold-e34321_
                                               _r34326_
                                               (gx#export-set-exports
                                                _out34324_))
                                        (cons _out34324_ _r34326_))))))
                      _fold-e34321_)))
              (cons 'begin: (foldl _fold-e34328_ '() _exports34312_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                    (_g3423634254_
                                                     _g3423734258_)))
                                              _hd3424734285_
                                              _hd3424434275_)
                                             (_g3423634254_ _g3423734258_))))
                                     (_g3423634254_ _g3423734258_))))
                             (_g3423634254_ _g3423734258_))))
                     (_g3423634254_ _g3423734258_)))))
         (_g3423534333_ _stx34233_)))))
  (define |gerbil/core$<module-sugar>[:0:]#struct-out|
    (gx#make-export-expander
     (lambda (_stx34337_)
       (let* ((_g3434034360_
               (lambda (_g3434134356_)
                 (gx#raise-syntax-error '#f '"Bad syntax" _g3434134356_)))
              (_g3433934595_
               (lambda (_g3434134364_)
                 (if (gx#stx-pair? _g3434134364_)
                     (let ((_e3434334367_ (gx#syntax-e _g3434134364_)))
                       (let ((_hd3434434371_ (##car _e3434334367_))
                             (_tl3434534374_ (##cdr _e3434334367_)))
                         (if (gx#stx-pair/null? _tl3434534374_)
                             (if (fx>= (gx#stx-length _tl3434534374_) '0)
                                 (let ((_g34951_
                                        (gx#syntax-split-splice
                                         _tl3434534374_
                                         '0)))
                                   (begin
                                     (let ((_g34952_ (values-count _g34951_)))
                                       (if (not (fx= _g34952_ 2))
                                           (error "Context expects 2 values"
                                                  _g34952_)))
                                     (let ((_target3434634377_
                                            (values-ref _g34951_ 0))
                                           (_tl3434834380_
                                            (values-ref _g34951_ 1)))
                                       (if (gx#stx-null? _tl3434834380_)
                                           (letrec ((_loop3434934383_
                                                     (lambda (_hd3434734387_
                                                              _id3435334390_)
                                                       (if (gx#stx-pair?
                                                            _hd3434734387_)
                                                           (let ((_e3435034393_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (gx#syntax-e _hd3434734387_)))
                     (let ((_lp-hd3435134397_ (##car _e3435034393_))
                           (_lp-tl3435234400_ (##cdr _e3435034393_)))
                       (_loop3434934383_
                        _lp-tl3435234400_
                        (cons _lp-hd3435134397_ _id3435334390_))))
                   (let ((_id3435434403_ (reverse _id3435334390_)))
                     ((lambda (_L34407_)
                        (let _lp34423_ ((_rest34426_
                                         (begin
                                           '#!void
                                           (foldr (lambda (_g3458634589_
                                                           _g3458734592_)
                                                    (cons _g3458634589_
                                                          _g3458734592_))
                                                  '()
                                                  _L34407_)))
                                        (_ids34428_ '()))
                          (let* ((_g3443134443_
                                  (lambda (_g3443234439_)
                                    (gx#raise-syntax-error
                                     '#f
                                     '"Bad syntax"
                                     _g3443234439_)))
                                 (_g3443034454_
                                  (lambda (_g3443234447_)
                                    ((lambda () (cons 'begin: _ids34428_)))))
                                 (_g3442934583_
                                  (lambda (_g3443234458_)
                                    (if (gx#stx-pair? _g3443234458_)
                                        (let ((_e3443534461_
                                               (gx#syntax-e _g3443234458_)))
                                          (let ((_hd3443634465_
                                                 (##car _e3443534461_))
                                                (_tl3443734468_
                                                 (##cdr _e3443534461_)))
                                            ((lambda (_L34471_ _L34473_)
                                               (let ((_info34488_
                                                      (gx#syntax-local-value
                                                       _L34473_
                                                       false)))
                                                 (if (|gerbil/core$<MOP>$<MOP:2>[1]#expander-type-info?|
                                                      _info34488_)
                                                     (let* ((_g3449034507_
                                                             (slot-ref
                                                              _info34488_
                                                              'expander-identifiers))
                                                            (_E3449234513_
                                                             (lambda ()
                                                               (error '"No clause matching"
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                              _g3449034507_)))
                    (_K3449334525_
                     (lambda (_setf34517_
                              _getf34519_
                              _type?34520_
                              _make-type34521_
                              _type::t34522_
                              _super34523_)
                       (_lp34423_
                        _L34471_
                        (cons _L34473_
                              (cons _type::t34522_
                                    (cons _make-type34521_
                                          (cons _type?34520_
                                                (foldr cons
                                                       (foldr cons
                                                              _ids34428_
                                                              _setf34517_)
                                                       _getf34519_)))))))))
               (if (##pair? _g3449034507_)
                   (let ((_hd3449434529_ (##car _g3449034507_))
                         (_tl3449534532_ (##cdr _g3449034507_)))
                     (let ((_super34535_ _hd3449434529_))
                       (if (##pair? _tl3449534532_)
                           (let ((_hd3449634538_ (##car _tl3449534532_))
                                 (_tl3449734541_ (##cdr _tl3449534532_)))
                             (let ((_type::t34544_ _hd3449634538_))
                               (if (##pair? _tl3449734541_)
                                   (let ((_hd3449834547_
                                          (##car _tl3449734541_))
                                         (_tl3449934550_
                                          (##cdr _tl3449734541_)))
                                     (let ((_make-type34553_ _hd3449834547_))
                                       (if (##pair? _tl3449934550_)
                                           (let ((_hd3450034556_
                                                  (##car _tl3449934550_))
                                                 (_tl3450134559_
                                                  (##cdr _tl3449934550_)))
                                             (let ((_type?34562_
                                                    _hd3450034556_))
                                               (if (##pair? _tl3450134559_)
                                                   (let ((_hd3450234565_
                                                          (##car _tl3450134559_))
                                                         (_tl3450334568_
                                                          (##cdr _tl3450134559_)))
                                                     (let ((_getf34571_
                                                            _hd3450234565_))
                                                       (if (##pair? _tl3450334568_)
                                                           (let ((_hd3450434574_
;;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                          (##car _tl3450334568_))
                         (_tl3450534577_ (##cdr _tl3450334568_)))
                     (let ((_setf34580_ _hd3450434574_))
                       (if (##null? _tl3450534577_)
                           (_K3449334525_
                            _setf34580_
                            _getf34571_
                            _type?34562_
                            _make-type34553_
                            _type::t34544_
                            _super34535_)
                           (_E3449234513_))))
                   (_E3449234513_))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                   (_E3449234513_))))
                                           (_E3449234513_))))
                                   (_E3449234513_))))
                           (_E3449234513_))))
                   (_E3449234513_)))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                                     (gx#raise-syntax-error
                                                      '#f
                                                      '"Incomplete type info"
                                                      _stx34337_
                                                      _L34473_))))
                                             _tl3443734468_
                                             _hd3443634465_)))
                                        (_g3443034454_ _g3443234458_)))))
                            (_g3442934583_ _rest34426_))))
                      _id3435434403_))))))
;;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                                             (_loop3434934383_
                                              _target3434634377_
                                              '()))
                                           (_g3434034360_ _g3434134364_)))))
                                 (_g3434034360_ _g3434134364_))
                             (_g3434034360_ _g3434134364_))))
                     (_g3434034360_ _g3434134364_)))))
         (_g3433934595_ _stx34337_))))))
